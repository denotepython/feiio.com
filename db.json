{"meta":{"version":1,"warehouse":"1.0.3"},"models":{"Asset":[{"_id":"themes/eiio/source/styles/zenburn.css","path":"styles/zenburn.css","modified":0},{"_id":"themes/eiio/source/styles/xt256.css","path":"styles/xt256.css","modified":0},{"_id":"themes/eiio/source/styles/xcode.css","path":"styles/xcode.css","modified":0},{"_id":"themes/eiio/source/styles/vs.css","path":"styles/vs.css","modified":0},{"_id":"themes/eiio/source/styles/tomorrow.css","path":"styles/tomorrow.css","modified":0},{"_id":"themes/eiio/source/styles/tomorrow-night.css","path":"styles/tomorrow-night.css","modified":0},{"_id":"themes/eiio/source/styles/tomorrow-night-eighties.css","path":"styles/tomorrow-night-eighties.css","modified":0},{"_id":"themes/eiio/source/styles/tomorrow-night-bright.css","path":"styles/tomorrow-night-bright.css","modified":0},{"_id":"themes/eiio/source/styles/tomorrow-night-blue.css","path":"styles/tomorrow-night-blue.css","modified":0},{"_id":"themes/eiio/source/styles/sunburst.css","path":"styles/sunburst.css","modified":0},{"_id":"themes/eiio/source/styles/solarized-light.css","path":"styles/solarized-light.css","modified":0},{"_id":"themes/eiio/source/styles/solarized-dark.css","path":"styles/solarized-dark.css","modified":0},{"_id":"themes/eiio/source/styles/school-book.png","path":"styles/school-book.png","modified":0},{"_id":"themes/eiio/source/styles/school-book.css","path":"styles/school-book.css","modified":0},{"_id":"themes/eiio/source/styles/rainbow.css","path":"styles/rainbow.css","modified":0},{"_id":"themes/eiio/source/styles/railscasts.css","path":"styles/railscasts.css","modified":0},{"_id":"themes/eiio/source/styles/qtcreator_light.css","path":"styles/qtcreator_light.css","modified":0},{"_id":"themes/eiio/source/styles/qtcreator_dark.css","path":"styles/qtcreator_dark.css","modified":0},{"_id":"themes/eiio/source/styles/purebasic.css","path":"styles/purebasic.css","modified":0},{"_id":"themes/eiio/source/styles/pojoaque.jpg","path":"styles/pojoaque.jpg","modified":0},{"_id":"themes/eiio/source/styles/pojoaque.css","path":"styles/pojoaque.css","modified":0},{"_id":"themes/eiio/source/styles/paraiso-light.css","path":"styles/paraiso-light.css","modified":0},{"_id":"themes/eiio/source/styles/paraiso-dark.css","path":"styles/paraiso-dark.css","modified":0},{"_id":"themes/eiio/source/styles/ocean.css","path":"styles/ocean.css","modified":0},{"_id":"themes/eiio/source/styles/obsidian.css","path":"styles/obsidian.css","modified":0},{"_id":"themes/eiio/source/styles/monokai.css","path":"styles/monokai.css","modified":0},{"_id":"themes/eiio/source/styles/monokai-sublime.css","path":"styles/monokai-sublime.css","modified":0},{"_id":"themes/eiio/source/styles/mono-blue.css","path":"styles/mono-blue.css","modified":0},{"_id":"themes/eiio/source/styles/magula.css","path":"styles/magula.css","modified":0},{"_id":"themes/eiio/source/styles/kimbie.light.css","path":"styles/kimbie.light.css","modified":0},{"_id":"themes/eiio/source/styles/kimbie.dark.css","path":"styles/kimbie.dark.css","modified":0},{"_id":"themes/eiio/source/styles/ir-black.css","path":"styles/ir-black.css","modified":0},{"_id":"themes/eiio/source/styles/idea.css","path":"styles/idea.css","modified":0},{"_id":"themes/eiio/source/styles/hybrid.css","path":"styles/hybrid.css","modified":0},{"_id":"themes/eiio/source/styles/hopscotch.css","path":"styles/hopscotch.css","modified":0},{"_id":"themes/eiio/source/styles/gruvbox-light.css","path":"styles/gruvbox-light.css","modified":0},{"_id":"themes/eiio/source/styles/gruvbox-dark.css","path":"styles/gruvbox-dark.css","modified":0},{"_id":"themes/eiio/source/styles/grayscale.css","path":"styles/grayscale.css","modified":0},{"_id":"themes/eiio/source/styles/googlecode.css","path":"styles/googlecode.css","modified":0},{"_id":"themes/eiio/source/styles/github.css","path":"styles/github.css","modified":0},{"_id":"themes/eiio/source/styles/github-gist.css","path":"styles/github-gist.css","modified":0},{"_id":"themes/eiio/source/styles/foundation.css","path":"styles/foundation.css","modified":0},{"_id":"themes/eiio/source/styles/far.css","path":"styles/far.css","modified":0},{"_id":"themes/eiio/source/styles/dracula.css","path":"styles/dracula.css","modified":0},{"_id":"themes/eiio/source/styles/docco.css","path":"styles/docco.css","modified":0},{"_id":"themes/eiio/source/styles/default.css","path":"styles/default.css","modified":0},{"_id":"themes/eiio/source/styles/darkula.css","path":"styles/darkula.css","modified":0},{"_id":"themes/eiio/source/styles/dark.css","path":"styles/dark.css","modified":0},{"_id":"themes/eiio/source/styles/darcula.css","path":"styles/darcula.css","modified":0},{"_id":"themes/eiio/source/styles/color-brewer.css","path":"styles/color-brewer.css","modified":0},{"_id":"themes/eiio/source/styles/codepen-embed.css","path":"styles/codepen-embed.css","modified":0},{"_id":"themes/eiio/source/styles/brown-papersq.png","path":"styles/brown-papersq.png","modified":0},{"_id":"themes/eiio/source/styles/brown-paper.css","path":"styles/brown-paper.css","modified":0},{"_id":"themes/eiio/source/styles/atom-one-light.css","path":"styles/atom-one-light.css","modified":0},{"_id":"themes/eiio/source/styles/atom-one-dark.css","path":"styles/atom-one-dark.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-sulphurpool-light.css","path":"styles/atelier-sulphurpool-light.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-sulphurpool-dark.css","path":"styles/atelier-sulphurpool-dark.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-seaside-light.css","path":"styles/atelier-seaside-light.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-seaside-dark.css","path":"styles/atelier-seaside-dark.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-savanna-light.css","path":"styles/atelier-savanna-light.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-savanna-dark.css","path":"styles/atelier-savanna-dark.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-plateau-light.css","path":"styles/atelier-plateau-light.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-plateau-dark.css","path":"styles/atelier-plateau-dark.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-lakeside-light.css","path":"styles/atelier-lakeside-light.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-lakeside-dark.css","path":"styles/atelier-lakeside-dark.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-heath-light.css","path":"styles/atelier-heath-light.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-heath-dark.css","path":"styles/atelier-heath-dark.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-forest-light.css","path":"styles/atelier-forest-light.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-forest-dark.css","path":"styles/atelier-forest-dark.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-estuary-light.css","path":"styles/atelier-estuary-light.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-estuary-dark.css","path":"styles/atelier-estuary-dark.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-dune-light.css","path":"styles/atelier-dune-light.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-dune-dark.css","path":"styles/atelier-dune-dark.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-cave-light.css","path":"styles/atelier-cave-light.css","modified":0},{"_id":"themes/eiio/source/styles/atelier-cave-dark.css","path":"styles/atelier-cave-dark.css","modified":0},{"_id":"themes/eiio/source/styles/ascetic.css","path":"styles/ascetic.css","modified":0},{"_id":"themes/eiio/source/styles/arta.css","path":"styles/arta.css","modified":0},{"_id":"themes/eiio/source/styles/arduino-light.css","path":"styles/arduino-light.css","modified":0},{"_id":"themes/eiio/source/styles/androidstudio.css","path":"styles/androidstudio.css","modified":0},{"_id":"themes/eiio/source/styles/agate.css","path":"styles/agate.css","modified":0},{"_id":"themes/eiio/source/js/umd/util.js","path":"js/umd/util.js","modified":0},{"_id":"themes/eiio/source/js/umd/tooltip.js","path":"js/umd/tooltip.js","modified":0},{"_id":"themes/eiio/source/js/umd/tab.js","path":"js/umd/tab.js","modified":0},{"_id":"themes/eiio/source/js/umd/scrollspy.js","path":"js/umd/scrollspy.js","modified":0},{"_id":"themes/eiio/source/js/umd/popover.js","path":"js/umd/popover.js","modified":0},{"_id":"themes/eiio/source/js/umd/modal.js","path":"js/umd/modal.js","modified":0},{"_id":"themes/eiio/source/js/umd/dropdown.js","path":"js/umd/dropdown.js","modified":0},{"_id":"themes/eiio/source/js/umd/collapse.js","path":"js/umd/collapse.js","modified":0},{"_id":"themes/eiio/source/js/umd/carousel.js","path":"js/umd/carousel.js","modified":0},{"_id":"themes/eiio/source/js/umd/button.js","path":"js/umd/button.js","modified":0},{"_id":"themes/eiio/source/js/umd/alert.js","path":"js/umd/alert.js","modified":0},{"_id":"themes/eiio/source/js/npm.js","path":"js/npm.js","modified":0},{"_id":"themes/eiio/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0},{"_id":"themes/eiio/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":0},{"_id":"themes/eiio/source/js/bootstrap.js","path":"js/bootstrap.js","modified":0},{"_id":"themes/eiio/source/images/weibo_39.129973474801px_1193419_easyicon.net.png","path":"images/weibo_39.129973474801px_1193419_easyicon.net.png","modified":0},{"_id":"themes/eiio/source/images/github_copyrighted_32px_1169845_easyicon.net.png","path":"images/github_copyrighted_32px_1169845_easyicon.net.png","modified":0},{"_id":"themes/eiio/source/images/douban_32px_1193382_easyicon.netdsas.png","path":"images/douban_32px_1193382_easyicon.netdsas.png","modified":0},{"_id":"themes/eiio/source/images/douban_32px_1193382_easyicon.net.png","path":"images/douban_32px_1193382_easyicon.net.png","modified":0},{"_id":"themes/eiio/source/images/about.jpg","path":"images/about.jpg","modified":0},{"_id":"themes/eiio/source/highlight.pack.js","path":"highlight.pack.js","modified":0},{"_id":"themes/eiio/source/css/main.css","path":"css/main.css","modified":0},{"_id":"themes/eiio/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":0},{"_id":"themes/eiio/source/css/bootstrap.css","path":"css/bootstrap.css","modified":0},{"_id":"source/keybase.txt","path":"keybase.txt","modified":0},{"_id":"source/images/kindle.jpg","path":"images/kindle.jpg","modified":0},{"_id":"source/images/2016-7-3.jpg","path":"images/2016-7-3.jpg","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shAutoloader.js","path":"highlight/scripts/shAutoloader.js","modified":0},{"_id":"themes/eiio/source/highlight/styles/shThemeRDark.css","path":"highlight/styles/shThemeRDark.css","modified":0},{"_id":"themes/eiio/source/highlight/styles/shThemeMidnight.css","path":"highlight/styles/shThemeMidnight.css","modified":0},{"_id":"themes/eiio/source/highlight/styles/shThemeMDUltra.css","path":"highlight/styles/shThemeMDUltra.css","modified":0},{"_id":"themes/eiio/source/highlight/styles/shThemeFadeToGrey.css","path":"highlight/styles/shThemeFadeToGrey.css","modified":0},{"_id":"themes/eiio/source/highlight/styles/shThemeEmacs.css","path":"highlight/styles/shThemeEmacs.css","modified":0},{"_id":"themes/eiio/source/highlight/styles/shThemeEclipse.css","path":"highlight/styles/shThemeEclipse.css","modified":0},{"_id":"themes/eiio/source/highlight/styles/shThemeDjango.css","path":"highlight/styles/shThemeDjango.css","modified":0},{"_id":"themes/eiio/source/highlight/styles/shThemeDefault.css","path":"highlight/styles/shThemeDefault.css","modified":0},{"_id":"themes/eiio/source/highlight/styles/shCoreRDark.css","path":"highlight/styles/shCoreRDark.css","modified":0},{"_id":"themes/eiio/source/highlight/styles/shCoreMidnight.css","path":"highlight/styles/shCoreMidnight.css","modified":0},{"_id":"themes/eiio/source/highlight/styles/shCoreMDUltra.css","path":"highlight/styles/shCoreMDUltra.css","modified":0},{"_id":"themes/eiio/source/highlight/styles/shCoreFadeToGrey.css","path":"highlight/styles/shCoreFadeToGrey.css","modified":0},{"_id":"themes/eiio/source/highlight/styles/shCoreEmacs.css","path":"highlight/styles/shCoreEmacs.css","modified":0},{"_id":"themes/eiio/source/highlight/styles/shCoreEclipse.css","path":"highlight/styles/shCoreEclipse.css","modified":0},{"_id":"themes/eiio/source/highlight/styles/shCoreDjango.css","path":"highlight/styles/shCoreDjango.css","modified":0},{"_id":"themes/eiio/source/highlight/styles/shCoreDefault.css","path":"highlight/styles/shCoreDefault.css","modified":0},{"_id":"themes/eiio/source/highlight/styles/shCore.css","path":"highlight/styles/shCore.css","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shLegacy.js","path":"highlight/scripts/shLegacy.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shCore.js","path":"highlight/scripts/shCore.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushXml.js","path":"highlight/scripts/shBrushXml.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushVb.js","path":"highlight/scripts/shBrushVb.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushSql.js","path":"highlight/scripts/shBrushSql.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushScala.js","path":"highlight/scripts/shBrushScala.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushSass.js","path":"highlight/scripts/shBrushSass.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushRuby.js","path":"highlight/scripts/shBrushRuby.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushPython.js","path":"highlight/scripts/shBrushPython.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushPowerShell.js","path":"highlight/scripts/shBrushPowerShell.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushPlain.js","path":"highlight/scripts/shBrushPlain.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushPhp.js","path":"highlight/scripts/shBrushPhp.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushPerl.js","path":"highlight/scripts/shBrushPerl.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushJavaFX.js","path":"highlight/scripts/shBrushJavaFX.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushJava.js","path":"highlight/scripts/shBrushJava.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushJScript.js","path":"highlight/scripts/shBrushJScript.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushGroovy.js","path":"highlight/scripts/shBrushGroovy.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushErlang.js","path":"highlight/scripts/shBrushErlang.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushDiff.js","path":"highlight/scripts/shBrushDiff.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushDelphi.js","path":"highlight/scripts/shBrushDelphi.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushCss.js","path":"highlight/scripts/shBrushCss.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushCpp.js","path":"highlight/scripts/shBrushCpp.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushColdFusion.js","path":"highlight/scripts/shBrushColdFusion.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushCSharp.js","path":"highlight/scripts/shBrushCSharp.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushBash.js","path":"highlight/scripts/shBrushBash.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushAppleScript.js","path":"highlight/scripts/shBrushAppleScript.js","modified":0},{"_id":"themes/eiio/source/highlight/scripts/shBrushAS3.js","path":"highlight/scripts/shBrushAS3.js","modified":0},{"_id":"source/images/WechatIMG5.jpg","path":"images/WechatIMG5.jpg","modified":0}],"Cache":[{"_id":"source/_posts/12月的感慨.md","shasum":"bf397b1a8493e80d1e43e612c36852082a9c8e3b","modified":1451793409000},{"_id":"source/_posts/2016-02-14-new-year.md","shasum":"7a1d497a0a2ea31369d503b9c1fece5bdea7da8e","modified":1455514427000},{"_id":"source/_posts/Blog Theme折腾记.md","shasum":"a26a1c2ef0695063828c950f8f8d782d5ff964f2","modified":1471158616000},{"_id":"source/_posts/Blog折腾记-Octopress篇.md","shasum":"a16622c9bd67763569272105d4e7b3b336805d94","modified":1451793409000},{"_id":"source/_posts/C++程序与内存.md","shasum":"eb62e6723d401e4b571c4d051b29602d321f0d47","modified":1451793409000},{"_id":"source/_posts/Canon卡农.md","shasum":"b25ce1df11e91283db394905b33a293a2a04ec58","modified":1451793409000},{"_id":"source/_posts/CentOS7-0搭建VPN-PPTP-服务器.md","shasum":"30931f6a4f6f8f81952793026bba914e08aeda1a","modified":1471749498000},{"_id":"source/_posts/Emacs-org-mode对表格的操作.md","shasum":"e1e12c0c386fa03eae1a50eadfd6357fce43d4a5","modified":1471749567000},{"_id":"source/_posts/Flashbuilder4.7或Eclipse中修改自动注释的@author.md","shasum":"6b6875eea5f5fc8215dc5047f6f8d0dba1bed91f","modified":1451793409000},{"_id":"source/_posts/Git学习笔记.md","shasum":"0c6703a69aec7c2b47550356fcab8e29f6fc3e72","modified":1451793409000},{"_id":"source/_posts/Google工作整理术-读书笔记.md","shasum":"0e2ada5e8092ce41371fed73c83a94028318094f","modified":1457239070000},{"_id":"source/_posts/Lua和C:C++的数据交互.md","shasum":"7d143f70f8cdd7edf28fffedb4257de531c02a93","modified":1451793409000},{"_id":"source/_posts/MacOS不能完全清除垃圾篓的解决方法.md","shasum":"49b1b0fd691f2e9d78df70545ebda1617e272c10","modified":1451793409000},{"_id":"source/_posts/OpenGL-ES中的顶点数组、顶点属性、缓冲区对象.md","shasum":"0b3e1f3d05abb0365abc38c0186abeecca64d1d3","modified":1451793409000},{"_id":"source/_posts/WebP图片文件格式的了解总结.md","shasum":"bc2d3b20e51ed0a8a2f304bc86b4e14cb0e44c85","modified":1451793409000},{"_id":"source/_posts/ZeroBrane-Studio自定义代码提示.md","shasum":"c7c9d00a1e974d466fb05dec3d62160fe0735945","modified":1451793409000},{"_id":"source/_posts/centos7-0-lamp.md","shasum":"7e277988dd6b8e680806577b2e37a69854349cc1","modified":1451793409000},{"_id":"source/_posts/cocos2d-x中lua层调用Object-C和Java中接口的方法.md","shasum":"230b27642fa92f85606fa5b84a58957a9809fbae","modified":1451793409000},{"_id":"source/_posts/curl库的用法.md","shasum":"3fa4439456d0c5d0e45ee855145eeda86701ac04","modified":1451793409000},{"_id":"source/_posts/git-submodule使用总结.md","shasum":"928c1ff45835e16d2f39b29900c75d4bbaa6f503","modified":1451793409000},{"_id":"source/_posts/《把时间当成朋友》- 估算时间.md","shasum":"5502db26cd35c9747be3f5fb159c778946aa4c4b","modified":1451793409000},{"_id":"source/_posts/一切恢复.md","shasum":"b101ae503ce1f96c6c9651b9e6bf6fbc2bc97485","modified":1451793409000},{"_id":"source/_posts/不要在游戏中输掉了你的素质.md","shasum":"84388ac58bfef6ecf492776cc8259197427e31d3","modified":1451793409000},{"_id":"source/_posts/世事无常.md","shasum":"99ee0db3dd2476978d9d1839c395c32481b0234d","modified":1451793409000},{"_id":"source/_posts/二分搜索算法.md","shasum":"30146c9e9136f3a0b61f2d4cf47bb73f232248e0","modified":1451793409000},{"_id":"source/_posts/从减肥到健康的目标总结.md","shasum":"9c22b0a78695a6c0e6db534b385fbb9b0e9ebc7d","modified":1451793409000},{"_id":"source/_posts/从零开始到没有安全的工作.md","shasum":"03865b396b7395cf1c6e77fe3e87ed07779364e5","modified":1458482988000},{"_id":"source/_posts/使用Let-s-Encrypt让blog支持https吧.md","shasum":"1fb3076fb16e2b0c3ee0ed4ab05beba7e62887fa","modified":1471750426000},{"_id":"source/_posts/办证路上.md","shasum":"3bde8b96a16bc5a7f7460309a58bdf57e81c9528","modified":1460519887000},{"_id":"source/_posts/劳而无获.md","shasum":"593c60b0b6b5198cbaf25ac8d749ff67b55dbc32","modified":1451793409000},{"_id":"source/_posts/可怜的小猫,无能的虐猫者.md","shasum":"aa1f2a2e9901b0cb9df8b172397ac1f965f9ef28","modified":1451793409000},{"_id":"source/_posts/失败的选择.md","shasum":"d9101158ebf61bfb86e35ae931a9106858e097b7","modified":1451793409000},{"_id":"source/_posts/往年的习惯.md","shasum":"3ac0162fefb39f975053731d736afcb9e98fdf19","modified":1451794953000},{"_id":"source/_posts/我为什么要学Emacs及基础操作记录.md","shasum":"b92f844dc2c6517130f07690dae452eb724c2597","modified":1451793409000},{"_id":"source/_posts/按既定的路线前行.md","shasum":"972f7ecb759edf9961397b427700b89bbd0a5055","modified":1451793409000},{"_id":"source/_posts/新生活即将开启.md","shasum":"5280cbcde9e5c5942931b96d39f9455bc27ead3d","modified":1451793409000},{"_id":"source/_posts/更换Blog的服务器.md","shasum":"fc90b903df4b111ee9571b99da8710074e29c0e7","modified":1451793409000},{"_id":"source/_posts/更换域名为feiio.com.md","shasum":"c36a36725a7e41429234527264177050e1497d33","modified":1451793409000},{"_id":"source/_posts/有一种行为叫着瞎折腾.md","shasum":"70d49dd3fb78b24a781f3d8861ecd24805079bdc","modified":1451793409000},{"_id":"source/_posts/有时候习惯上了某些东西..md","shasum":"202f792065be7151e373ed96759b06ccac00c058","modified":1451793409000},{"_id":"source/_posts/有时候我们都是孤独患者.md","shasum":"3a67a16a132efce0b43006c166a9edac3087c31a","modified":1451793409000},{"_id":"source/_posts/机器学习常用资源.md","shasum":"2106196a880c834927240d9fe853081855a59d19","modified":1451793409000},{"_id":"source/_posts/树莓派-Raspberry-Pi-Energency-mode.md","shasum":"9719c829328905aad6d0936c4eb2e4061b15743a","modified":1467551099000},{"_id":"source/_posts/永恒的终结读书笔记.md","shasum":"ed627bbe9733e77832587eaf5b92a71a90e732f9","modified":1451793409000},{"_id":"source/_posts/现实和梦想.md","shasum":"d18580ea91749ab31b17e4b0c8b4d1188b9607d6","modified":1451793409000},{"_id":"source/_posts/生成cocos2d-x离线API文档.md","shasum":"c4479e0679b6c360a481afc6e2f7e00b6e4599ca","modified":1451793409000},{"_id":"source/_posts/等待的三天结束了半年的时间.md","shasum":"1736d1f9effa1dec9d80fd9b66efba29aab1a8b3","modified":1451793409000},{"_id":"source/_posts/纪念陪伴4年多的Kindle.md","shasum":"8410b45deb09760099fdec5a2fc68666e1b89712","modified":1462973924000},{"_id":"source/_posts/美剧-硅谷-观后感.md","shasum":"a5800906648a725cac5394009af253be8e7b5066","modified":1451793409000},{"_id":"source/_posts/胡思乱想的担忧.md","shasum":"74279c54df4d3491177b4d8b3f544213e86066d5","modified":1451793409000},{"_id":"source/_posts/近来招人的经历.md","shasum":"adbaa445995f462f3d4d2b5297e38da24034335c","modified":1451793409000},{"_id":"source/_posts/这一年.md","shasum":"88e355e98ac63ab9a280bac6f895357be1057edd","modified":1451793409000},{"_id":"source/_posts/选择.md","shasum":"5409b97092b5c14ac1cc173096baf1e11d6efefa","modified":1451793409000},{"_id":"source/_posts/那时是那么的熟悉,这时又是那样的陌生.md","shasum":"84066e594103c67007288ff809b965e718585b06","modified":1451793409000},{"_id":"source/about-us/index.md","shasum":"111a02e8c9f1b357798f16a7f1f8c6873a8af2ad","modified":1472566155000},{"_id":"source/categories/index.md","shasum":"cdf2eb596dd4f304e224ae2223109b44cc2f62cb","modified":1451793524000},{"_id":"source/googleae3d3691bbe56e55.html","shasum":"a618a1016d6c2ed8ac3abd12e7c3a759751fb2e3","modified":1462348001000},{"_id":"source/keybase.txt","shasum":"5df3c5e03ab9a3d5066c135e71774e14ae07c84d","modified":1471746814000},{"_id":"source/link/index.md","shasum":"ba108d666a0d873728c7c7da3942d9d8ad37dac1","modified":1473256890000},{"_id":"source/tags/index.md","shasum":"f3dde38b55cca10485b94e7960c9fa2edcce7e77","modified":1451793524000},{"_id":"source/images/2016-7-3.jpg","shasum":"7c42af8d58665929759c4f485e4ae5cfb673375a","modified":1471764314000},{"_id":"source/images/kindle.jpg","shasum":"8019f1d0baee27b456b89dea08b0ea0d919167ac","modified":1462973472000},{"_id":"themes/eiio/_config.yml","shasum":"2a09d6427862c2e81963b43340cedfc1de51cc54","modified":1471145559000},{"_id":"themes/eiio/layout/index.ejs","shasum":"6c84ebf08a9b13009a6b2fcee946c65d726b7d45","modified":1472565336000},{"_id":"themes/eiio/layout/layout.ejs","shasum":"c713c8e222d2c619faadfb5aab1ca660759de5b6","modified":1472565646000},{"_id":"themes/eiio/layout/page.ejs","shasum":"c2c188b1e124cb869faeb022d984335c5972f34a","modified":1471144067000},{"_id":"themes/eiio/layout/post.ejs","shasum":"de0c42cb606be74a0470a97767898c5c3dd092b7","modified":1471749990000},{"_id":"themes/eiio/layout/tag.ejs","shasum":"8c4220b016413e75b5bd89e0558fb4623f1854b0","modified":1471145245000},{"_id":"themes/eiio/source/highlight.pack.js","shasum":"57aab3bc31019c42d2c96e19f25334bb547ca4f1","modified":1471098560000},{"_id":"themes/eiio/source/images/douban_32px_1193382_easyicon.net.png","shasum":"74cc64f983a5e01740d93015a9181947b22562a4","modified":1471150005000},{"_id":"themes/eiio/source/images/douban_32px_1193382_easyicon.netdsas.png","shasum":"16a69c9782296ee7c194dd203f32a18e81a4a0e1","modified":1471108015000},{"_id":"themes/eiio/source/css/main.css","shasum":"8747157a412035c6ff14aa71c830443034db30b5","modified":1471161627000},{"_id":"themes/eiio/source/images/github_copyrighted_32px_1169845_easyicon.net.png","shasum":"3f499614c68a5fd4aa54cfd50e7af466ee1444f5","modified":1471107860000},{"_id":"themes/eiio/source/images/weibo_39.129973474801px_1193419_easyicon.net.png","shasum":"628508b928ccfe0670a8ad7b2c4938274cd9d1fd","modified":1471149919000},{"_id":"themes/eiio/source/js/bootstrap.min.js","shasum":"4d6743b65bc15531ecfb9cbb404a9e209543474b","modified":1439914078000},{"_id":"themes/eiio/source/js/npm.js","shasum":"f40f690c37aa762e090b53d258a7400565eac6b3","modified":1439914078000},{"_id":"themes/eiio/source/js/umd/alert.js","shasum":"f9f9a406d60b71cfc92369aa2f5f7192b6c912f5","modified":1439914078000},{"_id":"themes/eiio/source/js/umd/button.js","shasum":"0774f591df8910a90a9234a267ee2b6eebd4c6e0","modified":1439914078000},{"_id":"themes/eiio/source/js/umd/carousel.js","shasum":"12a534072077faaa7afce681cd8edad8c85090db","modified":1439914078000},{"_id":"themes/eiio/source/js/umd/collapse.js","shasum":"766f721a1234790cc5f77f66e1d003b9dae1ea8d","modified":1439914078000},{"_id":"themes/eiio/source/js/umd/dropdown.js","shasum":"8ddfede2edadd9c1964831317576137cff958d6b","modified":1439914078000},{"_id":"themes/eiio/source/js/umd/modal.js","shasum":"854b4b018edf5474c4256d5d47209853a44359ca","modified":1439914078000},{"_id":"themes/eiio/source/js/umd/popover.js","shasum":"6217c27695d951d662bc097fb8efa5c31ae8a433","modified":1439914078000},{"_id":"themes/eiio/source/js/umd/scrollspy.js","shasum":"ca0f035a2225e7906142f32c07120d82522f2140","modified":1439914078000},{"_id":"themes/eiio/source/js/umd/tab.js","shasum":"2f171de15291ae713b1130800e6db854200207df","modified":1439914078000},{"_id":"themes/eiio/source/js/umd/tooltip.js","shasum":"c279b355f1687645116d42cdb70f4540b4ba9484","modified":1439914078000},{"_id":"themes/eiio/source/js/umd/util.js","shasum":"3a02ed8c6edd4bd8f2f2599109d36974b1fd6490","modified":1439914078000},{"_id":"themes/eiio/source/styles/agate.css","shasum":"8e122b0f00f5a7ec4e6dc492bf1560441eeef7f0","modified":1448968368000},{"_id":"themes/eiio/source/styles/androidstudio.css","shasum":"958baa24814c06a625612a3b2b478d54bc1bf1b1","modified":1448968368000},{"_id":"themes/eiio/source/styles/arduino-light.css","shasum":"c6e05580b51b755e229e99eb156940ad2cab192b","modified":1452034766000},{"_id":"themes/eiio/source/styles/arta.css","shasum":"17b23b9fa57ef7a05a6aaeea9b5feb5442a8e584","modified":1448968368000},{"_id":"themes/eiio/source/styles/ascetic.css","shasum":"6358377b5c25667886aca0d605cbc497cf02405f","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-cave-dark.css","shasum":"f397d4418ce88b998841fd9135242461ba1a79b5","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-cave-light.css","shasum":"2933f0247ac6d84c2954dd4946e359853abbf70a","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-dune-dark.css","shasum":"081d73e454db140cd41b2bb595be297cfcab25e0","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-dune-light.css","shasum":"7ba074de897e6a5e27d8b97f7cd06c1746474e72","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-estuary-dark.css","shasum":"a0c46a0f955e3864f5e967ea93f5e61519a17be8","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-estuary-light.css","shasum":"91ae4668c15a085ffce15ca21e93da445b5ecf3a","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-forest-dark.css","shasum":"d8a4dc060b3fc719aa2f7d7b3f1019a3964b8101","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-forest-light.css","shasum":"8a78a4eea0f32d094d1f9e316d59e990ba739d97","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-heath-dark.css","shasum":"b93c2241ff123e62d4edb3dfc20410e4d1da3e78","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-heath-light.css","shasum":"172b98f783d213a20211ec6aca9a3840ba524f55","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-lakeside-dark.css","shasum":"fa707b252d5d5caccc0589374522bed47b7ca100","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-lakeside-light.css","shasum":"8ba595b9ba6e8be6dc029bf80caab38e85aed686","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-plateau-dark.css","shasum":"240f79f4e1fd63485c13900875b64c5a0d1bd06d","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-plateau-light.css","shasum":"9731db1052f23351c983210701edd3f5ceed343f","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-savanna-dark.css","shasum":"09d45a218f87b8cb55b5ca7f4e9d76ea89a9404a","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-savanna-light.css","shasum":"6bd3a62c32558476d436bd389500e5fbeb693d67","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-seaside-dark.css","shasum":"b2800804a21f729a3d0a16b3aadc17679fd0639c","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-seaside-light.css","shasum":"3e6b9e2a3a5de455490b8224401f19702df4cde9","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-sulphurpool-dark.css","shasum":"1f006f8bd28e2ffbb73f708769605ba766787fff","modified":1448968368000},{"_id":"themes/eiio/source/styles/atelier-sulphurpool-light.css","shasum":"0319c3eea893601b79b6c57652ef49b9222cc9de","modified":1448968368000},{"_id":"themes/eiio/source/styles/atom-one-dark.css","shasum":"fb7ff2540c2e72a0c28e9e69f95c8dc5dfdc81a0","modified":1470752052000},{"_id":"themes/eiio/source/styles/atom-one-light.css","shasum":"b66c55b66d221948684cf2c49a15531c8ffbc145","modified":1470752052000},{"_id":"themes/eiio/source/styles/brown-paper.css","shasum":"a6817d890e58f80ce79d87620791dae821a70fff","modified":1448968368000},{"_id":"themes/eiio/source/styles/brown-papersq.png","shasum":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1448968368000},{"_id":"themes/eiio/source/styles/codepen-embed.css","shasum":"c4520e45d18259817b8942d17971f27c94f0fb09","modified":1448968368000},{"_id":"themes/eiio/source/styles/color-brewer.css","shasum":"96332573db854e7b7411caa94ba29b238fede2d3","modified":1448968368000},{"_id":"themes/eiio/source/styles/darcula.css","shasum":"7740224d07375ddc321147dffabbfa83e39f0d8b","modified":1470752052000},{"_id":"themes/eiio/source/styles/dark.css","shasum":"fc77519d4f5d731054c5d4b7e7bbdbb510833271","modified":1448968368000},{"_id":"themes/eiio/source/styles/darkula.css","shasum":"0be948bb84acc05f93a1e5e9b48fe34cf61673a0","modified":1470752052000},{"_id":"themes/eiio/source/styles/default.css","shasum":"fba68624d1b34a5543fe0bf4b2af2ac1ddf65e74","modified":1456209338000},{"_id":"themes/eiio/source/styles/docco.css","shasum":"1be7be09a1b927c22c7f11451becdb335145bdd2","modified":1448968368000},{"_id":"themes/eiio/source/styles/dracula.css","shasum":"2633f2e84680e9f381e9ac1df344b542e28f9774","modified":1456209338000},{"_id":"themes/eiio/source/styles/far.css","shasum":"67e0658b2376e91e4894636a3522a30c2aec42de","modified":1448968368000},{"_id":"themes/eiio/source/styles/foundation.css","shasum":"75b0674dd1ed35d61977bd5c35dc29ca35835a7b","modified":1448968368000},{"_id":"themes/eiio/source/styles/github-gist.css","shasum":"77cf684fda415812d6279a52f299c84850244778","modified":1448968368000},{"_id":"themes/eiio/source/styles/github.css","shasum":"ee593952684a791317ee8b77ad096e729dec649e","modified":1448968368000},{"_id":"themes/eiio/source/styles/googlecode.css","shasum":"fed3d439d0c305b337dd9c0f68dcbfa51429f445","modified":1448968368000},{"_id":"themes/eiio/source/styles/grayscale.css","shasum":"5688658c28fc5799517e8f3c224ae3da3797ba44","modified":1448968368000},{"_id":"themes/eiio/source/styles/gruvbox-dark.css","shasum":"aaf90d076e34bc44016462d70f83985e0e55c8dc","modified":1456209338000},{"_id":"themes/eiio/source/styles/gruvbox-light.css","shasum":"084699ab0aa326fede86e38bf41ebe49edde3a90","modified":1456209338000},{"_id":"themes/eiio/source/styles/hopscotch.css","shasum":"03e7b9ec74bbd375db8d476836aac3729a6c86e8","modified":1448968368000},{"_id":"themes/eiio/source/styles/hybrid.css","shasum":"1e2d54598b5f948b597059909d4bd158b7df021f","modified":1448968368000},{"_id":"themes/eiio/source/styles/idea.css","shasum":"164649ae1e7c891a0d88cca075521af28656e2a1","modified":1448968368000},{"_id":"themes/eiio/source/styles/ir-black.css","shasum":"95aad65ba77183500ce0f7ad62a7535b647ee20c","modified":1448968368000},{"_id":"themes/eiio/source/styles/kimbie.dark.css","shasum":"58ed061c204fbc09d221ee9135d66bad976e5fc3","modified":1448968368000},{"_id":"themes/eiio/source/styles/kimbie.light.css","shasum":"b7aa9b1b21a25dfefcac7649a328962f84c47913","modified":1448968368000},{"_id":"themes/eiio/source/styles/magula.css","shasum":"ebc291f90e456abeeccb16937e7f51735733f4f7","modified":1448968368000},{"_id":"themes/eiio/source/styles/mono-blue.css","shasum":"fd0f39cd4c93ccb8d0bb2f6a1f359522e15a89cb","modified":1448968368000},{"_id":"themes/eiio/source/styles/monokai-sublime.css","shasum":"e4f3df87cbfa634c86b489e9cc43acf44d415986","modified":1448968368000},{"_id":"themes/eiio/source/styles/monokai.css","shasum":"f69df92e3ccdce28e6f811ec84f11698f2811198","modified":1448968368000},{"_id":"themes/eiio/source/styles/obsidian.css","shasum":"6ed475813fe4886a58b236297862ff2f181e66f7","modified":1448968368000},{"_id":"themes/eiio/source/styles/ocean.css","shasum":"fce6858e1c5eb9d2857cb5b5d24069c5994cfc91","modified":1467096322000},{"_id":"themes/eiio/source/styles/paraiso-dark.css","shasum":"8f5445327ce3c83b62f6bf4c1a0d87fa6f036341","modified":1448968368000},{"_id":"themes/eiio/source/styles/paraiso-light.css","shasum":"6eb3ab7a3337f9cad3a2e5fa6bf7dd83685228d8","modified":1448968368000},{"_id":"themes/eiio/source/styles/pojoaque.css","shasum":"4e1e6a431212f5043a550474a1acda63362cdd6f","modified":1448968368000},{"_id":"themes/eiio/source/styles/pojoaque.jpg","shasum":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1427985794000},{"_id":"themes/eiio/source/styles/purebasic.css","shasum":"f353a2cedf3f261a0676fce7c824bdd2e8197775","modified":1463458578000},{"_id":"themes/eiio/source/styles/qtcreator_dark.css","shasum":"213a40d203c4986cdbcb1bdf7d0b9013b29041ba","modified":1456209338000},{"_id":"themes/eiio/source/styles/qtcreator_light.css","shasum":"9a2a19ac2f6e6a7d5edd7fae67b7de4a3957e878","modified":1456209338000},{"_id":"themes/eiio/source/styles/railscasts.css","shasum":"a6d2043478fae5915926914cbd96fe9b706d98a6","modified":1448968368000},{"_id":"themes/eiio/source/styles/rainbow.css","shasum":"1b2d98ccdda36aa926d0e6d069b673fdacd2d33e","modified":1448968368000},{"_id":"themes/eiio/source/styles/school-book.css","shasum":"60fe3d8063b1acc4d52de02033095adb0a2b35a9","modified":1448968368000},{"_id":"themes/eiio/source/styles/school-book.png","shasum":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1448968368000},{"_id":"themes/eiio/source/styles/solarized-dark.css","shasum":"d02fc2dcbeec4b7af2cadec4bbbfc5b016aed4c7","modified":1448968368000},{"_id":"themes/eiio/source/styles/solarized-light.css","shasum":"6b70caf1e84d096b1bc6318d5dae78d69e5dd1d3","modified":1448968368000},{"_id":"themes/eiio/source/styles/sunburst.css","shasum":"8309eab2e5b1765dbee81a626baacbdad869b76a","modified":1448968368000},{"_id":"themes/eiio/source/styles/tomorrow-night-blue.css","shasum":"cd257d7d6a37cd5a09419b5f5f9d34b6b282423f","modified":1448968368000},{"_id":"themes/eiio/source/styles/tomorrow-night-bright.css","shasum":"04f0af30fdda5e5d6ebdeef5a860b6b7e49cfe89","modified":1448968368000},{"_id":"themes/eiio/source/styles/tomorrow-night-eighties.css","shasum":"d82b84bcda0588105dbbc0e8e8ba5e62c208a061","modified":1448968368000},{"_id":"themes/eiio/source/styles/tomorrow-night.css","shasum":"86264dd861d35a8b135f9fcb8ff2675e9fa69c16","modified":1448968368000},{"_id":"themes/eiio/source/styles/tomorrow.css","shasum":"163593ad70770d0296c5e643fa62e58e63f1b340","modified":1448968368000},{"_id":"themes/eiio/source/styles/vs.css","shasum":"2ac5e89ceb3d5a0e0fdab1ed6d9a411ec7d221aa","modified":1448968368000},{"_id":"themes/eiio/source/styles/xcode.css","shasum":"65d775a7e11e238c91e0d3c7370547348c92d6b3","modified":1448968368000},{"_id":"themes/eiio/source/styles/xt256.css","shasum":"bbe28ec69177699cb6300d777598adf6323f7861","modified":1463458578000},{"_id":"themes/eiio/source/styles/zenburn.css","shasum":"933a3b196d01254dea5e6f48105ea15e210ae000","modified":1448968368000},{"_id":"themes/eiio/source/css/bootstrap.css","shasum":"1d117058207042a2b0fa800310c1b2178ed10655","modified":1439914078000},{"_id":"themes/eiio/source/css/bootstrap.min.css","shasum":"50eafc81610dc7f8171f0e9ca127284d25a69af6","modified":1439914078000},{"_id":"themes/eiio/source/images/about.jpg","shasum":"85ac535a221047ac102c70c43993bc4e0ab48a42","modified":1471100449000},{"_id":"themes/eiio/source/js/bootstrap.js","shasum":"0ecc897e6b2c08a923fba58cb1176dccb1cb4783","modified":1439914078000},{"_id":"themes/eiio/source/js/jquery.min.js","shasum":"8258d046f17dd3c15a5d3984e1868b7b5d1db329","modified":1471092316000},{"_id":"public/styles/zenburn.css","modified":1471746749340,"shasum":"933a3b196d01254dea5e6f48105ea15e210ae000"},{"_id":"public/styles/xt256.css","modified":1471746749344,"shasum":"bbe28ec69177699cb6300d777598adf6323f7861"},{"_id":"public/styles/xcode.css","modified":1471746749347,"shasum":"65d775a7e11e238c91e0d3c7370547348c92d6b3"},{"_id":"public/styles/vs.css","modified":1471746749349,"shasum":"2ac5e89ceb3d5a0e0fdab1ed6d9a411ec7d221aa"},{"_id":"public/styles/tomorrow.css","modified":1471746749350,"shasum":"163593ad70770d0296c5e643fa62e58e63f1b340"},{"_id":"public/styles/tomorrow-night.css","modified":1471746749351,"shasum":"86264dd861d35a8b135f9fcb8ff2675e9fa69c16"},{"_id":"public/styles/tomorrow-night-eighties.css","modified":1471746749353,"shasum":"d82b84bcda0588105dbbc0e8e8ba5e62c208a061"},{"_id":"public/styles/tomorrow-night-bright.css","modified":1471746749354,"shasum":"04f0af30fdda5e5d6ebdeef5a860b6b7e49cfe89"},{"_id":"public/styles/tomorrow-night-blue.css","modified":1471746749355,"shasum":"cd257d7d6a37cd5a09419b5f5f9d34b6b282423f"},{"_id":"public/styles/sunburst.css","modified":1471746749358,"shasum":"8309eab2e5b1765dbee81a626baacbdad869b76a"},{"_id":"public/styles/solarized-light.css","modified":1471746749359,"shasum":"6b70caf1e84d096b1bc6318d5dae78d69e5dd1d3"},{"_id":"public/styles/solarized-dark.css","modified":1471746749361,"shasum":"d02fc2dcbeec4b7af2cadec4bbbfc5b016aed4c7"},{"_id":"public/styles/school-book.png","modified":1471746749365,"shasum":"711ec983c874e093bb89eb77afcbdf6741fa61ee"},{"_id":"public/styles/school-book.css","modified":1471746749368,"shasum":"60fe3d8063b1acc4d52de02033095adb0a2b35a9"},{"_id":"public/styles/rainbow.css","modified":1471746749370,"shasum":"1b2d98ccdda36aa926d0e6d069b673fdacd2d33e"},{"_id":"public/styles/railscasts.css","modified":1471746749371,"shasum":"a6d2043478fae5915926914cbd96fe9b706d98a6"},{"_id":"public/styles/qtcreator_light.css","modified":1471746749372,"shasum":"9a2a19ac2f6e6a7d5edd7fae67b7de4a3957e878"},{"_id":"public/styles/qtcreator_dark.css","modified":1471746749373,"shasum":"213a40d203c4986cdbcb1bdf7d0b9013b29041ba"},{"_id":"public/styles/purebasic.css","modified":1471746749375,"shasum":"f353a2cedf3f261a0676fce7c824bdd2e8197775"},{"_id":"public/styles/pojoaque.jpg","modified":1471746749377,"shasum":"c5fe6533b88b21f8d90d3d03954c6b29baa67791"},{"_id":"public/styles/pojoaque.css","modified":1471746749378,"shasum":"4e1e6a431212f5043a550474a1acda63362cdd6f"},{"_id":"public/styles/paraiso-light.css","modified":1471746749387,"shasum":"6eb3ab7a3337f9cad3a2e5fa6bf7dd83685228d8"},{"_id":"public/styles/paraiso-dark.css","modified":1471746749390,"shasum":"8f5445327ce3c83b62f6bf4c1a0d87fa6f036341"},{"_id":"public/styles/ocean.css","modified":1471746749391,"shasum":"fce6858e1c5eb9d2857cb5b5d24069c5994cfc91"},{"_id":"public/styles/obsidian.css","modified":1471746749393,"shasum":"6ed475813fe4886a58b236297862ff2f181e66f7"},{"_id":"public/styles/monokai.css","modified":1471746749395,"shasum":"f69df92e3ccdce28e6f811ec84f11698f2811198"},{"_id":"public/styles/monokai-sublime.css","modified":1471746749397,"shasum":"e4f3df87cbfa634c86b489e9cc43acf44d415986"},{"_id":"public/styles/mono-blue.css","modified":1471746749398,"shasum":"fd0f39cd4c93ccb8d0bb2f6a1f359522e15a89cb"},{"_id":"public/styles/magula.css","modified":1471746749399,"shasum":"ebc291f90e456abeeccb16937e7f51735733f4f7"},{"_id":"public/styles/kimbie.light.css","modified":1471746749402,"shasum":"b7aa9b1b21a25dfefcac7649a328962f84c47913"},{"_id":"public/styles/kimbie.dark.css","modified":1471746749404,"shasum":"58ed061c204fbc09d221ee9135d66bad976e5fc3"},{"_id":"public/styles/ir-black.css","modified":1471746749406,"shasum":"95aad65ba77183500ce0f7ad62a7535b647ee20c"},{"_id":"public/styles/idea.css","modified":1471746749407,"shasum":"164649ae1e7c891a0d88cca075521af28656e2a1"},{"_id":"public/styles/hybrid.css","modified":1471746749408,"shasum":"1e2d54598b5f948b597059909d4bd158b7df021f"},{"_id":"public/styles/hopscotch.css","modified":1471746749409,"shasum":"03e7b9ec74bbd375db8d476836aac3729a6c86e8"},{"_id":"public/styles/gruvbox-light.css","modified":1471746749410,"shasum":"084699ab0aa326fede86e38bf41ebe49edde3a90"},{"_id":"public/styles/gruvbox-dark.css","modified":1471746749412,"shasum":"aaf90d076e34bc44016462d70f83985e0e55c8dc"},{"_id":"public/styles/grayscale.css","modified":1471746749414,"shasum":"5688658c28fc5799517e8f3c224ae3da3797ba44"},{"_id":"public/styles/googlecode.css","modified":1471746749416,"shasum":"fed3d439d0c305b337dd9c0f68dcbfa51429f445"},{"_id":"public/styles/github.css","modified":1471746749418,"shasum":"ee593952684a791317ee8b77ad096e729dec649e"},{"_id":"public/styles/github-gist.css","modified":1471746749420,"shasum":"77cf684fda415812d6279a52f299c84850244778"},{"_id":"public/styles/foundation.css","modified":1471746749422,"shasum":"75b0674dd1ed35d61977bd5c35dc29ca35835a7b"},{"_id":"public/styles/far.css","modified":1471746749423,"shasum":"67e0658b2376e91e4894636a3522a30c2aec42de"},{"_id":"public/styles/dracula.css","modified":1471746749426,"shasum":"2633f2e84680e9f381e9ac1df344b542e28f9774"},{"_id":"public/styles/docco.css","modified":1471746749429,"shasum":"1be7be09a1b927c22c7f11451becdb335145bdd2"},{"_id":"public/styles/default.css","modified":1471746749432,"shasum":"fba68624d1b34a5543fe0bf4b2af2ac1ddf65e74"},{"_id":"public/styles/darkula.css","modified":1471746749433,"shasum":"0be948bb84acc05f93a1e5e9b48fe34cf61673a0"},{"_id":"public/styles/dark.css","modified":1471746749435,"shasum":"fc77519d4f5d731054c5d4b7e7bbdbb510833271"},{"_id":"public/styles/darcula.css","modified":1471746749437,"shasum":"7740224d07375ddc321147dffabbfa83e39f0d8b"},{"_id":"public/styles/color-brewer.css","modified":1471746749438,"shasum":"96332573db854e7b7411caa94ba29b238fede2d3"},{"_id":"public/styles/codepen-embed.css","modified":1471746749439,"shasum":"c4520e45d18259817b8942d17971f27c94f0fb09"},{"_id":"public/styles/brown-papersq.png","modified":1471746749441,"shasum":"3a1332ede3a75a3d24f60b6ed69035b72da5e182"},{"_id":"public/styles/brown-paper.css","modified":1471746749443,"shasum":"a6817d890e58f80ce79d87620791dae821a70fff"},{"_id":"public/styles/atom-one-light.css","modified":1471746749444,"shasum":"b66c55b66d221948684cf2c49a15531c8ffbc145"},{"_id":"public/styles/atom-one-dark.css","modified":1471746749446,"shasum":"fb7ff2540c2e72a0c28e9e69f95c8dc5dfdc81a0"},{"_id":"public/styles/atelier-sulphurpool-light.css","modified":1471746749447,"shasum":"0319c3eea893601b79b6c57652ef49b9222cc9de"},{"_id":"public/styles/atelier-sulphurpool-dark.css","modified":1471746749450,"shasum":"1f006f8bd28e2ffbb73f708769605ba766787fff"},{"_id":"public/styles/atelier-seaside-light.css","modified":1471746749452,"shasum":"3e6b9e2a3a5de455490b8224401f19702df4cde9"},{"_id":"public/styles/atelier-seaside-dark.css","modified":1471746749454,"shasum":"b2800804a21f729a3d0a16b3aadc17679fd0639c"},{"_id":"public/styles/atelier-savanna-light.css","modified":1471746749455,"shasum":"6bd3a62c32558476d436bd389500e5fbeb693d67"},{"_id":"public/styles/atelier-savanna-dark.css","modified":1471746749457,"shasum":"09d45a218f87b8cb55b5ca7f4e9d76ea89a9404a"},{"_id":"public/styles/atelier-plateau-light.css","modified":1471746749458,"shasum":"9731db1052f23351c983210701edd3f5ceed343f"},{"_id":"public/styles/atelier-plateau-dark.css","modified":1471746749460,"shasum":"240f79f4e1fd63485c13900875b64c5a0d1bd06d"},{"_id":"public/styles/atelier-lakeside-light.css","modified":1471746749462,"shasum":"8ba595b9ba6e8be6dc029bf80caab38e85aed686"},{"_id":"public/styles/atelier-lakeside-dark.css","modified":1471746749464,"shasum":"fa707b252d5d5caccc0589374522bed47b7ca100"},{"_id":"public/styles/atelier-heath-light.css","modified":1471746749465,"shasum":"172b98f783d213a20211ec6aca9a3840ba524f55"},{"_id":"public/styles/atelier-heath-dark.css","modified":1471746749469,"shasum":"b93c2241ff123e62d4edb3dfc20410e4d1da3e78"},{"_id":"public/styles/atelier-forest-light.css","modified":1471746749470,"shasum":"8a78a4eea0f32d094d1f9e316d59e990ba739d97"},{"_id":"public/styles/atelier-forest-dark.css","modified":1471746749472,"shasum":"d8a4dc060b3fc719aa2f7d7b3f1019a3964b8101"},{"_id":"public/styles/atelier-estuary-light.css","modified":1471746749473,"shasum":"91ae4668c15a085ffce15ca21e93da445b5ecf3a"},{"_id":"public/styles/atelier-estuary-dark.css","modified":1471746749474,"shasum":"a0c46a0f955e3864f5e967ea93f5e61519a17be8"},{"_id":"public/styles/atelier-dune-light.css","modified":1471746749476,"shasum":"7ba074de897e6a5e27d8b97f7cd06c1746474e72"},{"_id":"public/styles/atelier-dune-dark.css","modified":1471746749478,"shasum":"081d73e454db140cd41b2bb595be297cfcab25e0"},{"_id":"public/styles/atelier-cave-light.css","modified":1471746749480,"shasum":"2933f0247ac6d84c2954dd4946e359853abbf70a"},{"_id":"public/styles/atelier-cave-dark.css","modified":1471746749481,"shasum":"f397d4418ce88b998841fd9135242461ba1a79b5"},{"_id":"public/styles/ascetic.css","modified":1471746749482,"shasum":"6358377b5c25667886aca0d605cbc497cf02405f"},{"_id":"public/styles/arta.css","modified":1471746749483,"shasum":"17b23b9fa57ef7a05a6aaeea9b5feb5442a8e584"},{"_id":"public/styles/arduino-light.css","modified":1471746749485,"shasum":"c6e05580b51b755e229e99eb156940ad2cab192b"},{"_id":"public/styles/androidstudio.css","modified":1471746749486,"shasum":"958baa24814c06a625612a3b2b478d54bc1bf1b1"},{"_id":"public/styles/agate.css","modified":1471746749488,"shasum":"8e122b0f00f5a7ec4e6dc492bf1560441eeef7f0"},{"_id":"public/js/umd/util.js","modified":1471746749490,"shasum":"3a02ed8c6edd4bd8f2f2599109d36974b1fd6490"},{"_id":"public/js/umd/tooltip.js","modified":1471746749491,"shasum":"c279b355f1687645116d42cdb70f4540b4ba9484"},{"_id":"public/js/umd/tab.js","modified":1471746749493,"shasum":"2f171de15291ae713b1130800e6db854200207df"},{"_id":"public/js/umd/scrollspy.js","modified":1471746749495,"shasum":"ca0f035a2225e7906142f32c07120d82522f2140"},{"_id":"public/js/umd/popover.js","modified":1471746749496,"shasum":"6217c27695d951d662bc097fb8efa5c31ae8a433"},{"_id":"public/js/umd/modal.js","modified":1471746749498,"shasum":"854b4b018edf5474c4256d5d47209853a44359ca"},{"_id":"public/js/umd/dropdown.js","modified":1471746749499,"shasum":"8ddfede2edadd9c1964831317576137cff958d6b"},{"_id":"public/js/umd/collapse.js","modified":1471746749500,"shasum":"766f721a1234790cc5f77f66e1d003b9dae1ea8d"},{"_id":"public/js/umd/carousel.js","modified":1471746749501,"shasum":"12a534072077faaa7afce681cd8edad8c85090db"},{"_id":"public/js/umd/button.js","modified":1471746749503,"shasum":"0774f591df8910a90a9234a267ee2b6eebd4c6e0"},{"_id":"public/js/umd/alert.js","modified":1471746749504,"shasum":"f9f9a406d60b71cfc92369aa2f5f7192b6c912f5"},{"_id":"public/js/npm.js","modified":1471746749506,"shasum":"f40f690c37aa762e090b53d258a7400565eac6b3"},{"_id":"public/js/jquery.min.js","modified":1471746749507,"shasum":"8258d046f17dd3c15a5d3984e1868b7b5d1db329"},{"_id":"public/js/bootstrap.min.js","modified":1471746749509,"shasum":"4d6743b65bc15531ecfb9cbb404a9e209543474b"},{"_id":"public/js/bootstrap.js","modified":1471746749511,"shasum":"0ecc897e6b2c08a923fba58cb1176dccb1cb4783"},{"_id":"public/images/weibo_39.129973474801px_1193419_easyicon.net.png","modified":1471746749514,"shasum":"628508b928ccfe0670a8ad7b2c4938274cd9d1fd"},{"_id":"public/images/github_copyrighted_32px_1169845_easyicon.net.png","modified":1471746749516,"shasum":"3f499614c68a5fd4aa54cfd50e7af466ee1444f5"},{"_id":"public/images/douban_32px_1193382_easyicon.netdsas.png","modified":1471746749518,"shasum":"16a69c9782296ee7c194dd203f32a18e81a4a0e1"},{"_id":"public/images/douban_32px_1193382_easyicon.net.png","modified":1471746749523,"shasum":"74cc64f983a5e01740d93015a9181947b22562a4"},{"_id":"public/images/about.jpg","modified":1471746749525,"shasum":"85ac535a221047ac102c70c43993bc4e0ab48a42"},{"_id":"public/highlight.pack.js","modified":1471746749528,"shasum":"57aab3bc31019c42d2c96e19f25334bb547ca4f1"},{"_id":"public/css/main.css","modified":1471746749530,"shasum":"8747157a412035c6ff14aa71c830443034db30b5"},{"_id":"public/css/bootstrap.min.css","modified":1471746749532,"shasum":"50eafc81610dc7f8171f0e9ca127284d25a69af6"},{"_id":"public/css/bootstrap.css","modified":1471746749536,"shasum":"1d117058207042a2b0fa800310c1b2178ed10655"},{"_id":"public/keybase.txt","modified":1471746821848,"shasum":"5df3c5e03ab9a3d5066c135e71774e14ae07c84d"},{"_id":"public/images/kindle.jpg","modified":1471746749542,"shasum":"8019f1d0baee27b456b89dea08b0ea0d919167ac"},{"_id":"public/images/2016-7-3.jpg","modified":1471764367129,"shasum":"7c42af8d58665929759c4f485e4ae5cfb673375a"},{"_id":"public/tags/index.html","modified":1472566212794,"shasum":"b99120d5d12b86f0e078511945b6985340848223"},{"_id":"public/link/index.html","modified":1473256897963,"shasum":"806f555e72bc2df2d4813b87db293df352d351f1"},{"_id":"public/googleae3d3691bbe56e55.html","modified":1472566212809,"shasum":"1d7f76db2d73fe39f8e68eaa9ff778bc9948ae82"},{"_id":"public/categories/index.html","modified":1472566212811,"shasum":"ed7fe10317209cbc4666392eed59a30b341340a2"},{"_id":"public/about-us/index.html","modified":1472566212813,"shasum":"221c258f0a5cd80322abf353a0962ef40b24c60b"},{"_id":"public/2016/08/14/Blog Theme折腾记/index.html","modified":1472566212822,"shasum":"e033f811f3a3b09b1cdcb041eba0ef57122b95e4"},{"_id":"public/2016/07/03/树莓派-Raspberry-Pi-Energency-mode/index.html","modified":1472566212828,"shasum":"aa9c28a5a9f028656033055c299ecd98fdd4e3e9"},{"_id":"public/2016/05/14/CentOS7-0搭建VPN-PPTP-服务器/index.html","modified":1472566212832,"shasum":"5ab8bad71694118ec367d79f5eea47aa08f11e81"},{"_id":"public/2016/05/11/纪念陪伴4年多的Kindle/index.html","modified":1472566212837,"shasum":"26894a509f7679eaa03db26e28957999a6f6de56"},{"_id":"public/2016/04/13/办证路上/index.html","modified":1472566212842,"shasum":"63a7b601b6b16c9a72f4ed1a6bb107071698f642"},{"_id":"public/2016/03/20/从零开始到没有安全的工作/index.html","modified":1472566212847,"shasum":"272f76d3694af599898aba8078ef60f20787b6ee"},{"_id":"public/2016/03/06/Google工作整理术-读书笔记/index.html","modified":1472566212852,"shasum":"4e033708e4f60c0a52fd4c127eb07d47d983e8c4"},{"_id":"public/2016/02/14/2016-02-14-new-year/index.html","modified":1472566212857,"shasum":"49954b913b7e9cffabbba9a5a7ee841bd04a6481"},{"_id":"public/2016/01/01/往年的习惯/index.html","modified":1472566212862,"shasum":"9f6e3dff70117f778c06d929340f9d3ab97af865"},{"_id":"public/2015/12/10/Emacs-org-mode对表格的操作/index.html","modified":1472566212867,"shasum":"165b0f74fa56c5d4f0e127b27ada46ab5a00c3fd"},{"_id":"public/2015/12/06/使用Let-s-Encrypt让blog支持https吧/index.html","modified":1472566212872,"shasum":"13fd7e62a50436f7afb726253a21ec079facb138"},{"_id":"public/2015/10/18/curl库的用法/index.html","modified":1472566212877,"shasum":"49e0aecf18519d5d8e25b6ae6f7c186d5c8b04d4"},{"_id":"public/2015/08/30/cocos2d-x中lua层调用Object-C和Java中接口的方法/index.html","modified":1472566212882,"shasum":"f34d2614849595977b8ebf7389ebc66aba7add36"},{"_id":"public/2015/08/23/Lua和C:C++的数据交互/index.html","modified":1472566212887,"shasum":"39bc8a6ff4a0a122e2269d634107ac02fee86998"},{"_id":"public/2015/08/11/ZeroBrane-Studio自定义代码提示/index.html","modified":1472566212893,"shasum":"2756e7f8c27d6a7dcba9491b034a23d7d1863bde"},{"_id":"public/2015/08/09/git-submodule使用总结/index.html","modified":1472566212898,"shasum":"e3028df3cc7bb412df099d58d6f78738f8207a26"},{"_id":"public/2015/07/26/美剧-硅谷-观后感/index.html","modified":1472566212902,"shasum":"c920ebf55332e06e78f65312f23e0a148dacd2af"},{"_id":"public/2015/06/19/《把时间当成朋友》- 估算时间/index.html","modified":1472566212908,"shasum":"982c8cdc55f5b989ed25dfb9b00ebd85f70f73ce"},{"_id":"public/2015/06/17/WebP图片文件格式的了解总结/index.html","modified":1472566212913,"shasum":"43dd7ab6ea33464a8f87d72551d6adcdc65ecb3c"},{"_id":"public/2015/05/31/OpenGL-ES中的顶点数组、顶点属性、缓冲区对象/index.html","modified":1472566212917,"shasum":"4e3c29687c667c20ef1c3983a0bc73fe321b8949"},{"_id":"public/2015/05/23/MacOS不能完全清除垃圾篓的解决方法/index.html","modified":1472566212922,"shasum":"68bd903c19b4882bdd4b82bd4a6bc0c4e7bcf8c8"},{"_id":"public/2015/05/20/失败的选择/index.html","modified":1472566212928,"shasum":"6d98b263d0cb1a0180018c8e06f36d7d8500ed94"},{"_id":"public/2015/05/17/Blog折腾记-Octopress篇/index.html","modified":1472566212944,"shasum":"e4f594488700188f60e1cee8a851d6eae784b278"},{"_id":"public/2015/04/24/从减肥到健康的目标总结/index.html","modified":1472566212961,"shasum":"5cca1f9fdbc43ade37fa64d8524704ce965b7ffb"},{"_id":"public/2015/04/04/centos7-0-lamp/index.html","modified":1472566212965,"shasum":"3551b891def4f0a461d03f440799f8963c755411"},{"_id":"public/2015/02/12/永恒的终结读书笔记/index.html","modified":1472566212972,"shasum":"05f2598a57402705589db9fb5d75e9e922da1167"},{"_id":"public/2015/01/19/二分搜索算法/index.html","modified":1472566212976,"shasum":"9a342ca36f5b5c046136c578f2baf61c52966865"},{"_id":"public/2014/12/20/等待的三天结束了半年的时间/index.html","modified":1472566212981,"shasum":"c3833e1d8ade35568a3323fb00b13650e891cb7c"},{"_id":"public/2014/12/05/12月的感慨/index.html","modified":1472566212985,"shasum":"d6c81f2d77bef35cc2495d8744a84d65ef5e5cb4"},{"_id":"public/2014/11/22/现实和梦想/index.html","modified":1472566212993,"shasum":"6cdd28f94f74d9640f3c941c65b14ada2b18aa36"},{"_id":"public/2014/10/03/那时是那么的熟悉,这时又是那样的陌生/index.html","modified":1472566212999,"shasum":"77f031f0b9d34a06ace6989693cc084ec0cc93d6"},{"_id":"public/2014/08/22/近来招人的经历/index.html","modified":1472566213002,"shasum":"1450d6fc6310312e9bcdb77db902fbeca0925211"},{"_id":"public/2014/08/16/不要在游戏中输掉了你的素质/index.html","modified":1472566213009,"shasum":"4daecde2d984bf5c925d60184292df7526a73a95"},{"_id":"public/2014/07/23/机器学习常用资源/index.html","modified":1472566213014,"shasum":"52aec3b6f17283fa6e24ca974dbeaea57cd5c293"},{"_id":"public/2014/06/29/一切恢复/index.html","modified":1472566213020,"shasum":"3158defb1df99c8aaa865942bec336717394e13c"},{"_id":"public/2014/06/20/生成cocos2d-x离线API文档/index.html","modified":1472566213025,"shasum":"d421d5d09fc828012bd104b1bfd186a1d9a312a0"},{"_id":"public/2014/06/11/我为什么要学Emacs及基础操作记录/index.html","modified":1472566213029,"shasum":"d08fc8c71e52b01c6577b7ccb4488250954e3bf5"},{"_id":"public/2014/05/22/C++程序与内存/index.html","modified":1472566213034,"shasum":"5993ca1de333ca4deafdbdc801c97533384e7f6a"},{"_id":"public/2014/05/22/更换域名为feiio.com/index.html","modified":1472566213038,"shasum":"aa3482944bda4d30b43e80717b9cadd60cf2d981"},{"_id":"public/2014/05/14/Git学习笔记/index.html","modified":1472566213043,"shasum":"a39415be83311ef54e399933228d29c3f5331d50"},{"_id":"public/2014/05/09/有时候我们都是孤独患者/index.html","modified":1472566213066,"shasum":"0bc665eab466970aec1c35f6ce94666f1d12610d"},{"_id":"public/2014/05/05/更换Blog的服务器/index.html","modified":1472566213070,"shasum":"f1577f65a80357d2c086902498cd7dd6f4a6e2f9"},{"_id":"public/2014/03/04/按既定的路线前行/index.html","modified":1472566213075,"shasum":"3ff826370f997f9d075e43daa0cb26894a636f1d"},{"_id":"public/2014/03/03/有一种行为叫着瞎折腾/index.html","modified":1472566213079,"shasum":"c4f5f665238108f2dcb32784abbd9842f2a3f582"},{"_id":"public/2013/12/31/这一年/index.html","modified":1472566213084,"shasum":"5fdf264293ad527fd0f486e119249284f11267e2"},{"_id":"public/2013/12/19/Flashbuilder4.7或Eclipse中修改自动注释的@author/index.html","modified":1472566213119,"shasum":"a6d45392b711ea4a5286c0816d99bcb814c4fa2e"},{"_id":"public/2013/12/09/Canon卡农/index.html","modified":1472566213163,"shasum":"0de4d23ed4c70a4e3af446d6b71a5b72728cdfad"},{"_id":"public/2013/11/01/可怜的小猫,无能的虐猫者/index.html","modified":1472566213168,"shasum":"e7fd0c15255f405bd97be5e02de520bf3cd40b92"},{"_id":"public/2013/10/28/劳而无获/index.html","modified":1472566213173,"shasum":"bd896dd0d79b3dafba81c36006333c7bf604ed2c"},{"_id":"public/2013/10/24/胡思乱想的担忧/index.html","modified":1472566213177,"shasum":"d37400a5a87f266e2517165fced6916d908c2a22"},{"_id":"public/2013/10/06/世事无常/index.html","modified":1472566213181,"shasum":"c6143cb3e50b098bc0e0eff1da339241ec183490"},{"_id":"public/2013/05/10/新生活即将开启/index.html","modified":1472566213188,"shasum":"5e4bc7cfcf60042ed84de1004054fee97d7fd5c9"},{"_id":"public/2013/04/30/选择/index.html","modified":1472566213193,"shasum":"b01d5e0eff3141d5cf7e9406100cd9061e3049e8"},{"_id":"public/2013/04/20/有时候习惯上了某些东西./index.html","modified":1472566213216,"shasum":"144a98afa95ec77b1efe2eb1f3c959ff92a7952b"},{"_id":"public/categories/生活记录/index.html","modified":1473257136268,"shasum":"47d3b0c6f29f9053faf3acef9e33b93f92f4c25f"},{"_id":"public/categories/职业生涯/index.html","modified":1473257136301,"shasum":"ab752f99a7a7300e646744262f721dace9a8f39a"},{"_id":"public/categories/技术工具/index.html","modified":1473257136327,"shasum":"8cc2636823f63a16c5a563b04a3d40a691676a34"},{"_id":"public/categories/读书笔记/index.html","modified":1473257136338,"shasum":"399978aae82064b4c8f6805020b299a935e5eee3"},{"_id":"public/categories/编程技术/index.html","modified":1473257136351,"shasum":"df368b5e7a96fc9876cf0d438ae2fa5402d362a2"},{"_id":"public/categories/听的世界/index.html","modified":1473257136356,"shasum":"1a5a1e3fe5bd3c7987610404b5546b448107afd9"},{"_id":"public/categories/游戏开发/index.html","modified":1473257136368,"shasum":"9e9957f7a33ecd90270089296233eeaae9a72393"},{"_id":"public/categories/MacOS/index.html","modified":1473257136371,"shasum":"b350bdfd20b4a5600d255b6914e8f402b39994a2"},{"_id":"public/archives/index.html","modified":1473257136715,"shasum":"77b958e6cad34d6fe469dd6f40615a49c270c0a0"},{"_id":"public/archives/page/2/index.html","modified":1473257136753,"shasum":"d965eca28977cdf5e065b8dae9d65fe2487fb7fe"},{"_id":"public/archives/page/3/index.html","modified":1473257136792,"shasum":"c5c332f32f884f9c28812664a6c96bf77423bbb9"},{"_id":"public/archives/2013/index.html","modified":1473257136822,"shasum":"a9a0a070d724f8d51ec2e6718129d4bf40a088c2"},{"_id":"public/archives/2013/04/index.html","modified":1473257136829,"shasum":"1e3d8af8ad2c68dfb329584cbb76603182f131c4"},{"_id":"public/archives/2013/05/index.html","modified":1473257136834,"shasum":"11ae1922e0847d173bc9ea1ea36adc17f4fdad38"},{"_id":"public/archives/2013/10/index.html","modified":1473257136842,"shasum":"bd7a010659c6e74f704248bb76f1f0096c44078c"},{"_id":"public/archives/2013/11/index.html","modified":1473257136847,"shasum":"1598f086d6389d9e4925ee4c372d1c13f4917c9b"},{"_id":"public/archives/2013/12/index.html","modified":1473257136855,"shasum":"69868502a619351b2d3174dd30ab341d73221567"},{"_id":"public/archives/2014/index.html","modified":1473257136894,"shasum":"108309be4f2966cf1a427d9f67382933eb0f2d07"},{"_id":"public/archives/2014/03/index.html","modified":1473257136900,"shasum":"c8a28640cd10e81e63dd5f24a6acfed4458aba8b"},{"_id":"public/archives/2014/05/index.html","modified":1473257136928,"shasum":"7eed75acddae3805e38f8920dc6a678ed1dfa279"},{"_id":"public/archives/2014/06/index.html","modified":1473257136940,"shasum":"a2b99f4b4a807e8c365628b73f1605633ffe553c"},{"_id":"public/archives/2014/07/index.html","modified":1473257136947,"shasum":"143e32f3fe7d85c05e680cc5e25a67144fc9c71c"},{"_id":"public/archives/2014/08/index.html","modified":1473257136957,"shasum":"65b0444af3b4be401a469dcc9af312893a31aa77"},{"_id":"public/archives/2014/10/index.html","modified":1473257136964,"shasum":"3624039177cf792fb46635cec709d0861c00ec99"},{"_id":"public/archives/2014/11/index.html","modified":1473257136972,"shasum":"2b1805df52655c5172f891a3b652245fb36918d3"},{"_id":"public/archives/2014/12/index.html","modified":1473257136989,"shasum":"93755d35d25174ba4920cb5e48add47c82f29577"},{"_id":"public/archives/2015/index.html","modified":1473257137025,"shasum":"0dfa0a5fd3296ec28777e08252e1f1fc783ce540"},{"_id":"public/archives/2015/01/index.html","modified":1473257137030,"shasum":"05e25b89e1e3ce0a81d555bd027964a674137cfa"},{"_id":"public/archives/2015/02/index.html","modified":1473257137036,"shasum":"6f9e406e26b47f90b8201e064d6c4062d58d4908"},{"_id":"public/archives/2015/04/index.html","modified":1473257137046,"shasum":"8a827cf171ca1e4fe4a745098ebd6652a3eccb0e"},{"_id":"public/archives/2015/05/index.html","modified":1473257137061,"shasum":"aeafad721989ab64498db51c833f7734fdef9a55"},{"_id":"public/archives/2015/06/index.html","modified":1473257137070,"shasum":"4e817ebaf12da253d799e9476372d817995f6e72"},{"_id":"public/archives/2015/07/index.html","modified":1473257137076,"shasum":"fef3aa4528ca08945ac5f31237acc9cbd80f2fd6"},{"_id":"public/archives/2015/08/index.html","modified":1473257137092,"shasum":"16266055897af94576c498aef8549b5a7fb41db4"},{"_id":"public/archives/2015/10/index.html","modified":1473257137098,"shasum":"aa25fccb9d38fb22715f84c67f245c7d1dae1793"},{"_id":"public/archives/2015/12/index.html","modified":1473257137107,"shasum":"4c28cf106d3533edde9f89cccbfa2bc5cc79cd83"},{"_id":"public/archives/2016/index.html","modified":1473257137143,"shasum":"cea36bd32ac1cca9f56f7e976adcab1250d22515"},{"_id":"public/archives/2016/01/index.html","modified":1473257137148,"shasum":"206c49534ddbc2e48cafea11caebad9bd4441be1"},{"_id":"public/archives/2016/02/index.html","modified":1473257137160,"shasum":"e1a332a4ad5865dfcfc956fd772a74227650315a"},{"_id":"public/archives/2016/03/index.html","modified":1473257137168,"shasum":"7e988d9df1d7006f626fb2d93184483504a6ae46"},{"_id":"public/archives/2016/04/index.html","modified":1473257137173,"shasum":"7b122c99550b2e492b4b3d5105ee7a9884915238"},{"_id":"public/archives/2016/05/index.html","modified":1473257137182,"shasum":"bd72f7c96a91d4f731c5e3aa8061619617cd5ee5"},{"_id":"public/archives/2016/07/index.html","modified":1473257137189,"shasum":"85af00892a8f8f9399097bd5de48bc238230ab6b"},{"_id":"public/archives/2016/08/index.html","modified":1473257137194,"shasum":"a73e54850e18154afde0496b35884a423842c4b4"},{"_id":"public/index.html","modified":1473257136497,"shasum":"d61a5147700644d09f42c54f63da47e2a828670c"},{"_id":"public/page/2/index.html","modified":1473257136535,"shasum":"b9bd962e41d322b198c423872b2c42bf0e705452"},{"_id":"public/page/3/index.html","modified":1473257136569,"shasum":"2300215c734cccba811e41aa080057624d55ae89"},{"_id":"public/tags/胡思乱想/index.html","modified":1472566214046,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/美剧/index.html","modified":1472566214052,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/折腾/index.html","modified":1472566214060,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/Raspberry-PI/index.html","modified":1472566214068,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/计划和总结/index.html","modified":1472566214076,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/办证/index.html","modified":1472566214086,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/Work/index.html","modified":1472566214093,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/人工智能/index.html","modified":1472566214100,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/时间管理/index.html","modified":1472566214107,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/git/index.html","modified":1472566214114,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/C/index.html","modified":1472566214122,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/cocos2d-x/index.html","modified":1472566214129,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/Lua/index.html","modified":1472566214135,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/图片资源/index.html","modified":1472566214143,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/OpenGLES/index.html","modified":1472566214150,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/有序的组织/index.html","modified":1472566214158,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/信息管理/index.html","modified":1472566214167,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/Emacs/index.html","modified":1472566214175,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/CentOS7/index.html","modified":1472566214184,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"public/tags/春节/index.html","modified":1472566214193,"shasum":"d3797eb3d473b532a2d344158c4063c2a9d92526"},{"_id":"themes/eiio/source/highlight/scripts/shBrushAppleScript.js","shasum":"4c032070be424731d1fcf15d5f14c5ad50aba9e2","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shAutoloader.js","shasum":"5622d674a99d6052829893851dcee1c9b0c7af26","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushAS3.js","shasum":"2e4aa2b0ba7c211a461f4178831af47f0e0613ae","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushBash.js","shasum":"531024ca0b9decf816ea4c1edb65ac732bd445ab","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushColdFusion.js","shasum":"e03bf93a134747499000f2d8f26b0ed7b44f586c","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushCSharp.js","shasum":"bad1e3c00e03fc7475a7b92012d8c39488a94ab1","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushCpp.js","shasum":"eeaff35a98cf75421b4d2afe46aa631c6f89fd0b","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushCss.js","shasum":"dc14023bd87bc94ec6cb1f4f1b3570466bb6394f","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushDelphi.js","shasum":"f8e8c79b6ca3f9cf02befacdd7f5442e5e6f4cdf","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushDiff.js","shasum":"d4b02ef15a3a349e5a203ec5b5e96e797c0706b5","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushErlang.js","shasum":"0821ca2cd71c32e2a1a1ae1456ba8463fb6fc85b","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushGroovy.js","shasum":"d315b9dbbd39a8a97d1acc9f80cbef916a45839d","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushJScript.js","shasum":"7c8b34f14f4caf9cf2b6ac3315f7bacd95d69e3c","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushJava.js","shasum":"5a1f33a6004f44f9c9e60b867555b88b77424833","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushJavaFX.js","shasum":"97937a8230c34d7c4fa58fb945ae5b4ed7fa9b47","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushPerl.js","shasum":"b7c5eb10c7ec0e8d120bd4c5ab58f51c9b3791f7","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushPhp.js","shasum":"222f0605fe9de44d8daef71d8fc94f4b3e72e398","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushPlain.js","shasum":"8c41e3dc03b9a9d7d5cdeded987d7695974cd797","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushPowerShell.js","shasum":"c93b138058748015f3e4fc1de90dc5d698819c0e","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushPython.js","shasum":"c3771aed486b7f9694536956979fb422a87e6d29","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushRuby.js","shasum":"d75c56b563630b02073653c76ab1e3ca8a4e3f08","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushSass.js","shasum":"eb59ec77896569d73264519ce7eada71a9fee838","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushScala.js","shasum":"8f909fa1a7da297ff16277a596444b8551d33252","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushXml.js","shasum":"311b19458f80720e59522be044709aa5c78adff1","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushVb.js","shasum":"ff215086fc178bbe8913193494b2f94d73b6d46f","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shBrushSql.js","shasum":"e1dcf432958657122e61dce037ab98db1ba0118d","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shCore.js","shasum":"bd9599773965e9c84565abc2e6acdaa92ad6e83f","modified":1278046740000},{"_id":"themes/eiio/source/highlight/scripts/shLegacy.js","shasum":"afd7575a7482d3505613d2dbef721a30459b98c5","modified":1278046740000},{"_id":"themes/eiio/source/highlight/styles/shCoreDefault.css","shasum":"70c96f4f2bf365effb127f94cd2a8a4153df97ca","modified":1278046740000},{"_id":"themes/eiio/source/highlight/styles/shCore.css","shasum":"3860c0c289ac761da7d9c595633f8bba8f58afe9","modified":1278046740000},{"_id":"themes/eiio/source/highlight/styles/shCoreDjango.css","shasum":"e89e7a33ddb1ae8fd8ce8111a7e45a2b53a29ba1","modified":1278046740000},{"_id":"themes/eiio/source/highlight/styles/shCoreEclipse.css","shasum":"f543e8388de2bc6d7ddf7f01de08c3c6f7370169","modified":1278046740000},{"_id":"themes/eiio/source/highlight/styles/shCoreEmacs.css","shasum":"06db3e134a1162eb8bbe62f1ed95a414bf9ba971","modified":1278046740000},{"_id":"themes/eiio/source/highlight/styles/shCoreFadeToGrey.css","shasum":"8de99290e4ef56c917bbd76ef8eaac427c763dde","modified":1278046740000},{"_id":"themes/eiio/source/highlight/styles/shCoreMDUltra.css","shasum":"7d94466de541cc382973bbae54c34ecd5ba9d4ac","modified":1278046740000},{"_id":"themes/eiio/source/highlight/styles/shCoreMidnight.css","shasum":"7f57e6041b8a9ea4d627b52d6a1cd15e8fd407d8","modified":1278046740000},{"_id":"themes/eiio/source/highlight/styles/shCoreRDark.css","shasum":"d277888604281a26be5a921b4746a5d9c98a34f8","modified":1278046740000},{"_id":"themes/eiio/source/highlight/styles/shThemeDefault.css","shasum":"987c987735bb6b8994aaf203e473b33567576e21","modified":1278046740000},{"_id":"themes/eiio/source/highlight/styles/shThemeDjango.css","shasum":"5dfcda0646605919fee778c23a2d9553b0e6da52","modified":1278046740000},{"_id":"themes/eiio/source/highlight/styles/shThemeEclipse.css","shasum":"bdea6377e004a14071610af1b26e133dd4843039","modified":1278046740000},{"_id":"themes/eiio/source/highlight/styles/shThemeMDUltra.css","shasum":"632ce299b8f90d3de35f1505e72db4e1659e0859","modified":1278046740000},{"_id":"themes/eiio/source/highlight/styles/shThemeFadeToGrey.css","shasum":"b997df3d771f6c8403b71e4cac4f61a028cb6ab1","modified":1278046740000},{"_id":"themes/eiio/source/highlight/styles/shThemeEmacs.css","shasum":"70163d78ff96d3b71dc417819408c751b2286787","modified":1278046740000},{"_id":"themes/eiio/source/highlight/styles/shThemeMidnight.css","shasum":"138fe3f3bb425837fcfd9b46c3cc5ad199cb01cc","modified":1278046740000},{"_id":"themes/eiio/source/highlight/styles/shThemeRDark.css","shasum":"b4970092adfcad76da353fa815b8502a9d09f097","modified":1278046740000},{"_id":"public/highlight/scripts/shAutoloader.js","modified":1471750447482,"shasum":"5622d674a99d6052829893851dcee1c9b0c7af26"},{"_id":"public/highlight/styles/shThemeRDark.css","modified":1471750447488,"shasum":"b4970092adfcad76da353fa815b8502a9d09f097"},{"_id":"public/highlight/styles/shThemeMidnight.css","modified":1471750447490,"shasum":"138fe3f3bb425837fcfd9b46c3cc5ad199cb01cc"},{"_id":"public/highlight/styles/shThemeMDUltra.css","modified":1471750447492,"shasum":"632ce299b8f90d3de35f1505e72db4e1659e0859"},{"_id":"public/highlight/styles/shThemeFadeToGrey.css","modified":1471750447493,"shasum":"b997df3d771f6c8403b71e4cac4f61a028cb6ab1"},{"_id":"public/highlight/styles/shThemeEmacs.css","modified":1471750447494,"shasum":"70163d78ff96d3b71dc417819408c751b2286787"},{"_id":"public/highlight/styles/shThemeEclipse.css","modified":1471750447496,"shasum":"bdea6377e004a14071610af1b26e133dd4843039"},{"_id":"public/highlight/styles/shThemeDjango.css","modified":1471750447497,"shasum":"5dfcda0646605919fee778c23a2d9553b0e6da52"},{"_id":"public/highlight/styles/shThemeDefault.css","modified":1471750447498,"shasum":"987c987735bb6b8994aaf203e473b33567576e21"},{"_id":"public/highlight/styles/shCoreRDark.css","modified":1471750447499,"shasum":"d277888604281a26be5a921b4746a5d9c98a34f8"},{"_id":"public/highlight/styles/shCoreMidnight.css","modified":1471750447501,"shasum":"7f57e6041b8a9ea4d627b52d6a1cd15e8fd407d8"},{"_id":"public/highlight/styles/shCoreMDUltra.css","modified":1471750447503,"shasum":"7d94466de541cc382973bbae54c34ecd5ba9d4ac"},{"_id":"public/highlight/styles/shCoreFadeToGrey.css","modified":1471750447504,"shasum":"8de99290e4ef56c917bbd76ef8eaac427c763dde"},{"_id":"public/highlight/styles/shCoreEmacs.css","modified":1471750447505,"shasum":"06db3e134a1162eb8bbe62f1ed95a414bf9ba971"},{"_id":"public/highlight/styles/shCoreEclipse.css","modified":1471750447507,"shasum":"f543e8388de2bc6d7ddf7f01de08c3c6f7370169"},{"_id":"public/highlight/styles/shCoreDjango.css","modified":1471750447509,"shasum":"e89e7a33ddb1ae8fd8ce8111a7e45a2b53a29ba1"},{"_id":"public/highlight/styles/shCoreDefault.css","modified":1471750447511,"shasum":"70c96f4f2bf365effb127f94cd2a8a4153df97ca"},{"_id":"public/highlight/styles/shCore.css","modified":1471750447512,"shasum":"3860c0c289ac761da7d9c595633f8bba8f58afe9"},{"_id":"public/highlight/scripts/shLegacy.js","modified":1471750447514,"shasum":"afd7575a7482d3505613d2dbef721a30459b98c5"},{"_id":"public/highlight/scripts/shCore.js","modified":1471750447516,"shasum":"bd9599773965e9c84565abc2e6acdaa92ad6e83f"},{"_id":"public/highlight/scripts/shBrushXml.js","modified":1471750447518,"shasum":"311b19458f80720e59522be044709aa5c78adff1"},{"_id":"public/highlight/scripts/shBrushVb.js","modified":1471750447520,"shasum":"ff215086fc178bbe8913193494b2f94d73b6d46f"},{"_id":"public/highlight/scripts/shBrushSql.js","modified":1471750447521,"shasum":"e1dcf432958657122e61dce037ab98db1ba0118d"},{"_id":"public/highlight/scripts/shBrushScala.js","modified":1471750447523,"shasum":"8f909fa1a7da297ff16277a596444b8551d33252"},{"_id":"public/highlight/scripts/shBrushSass.js","modified":1471750447525,"shasum":"eb59ec77896569d73264519ce7eada71a9fee838"},{"_id":"public/highlight/scripts/shBrushRuby.js","modified":1471750447527,"shasum":"d75c56b563630b02073653c76ab1e3ca8a4e3f08"},{"_id":"public/highlight/scripts/shBrushPython.js","modified":1471750447528,"shasum":"c3771aed486b7f9694536956979fb422a87e6d29"},{"_id":"public/highlight/scripts/shBrushPowerShell.js","modified":1471750447530,"shasum":"c93b138058748015f3e4fc1de90dc5d698819c0e"},{"_id":"public/highlight/scripts/shBrushPlain.js","modified":1471750447532,"shasum":"8c41e3dc03b9a9d7d5cdeded987d7695974cd797"},{"_id":"public/highlight/scripts/shBrushPhp.js","modified":1471750447534,"shasum":"222f0605fe9de44d8daef71d8fc94f4b3e72e398"},{"_id":"public/highlight/scripts/shBrushPerl.js","modified":1471750447536,"shasum":"b7c5eb10c7ec0e8d120bd4c5ab58f51c9b3791f7"},{"_id":"public/highlight/scripts/shBrushJavaFX.js","modified":1471750447538,"shasum":"97937a8230c34d7c4fa58fb945ae5b4ed7fa9b47"},{"_id":"public/highlight/scripts/shBrushJava.js","modified":1471750447540,"shasum":"5a1f33a6004f44f9c9e60b867555b88b77424833"},{"_id":"public/highlight/scripts/shBrushJScript.js","modified":1471750447543,"shasum":"7c8b34f14f4caf9cf2b6ac3315f7bacd95d69e3c"},{"_id":"public/highlight/scripts/shBrushGroovy.js","modified":1471750447545,"shasum":"d315b9dbbd39a8a97d1acc9f80cbef916a45839d"},{"_id":"public/highlight/scripts/shBrushErlang.js","modified":1471750447547,"shasum":"0821ca2cd71c32e2a1a1ae1456ba8463fb6fc85b"},{"_id":"public/highlight/scripts/shBrushDiff.js","modified":1471750447549,"shasum":"d4b02ef15a3a349e5a203ec5b5e96e797c0706b5"},{"_id":"public/highlight/scripts/shBrushDelphi.js","modified":1471750447551,"shasum":"f8e8c79b6ca3f9cf02befacdd7f5442e5e6f4cdf"},{"_id":"public/highlight/scripts/shBrushCss.js","modified":1471750447553,"shasum":"dc14023bd87bc94ec6cb1f4f1b3570466bb6394f"},{"_id":"public/highlight/scripts/shBrushCpp.js","modified":1471750447556,"shasum":"eeaff35a98cf75421b4d2afe46aa631c6f89fd0b"},{"_id":"public/highlight/scripts/shBrushColdFusion.js","modified":1471750447558,"shasum":"e03bf93a134747499000f2d8f26b0ed7b44f586c"},{"_id":"public/highlight/scripts/shBrushCSharp.js","modified":1471750447559,"shasum":"bad1e3c00e03fc7475a7b92012d8c39488a94ab1"},{"_id":"public/highlight/scripts/shBrushBash.js","modified":1471750447562,"shasum":"531024ca0b9decf816ea4c1edb65ac732bd445ab"},{"_id":"public/highlight/scripts/shBrushAppleScript.js","modified":1471750447564,"shasum":"4c032070be424731d1fcf15d5f14c5ad50aba9e2"},{"_id":"public/highlight/scripts/shBrushAS3.js","modified":1471750447567,"shasum":"2e4aa2b0ba7c211a461f4178831af47f0e0613ae"},{"_id":"source/_posts/包工头与小工.md","shasum":"f414d0a824f9ee70e6586696eb92ceeb416a4d0d","modified":1473256716000},{"_id":"public/2016/09/05/包工头与小工/index.html","modified":1473084844842,"shasum":"d4a3f169814b5298c2f64fb86e98594e3ecf0439"},{"_id":"public/archives/2016/09/index.html","modified":1473257137206,"shasum":"d9a269c1f1545fe14eff00f765d8e035936938fc"},{"_id":"public/images/weichat.jpg","modified":1473252816776,"shasum":"6322f77c988d462ab429b1cdf6a5a695e85241a6"},{"_id":"source/images/WechatIMG5.jpg","shasum":"6322f77c988d462ab429b1cdf6a5a695e85241a6","modified":1473252779000},{"_id":"source/_posts/二流子的机遇.md","shasum":"0e7eab1b03743c46b969ef1a7802a9b04d5491f3","modified":1473256635000},{"_id":"public/images/WechatIMG5.jpg","modified":1473256677410,"shasum":"6322f77c988d462ab429b1cdf6a5a695e85241a6"},{"_id":"public/2016/09/07/二流子的机遇/index.html","modified":1473256677455,"shasum":"00b94600893e1125398eb8407c49a3f9042550df"},{"_id":"public/categories/故事/index.html","modified":1473257136377,"shasum":"c9e1970601115b15e311a06f5b03d7b88853b6be"},{"_id":"source/_posts/写故事的原因.md","shasum":"56cb799296b9360c419c1dcf350f70bcedb8ce1b","modified":1473257115000},{"_id":"public/2016/09/06/写故事的原因/index.html","modified":1473257136030,"shasum":"90eec8dc7e9f47b1a05015adde176bb59ab4d3ba"},{"_id":"public/categories/思考/index.html","modified":1473257136458,"shasum":"5df53d1071d5b748ef3ee689e6e0ccddae244b39"}],"Category":[{"name":"生活记录","_id":"cis400j070001q623qply5hui"},{"name":"职业生涯","_id":"cis400j1s000jq623t8eynj4s"},{"name":"技术工具","_id":"cis400j25000zq623s3rh8h0h"},{"name":"读书笔记","_id":"cis400j290014q6230a1glmta"},{"name":"编程技术","_id":"cis400j2g001cq6235avqau7v"},{"name":"听的世界","_id":"cis400j2i001fq623rn0f2i0a"},{"name":"游戏开发","_id":"cis400j44003bq623a0ruo8o8"},{"name":"MacOS","_id":"cis400j4i003vq623jnv1jm4u"},{"name":"故事","_id":"cissyzie900014q231f0vgo7q"},{"name":"思考","_id":"cissz9cjx00017l23d6gyti03"}],"Data":[],"Page":[{"title":"All tags","date":"2015-05-06T13:58:04.000Z","type":"tags","comments":0,"_content":"\n\n","source":"tags/index.md","raw":"title: All tags\ndate: 2015-05-06 21:58:04\ntype: \"tags\"\ncomments: false\n---\n\n\n","updated":"2016-01-03T03:58:44.000Z","path":"tags/index.html","layout":"page","_id":"cis400j170005q6239ayvuwew"},{"title":"链接","date":"2015-08-02T12:23:56.000Z","_content":"+ 友链\n  - [李攀的Blog](http://lipan.me/)\n  - [混沌的云](http://blog.zerob13.in/)\n--------------\n+ GPG Key Server\n  - [pgp.mit.edu](https://pgp.mit.edu)\n  - [sks-keyservers.net](https://sks-keyservers.net/)\n\n","source":"link/index.md","raw":"title: \"链接\"\ndate: 2015-08-02 20:23:56\n---\n+ 友链\n  - [李攀的Blog](http://lipan.me/)\n  - [混沌的云](http://blog.zerob13.in/)\n--------------\n+ GPG Key Server\n  - [pgp.mit.edu](https://pgp.mit.edu)\n  - [sks-keyservers.net](https://sks-keyservers.net/)\n\n","updated":"2016-09-07T14:01:30.000Z","path":"link/index.html","_id":"cis400j190006q623gyxw81ju","comments":1,"layout":"page"},{"_content":"google-site-verification: googleae3d3691bbe56e55.html","source":"googleae3d3691bbe56e55.html","raw":"google-site-verification: googleae3d3691bbe56e55.html","date":"2016-05-04T07:53:07.000Z","updated":"2016-05-04T07:46:41.000Z","path":"googleae3d3691bbe56e55.html","title":"","comments":1,"layout":"page","_id":"cis400j1b0007q623o4pk8ihp"},{"title":"categories","date":"2015-05-16T13:03:19.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"title: \"categories\"\ndate: 2015-05-16 21:03:19\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-01-03T03:58:44.000Z","path":"categories/index.html","layout":"page","_id":"cis400j1d0008q623ed206zxs"},{"title":"About Me","date":"2015-05-06T12:56:39.000Z","comments":0,"_content":"* **这里是？**\n  记录一些生活的经历还有技术笔记、读书笔记和胡思乱想唠唠叨叨的文字.\n  关于*阿拉伯的鞋匠*这个名字,记忆中当时起这个名字的时候是因为记得一个故事说阿拉伯的人民中常年不穿鞋子,但在这样的环境下有一个鞋匠还在继续着他的修鞋事业.....\n  \n----------------------\n* **我是谁？**\n  - 游戏客户端开发者. 一只萌小猫的主人.\n  - _Coder && Emacs党 \n  - 使用C/C++、Pythone、ACTIONSCRIPT3.0、PHP等编程语言. \n-----------------------\n* **联系我:**\n  - Twitter: [@Leonhe]\n  - Github: [Leonhe(eiio)]\n  - QQ: 176153269 &nbsp; &nbsp; Email: [leonhe86@gmail.com]\n \n[leonhe86@gmail.com]: mailto:leonhe86@gmail.com\n[@Leonhe]:https://twitter.com/leonhe\n[Leonhe(eiio)]:https://github.com/leonhe\n","source":"about-us/index.md","raw":"title: \"About Me\"\ndate: 2015-05-06 20:56:39\ncomments: false\n---\n* **这里是？**\n  记录一些生活的经历还有技术笔记、读书笔记和胡思乱想唠唠叨叨的文字.\n  关于*阿拉伯的鞋匠*这个名字,记忆中当时起这个名字的时候是因为记得一个故事说阿拉伯的人民中常年不穿鞋子,但在这样的环境下有一个鞋匠还在继续着他的修鞋事业.....\n  \n----------------------\n* **我是谁？**\n  - 游戏客户端开发者. 一只萌小猫的主人.\n  - _Coder && Emacs党 \n  - 使用C/C++、Pythone、ACTIONSCRIPT3.0、PHP等编程语言. \n-----------------------\n* **联系我:**\n  - Twitter: [@Leonhe]\n  - Github: [Leonhe(eiio)]\n  - QQ: 176153269 &nbsp; &nbsp; Email: [leonhe86@gmail.com]\n \n[leonhe86@gmail.com]: mailto:leonhe86@gmail.com\n[@Leonhe]:https://twitter.com/leonhe\n[Leonhe(eiio)]:https://github.com/leonhe\n","updated":"2016-08-30T14:09:15.000Z","path":"about-us/index.html","_id":"cis400j1f0009q6231qltj531","layout":"page"}],"Post":[{"title":"12月的感慨","date":"2014-12-05T14:49:41.000Z","_content":"\n已经有段时间没有更新自己的博客了,每年都会有12月但也只有每次到了12月才意识到今年已经过去，一切都如同往年的经历一样到了12月份总是又到想到年终总结.,在回想自己今年做了什么？恍恍惚惚的一年如同飞奔着的车窗外的栏栅_瞬息即逝,每年都一个12月但每年都会渐进并且不知的年龄让你成长并承受更多的责任无以逃避的机会._\n\n12月总是一个带有凄凉并且寒冷的岁月,不同的公司新的和旧的面孔做着一样的事情同样的处境,或许还比以前的处境更加的艰难因为都是为了同一个梦，一切的事情都是有因必有其果.静静的看着电脑屏幕上编译出的产品如同菜板的鱼,在怎么垂死的挣扎又怎能摆脱已经决定好的命运呢？一切都是那么的突然或许是因为思考的太多让思绪杂乱如麻.","source":"_posts/12月的感慨.md","raw":"title: \"12月的感慨\"\ndate: 2014-12-05 22:49:41\ntags: 胡思乱想\ncategories: 生活记录\n---\n\n已经有段时间没有更新自己的博客了,每年都会有12月但也只有每次到了12月才意识到今年已经过去，一切都如同往年的经历一样到了12月份总是又到想到年终总结.,在回想自己今年做了什么？恍恍惚惚的一年如同飞奔着的车窗外的栏栅_瞬息即逝,每年都一个12月但每年都会渐进并且不知的年龄让你成长并承受更多的责任无以逃避的机会._\n\n12月总是一个带有凄凉并且寒冷的岁月,不同的公司新的和旧的面孔做着一样的事情同样的处境,或许还比以前的处境更加的艰难因为都是为了同一个梦，一切的事情都是有因必有其果.静静的看着电脑屏幕上编译出的产品如同菜板的鱼,在怎么垂死的挣扎又怎能摆脱已经决定好的命运呢？一切都是那么的突然或许是因为思考的太多让思绪杂乱如麻.","slug":"12月的感慨","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j010000q623eywz89i5"},{"title":"那时是那么的熟悉,这时又是那样的陌生.","date":"2014-10-03T13:36:56.000Z","_content":"\n记因为一些都已经忘记的琐事本不是那么重要的事而使当初那么熟悉的人变得形同陌路,也许是因为我们没有长久的联系也许是因为你太在意哪些事或许更多的是因为我们之间没有了互相的利害关系.也许更多的就是相识到离开变得陌生并忘掉.\n\n我们在这个社会上都是孤独的生物,我们不断的认识和结识新的陌生人但我们也在渐渐的让熟悉的人变的陌生.当我们离开这个世界的时候能认识你并牢记你的人寥寥可数,因为没有人能永世长存我们只不过是这个宇宙的一颗小沙粒.\n\n有的人认识你是因为你现在对他还有利害关系在里面,你现在所认识并熟悉的人将来有一天都会变成形同陌路因为你们当时候会长久不联系而变得陌生,因为我们的记忆都是不可靠的东西.我们要用更多的精力去认识其他的陌生人并让他们和我们变得熟悉.\n\n在一个陌生并又是那么熟悉的城市里,你有多少真正能记得你的人呢？这里的记得不是在微博上和朋友圈、QQ空间给你点赞和给你发布新消息点赞和留言的人.而是那些能时不时给你电话和消息问候,唯一值得欣慰的是至少别人在意你是否存在.其实这些观点都是那么的矛盾,但我们不就是哪样的生活着吗？","source":"_posts/那时是那么的熟悉,这时又是那样的陌生.md","raw":"title: \"那时是那么的熟悉,这时又是那样的陌生.\"\ndate: 2014-10-03 21:36:56\ntags: 胡思乱想\ncategories: 生活记录\n---\n\n记因为一些都已经忘记的琐事本不是那么重要的事而使当初那么熟悉的人变得形同陌路,也许是因为我们没有长久的联系也许是因为你太在意哪些事或许更多的是因为我们之间没有了互相的利害关系.也许更多的就是相识到离开变得陌生并忘掉.\n\n我们在这个社会上都是孤独的生物,我们不断的认识和结识新的陌生人但我们也在渐渐的让熟悉的人变的陌生.当我们离开这个世界的时候能认识你并牢记你的人寥寥可数,因为没有人能永世长存我们只不过是这个宇宙的一颗小沙粒.\n\n有的人认识你是因为你现在对他还有利害关系在里面,你现在所认识并熟悉的人将来有一天都会变成形同陌路因为你们当时候会长久不联系而变得陌生,因为我们的记忆都是不可靠的东西.我们要用更多的精力去认识其他的陌生人并让他们和我们变得熟悉.\n\n在一个陌生并又是那么熟悉的城市里,你有多少真正能记得你的人呢？这里的记得不是在微博上和朋友圈、QQ空间给你点赞和给你发布新消息点赞和留言的人.而是那些能时不时给你电话和消息问候,唯一值得欣慰的是至少别人在意你是否存在.其实这些观点都是那么的矛盾,但我们不就是哪样的生活着吗？","slug":"那时是那么的熟悉,这时又是那样的陌生","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j1h000aq623mp9c3no4"},{"title":"选择","date":"2013-04-30T15:16:00.000Z","_content":"\n选择来临的时候总是一愁莫展，纠结了快半年才决定的结果面对现实时总是不那么的坚定，并选择向现实妥协.还不停的反问着选择的是否正确。日子总是那么漫长，不知漫长是为了储蓄能量还是生活本是如此的空洞和无所作为，也许天生就是一个忙碌奔波的逐影。\n\n迫于生活和理想的追求而放弃现在的甜蜜日子是否正确？如此的生活意义究竟何在？对现状是否有所改变？也许是过于的给了自己太多的压力,总是没有好的想法和思想，只有借口给生存经验的不够。\n\n过多的想法造成心理的负担，一切都是那么的无助、无奈。思想在现实面前总是受到挑战和打击，心灵的脆弱和性格的妥协怎样才能变得更加的持久呢？\n\n潜伏在皮肤下的心灵呀，你们是多么的不想被阳光晒到呀？","source":"_posts/选择.md","raw":"title: \"选择\"\ndate: 2013-04-30 23:16:00\ntags: 胡思乱想\ncategories: 生活记录\n---\n\n选择来临的时候总是一愁莫展，纠结了快半年才决定的结果面对现实时总是不那么的坚定，并选择向现实妥协.还不停的反问着选择的是否正确。日子总是那么漫长，不知漫长是为了储蓄能量还是生活本是如此的空洞和无所作为，也许天生就是一个忙碌奔波的逐影。\n\n迫于生活和理想的追求而放弃现在的甜蜜日子是否正确？如此的生活意义究竟何在？对现状是否有所改变？也许是过于的给了自己太多的压力,总是没有好的想法和思想，只有借口给生存经验的不够。\n\n过多的想法造成心理的负担，一切都是那么的无助、无奈。思想在现实面前总是受到挑战和打击，心灵的脆弱和性格的妥协怎样才能变得更加的持久呢？\n\n潜伏在皮肤下的心灵呀，你们是多么的不想被阳光晒到呀？","slug":"选择","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j1k000dq623dv2kew36"},{"title":"这一年","date":"2013-12-31T10:42:49.000Z","id":"60","_content":"\n2013这一年是原地踏步的一年被坑的一年浑浑噩噩的一年.\n\n这一年工作上离职2次,换过一份工作从网页游戏开发转为手机游戏前端开发.离开了呆了接近3年的公司然后离职后接近2个月时间找工作并自己开发了一个手机小游戏,离职后在接近两个月的时间内被进入了微游互动继续前端开发，在进入微游戏不到1个月的时间里被一个素未谋面的朋友叫去创业做手游一直到现在,做到现在从其中接触的过程中发生的很多事情感觉自己遇人不顺，不善言谈的自己总是选择不对，曾经发过一则微薄说：“希望把一辈的坑都跳了”,在事业上木有什么成就感觉近两年来没有什么改变一直是在原地踏步走，除在这些事件中学会到选择是多么的重要别人说的在好听都只是表面上的东西.\n\n<!--more-->这一年学会了番茄时间管理和GDT时间管理技巧的应用并很大程度上提升了工作效率.\n\n这一年阅读过32本书这也是我从以前1年难阅读除技术书籍以外的2-3本书以外的一个小改变.断断续续的学习过2次的英语到最终放弃.\n\n这一年技术上入门C++Cpyhton语言、cocos2d-x框架,可以使用这些语言做些小工具或小游戏,体会到了不同语言的思想和局限性。\n\n这一年接过一个外包网站应用，独立开发一个手机小游戏[IQ翻翻看](http://www.mumayi.com/android-315276.html \"IQ翻翻看\")\n\n这一年生活上还是一层不变的生活方式缺乏与人交流的主动性，休息时间总是喜欢孤单的宅在家里,极力的想寻找除工作以外事物的兴趣总是不的所获.唯一感觉欣慰的是妞妞一路的陪伴,感觉到了家庭的重要性.本来打算在年底之前组建自己的小家庭，随着我们工作的原因只有拖延到2014年上半年了.\n\n这一年随着年龄的逐渐增大体会到了在这个世界上自己需要一个家庭的重要性改变自己孤独的性格.\n\n在2014年需要改变自己的生活方式由内到外的改变，组建自己的小家庭.培养自己缺少的那份耐心.继续寻找靠谱的合作伙伴开发靠谱的产品或游戏.\n\n&nbsp;","source":"_posts/这一年.md","raw":"title: \"这一年\"\ndate: 2013-12-31 18:42:49\ntags:\nid: 60\ncategories:\n  - 生活记录\n---\n\n2013这一年是原地踏步的一年被坑的一年浑浑噩噩的一年.\n\n这一年工作上离职2次,换过一份工作从网页游戏开发转为手机游戏前端开发.离开了呆了接近3年的公司然后离职后接近2个月时间找工作并自己开发了一个手机小游戏,离职后在接近两个月的时间内被进入了微游互动继续前端开发，在进入微游戏不到1个月的时间里被一个素未谋面的朋友叫去创业做手游一直到现在,做到现在从其中接触的过程中发生的很多事情感觉自己遇人不顺，不善言谈的自己总是选择不对，曾经发过一则微薄说：“希望把一辈的坑都跳了”,在事业上木有什么成就感觉近两年来没有什么改变一直是在原地踏步走，除在这些事件中学会到选择是多么的重要别人说的在好听都只是表面上的东西.\n\n<!--more-->这一年学会了番茄时间管理和GDT时间管理技巧的应用并很大程度上提升了工作效率.\n\n这一年阅读过32本书这也是我从以前1年难阅读除技术书籍以外的2-3本书以外的一个小改变.断断续续的学习过2次的英语到最终放弃.\n\n这一年技术上入门C++Cpyhton语言、cocos2d-x框架,可以使用这些语言做些小工具或小游戏,体会到了不同语言的思想和局限性。\n\n这一年接过一个外包网站应用，独立开发一个手机小游戏[IQ翻翻看](http://www.mumayi.com/android-315276.html \"IQ翻翻看\")\n\n这一年生活上还是一层不变的生活方式缺乏与人交流的主动性，休息时间总是喜欢孤单的宅在家里,极力的想寻找除工作以外事物的兴趣总是不的所获.唯一感觉欣慰的是妞妞一路的陪伴,感觉到了家庭的重要性.本来打算在年底之前组建自己的小家庭，随着我们工作的原因只有拖延到2014年上半年了.\n\n这一年随着年龄的逐渐增大体会到了在这个世界上自己需要一个家庭的重要性改变自己孤独的性格.\n\n在2014年需要改变自己的生活方式由内到外的改变，组建自己的小家庭.培养自己缺少的那份耐心.继续寻找靠谱的合作伙伴开发靠谱的产品或游戏.\n\n&nbsp;","slug":"这一年","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j1n000gq6230i3qdiph"},{"title":"近来招人的经历","date":"2014-08-22T14:00:55.000Z","_content":"\n在最近公司项目需要客户端人员的情况下，也面试了很多毕业生或工作2-3年的年轻人,但在过程中也体会到了这个初入这个行业的大多数都是比较浮躁的.\n\n我喜欢先在面谈过程中直接问他们使用语言多长时间，然后在让他们给自己使用的语言评个级就是自己当前处于什么样的阶段毕竟做到自知自明,在根据使用语言时间的长短来提出一些编程语言的知识.普遍的情况就是给自己评级都是中高级,然后我提问标准库常用的数据结构都不能答出来,这个是多么的让人大跌眼镜呀.毕竟是技术面试自己也就问了些工作过程中需要用到的一些技能和编程语言的基础知识,但大多数回答的都不是那么的满意而且绝大多数竟然都不知道,我也不知道他们那2-3年的工作经验是怎么个过程.\n\n其中也不免有些拿着别人的代码改成一个产品然后说是自己做的,还有就是培训机构出来的学生找工作时在自己的简历上随便写家在某公司有过工作经验.还有某位他的技术上也就属于能做事,在HR面试福利待遇还有工资情况后直接狮子大张口,试问了句：“我们为什么给你开那么高的工资？”他的回答是：“我就值这么多”.这种是属于刚刚失去工作心理还处于那种我就是精英的阶段.\n\n提起这些就感觉到这个行业的人才是多么的浮躁呀！\n\n一步一个脚印打好基础知识,那样你才会更加的坚固,可以避免在这个技术千变万化的年代被淘汰,如果你不喜欢这个行业可以趁早转行避免浪费不必要的时间在这上边.\n\n&nbsp;","source":"_posts/近来招人的经历.md","raw":"title: \"近来招人的经历\"\ndate: 2014-08-22 22:00:55\ncategories: 职业生涯\n---\n\n在最近公司项目需要客户端人员的情况下，也面试了很多毕业生或工作2-3年的年轻人,但在过程中也体会到了这个初入这个行业的大多数都是比较浮躁的.\n\n我喜欢先在面谈过程中直接问他们使用语言多长时间，然后在让他们给自己使用的语言评个级就是自己当前处于什么样的阶段毕竟做到自知自明,在根据使用语言时间的长短来提出一些编程语言的知识.普遍的情况就是给自己评级都是中高级,然后我提问标准库常用的数据结构都不能答出来,这个是多么的让人大跌眼镜呀.毕竟是技术面试自己也就问了些工作过程中需要用到的一些技能和编程语言的基础知识,但大多数回答的都不是那么的满意而且绝大多数竟然都不知道,我也不知道他们那2-3年的工作经验是怎么个过程.\n\n其中也不免有些拿着别人的代码改成一个产品然后说是自己做的,还有就是培训机构出来的学生找工作时在自己的简历上随便写家在某公司有过工作经验.还有某位他的技术上也就属于能做事,在HR面试福利待遇还有工资情况后直接狮子大张口,试问了句：“我们为什么给你开那么高的工资？”他的回答是：“我就值这么多”.这种是属于刚刚失去工作心理还处于那种我就是精英的阶段.\n\n提起这些就感觉到这个行业的人才是多么的浮躁呀！\n\n一步一个脚印打好基础知识,那样你才会更加的坚固,可以避免在这个技术千变万化的年代被淘汰,如果你不喜欢这个行业可以趁早转行避免浪费不必要的时间在这上边.\n\n&nbsp;","slug":"近来招人的经历","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j1r000iq623as0cqkwf"},{"title":"胡思乱想的担忧","date":"2013-10-24T08:23:09.000Z","_content":"\n事已至此说的在多有何用,过多的解释反而被倾听成为一种辩解.\n\n也有可能是我的倾诉方式不对.\n\n过多的担忧反而造成了我越来越没有安全感，自信心的丧失.\n\n但至少还有信任让我得到了一点心里安慰.\n\n过份的担忧会导致情感的宣泄方式错误有点迷失方向.\n\n也不知道这样的心情会持续多久.\n\n感性的我总是会胡思乱想.\n\n也许更多的在乎.","source":"_posts/胡思乱想的担忧.md","raw":"title: \"胡思乱想的担忧\"\ndate: 2013-10-24 16:23:09\ntags: 胡思乱想\ncategories: 生活记录\n---\n\n事已至此说的在多有何用,过多的解释反而被倾听成为一种辩解.\n\n也有可能是我的倾诉方式不对.\n\n过多的担忧反而造成了我越来越没有安全感，自信心的丧失.\n\n但至少还有信任让我得到了一点心里安慰.\n\n过份的担忧会导致情感的宣泄方式错误有点迷失方向.\n\n也不知道这样的心情会持续多久.\n\n感性的我总是会胡思乱想.\n\n也许更多的在乎.","slug":"胡思乱想的担忧","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j1u000lq623b20nup7e"},{"title":"美剧<<硅谷>>观后感","date":"2015-07-26T10:37:41.000Z","_content":"这两天在无意中看见美剧[《硅谷》](http://movie.douban.com/subject/20644938/),并单日连续性的把第一季和第二季一起看完了单集时间还算比较短，其中最主要讲的就是硅谷的车库创业文化，可以分类为技术宅创业类。\n\n<!--more-->\n##剧情如下\n主人公Richard Hendricks和他的小伙伴们因为一款魔笛手的互联网应用在不停的找投资的过程中无果，结果在无意间被硅谷有名的大公司hooli互利看中其中的数据压缩算法，在谈判购买其中的算法过程中Richard接到硅谷有名的投资人Pete Gregory的投资5%的股份20W刀，最终Richard接受了Pete的投资放弃了巨额收购的1千万美金。\n后面互利通过反编译拿到魔笛手的压缩算法，在接着Richard遇见的第一个问题就是天使投资Pete需要详细的的商业计划书，在一群技术宅没有任何商业经验的基础下，他们邀请了佩服Richard的现任互利总监职位的jared加入并获得了第一笔天使投资，到团队投票开除最好的朋友大头的时候决策因为大头未给产品提供任何的投入，最终Richard没有开除他朋友的决定反而他朋友被hooli高薪挖走，到被Hooli的反编译代码获取核心算法并开发出比他们更厉害的产品并一起参加科技博客主持的创业大赛并最终通过各种的曲折开发在比赛进入决赛前一天在团队都要绝望的时候临时变更算法开发出效率更高的压缩数据算法并最终获得大赛的冠军，因为大赛冠军的获得也为他们魔笛手团队获得各种基金公司风投的亲昧并要注资，到最后Hooli反告他们的侵权风投和基金公司的冷漠和无情，到在被商业世界无情的抛弃并绝望中让整个团队活下去的同时Hooli找到他让整个团队和产品卖给Hooli，在准备接受并签订合约的同时，另一名投资找到他并答应注资500W刀。在这个好消息带给团队的同时代价是让出两个董事位置和投资是分阶段的注入。为了让团队和下去CEO也接受了，到在某家基金公司因为询问核心算法因为它们的无知告诉另外的我一个团队，它们负责相应的技术算法应用到了在线视频传输上边。在大公司使用技术开发在线直播视频传输项目来直播一场搏击直播失败的情况下。最后因为一场拆除在线直播视频让它们的软件一炮儿红并在大公司的侵权官司获胜.\n\n## 观后感想\n\n创始人其实很辛苦要面对各种的未知事件和人物，稍微有点差错则会毁之一旦,这也提醒了我们做产品一定要注意保密自己的知识产权，如果一开始就注意这些以后的路途会避免很多问题。\n\n其中最主要就是对几个团队核心人员或创始人性格的描述，虽然程序员一直是对技术的最求，但技术是应用到产品上的你的产品是给用户使用的，所以应该反向思维从需求—》产品-》技术算法的研究。\n\n产品就像自己的孩子，其实团队对自己一手创造的东西占有欲都非常的强，像剧中因为败诉要求团队成员而删除所有的代码和数据。虽然最终是很幸运没有删除，但现实中可能这样的幸运情况几乎不可能发生，这就说明对自己的产品占有欲的强烈度。\n\n做自己喜欢做的东西永远是那么的有激情，就如最后败诉前的视频直播，为了让30万同时在线人数的视频直播不断线哪怕家中起火服务器燃烧也不能让服务器短线，因为自己很多年不写代码的黑客继续为服务器缓存开发代码。\n\n创业就是一场徒步旅行，因为你在其间会遇见各色各样的事件和人，有些人因为欣赏你的决定和所为自己追求一直坚持不懈的努力而追随你，也有些人因为不同的价值观而放弃你，但只要你一直坚持做你自己并想着最初做这件事的目的这样你就不会为创业后的花花世界虽放弃自己的追求。\n","source":"_posts/美剧-硅谷-观后感.md","raw":"title: \"美剧<<硅谷>>观后感\"\ndate: 2015-07-26 18:37:41\ntags: 美剧\ncategories: 生活记录\n---\n这两天在无意中看见美剧[《硅谷》](http://movie.douban.com/subject/20644938/),并单日连续性的把第一季和第二季一起看完了单集时间还算比较短，其中最主要讲的就是硅谷的车库创业文化，可以分类为技术宅创业类。\n\n<!--more-->\n##剧情如下\n主人公Richard Hendricks和他的小伙伴们因为一款魔笛手的互联网应用在不停的找投资的过程中无果，结果在无意间被硅谷有名的大公司hooli互利看中其中的数据压缩算法，在谈判购买其中的算法过程中Richard接到硅谷有名的投资人Pete Gregory的投资5%的股份20W刀，最终Richard接受了Pete的投资放弃了巨额收购的1千万美金。\n后面互利通过反编译拿到魔笛手的压缩算法，在接着Richard遇见的第一个问题就是天使投资Pete需要详细的的商业计划书，在一群技术宅没有任何商业经验的基础下，他们邀请了佩服Richard的现任互利总监职位的jared加入并获得了第一笔天使投资，到团队投票开除最好的朋友大头的时候决策因为大头未给产品提供任何的投入，最终Richard没有开除他朋友的决定反而他朋友被hooli高薪挖走，到被Hooli的反编译代码获取核心算法并开发出比他们更厉害的产品并一起参加科技博客主持的创业大赛并最终通过各种的曲折开发在比赛进入决赛前一天在团队都要绝望的时候临时变更算法开发出效率更高的压缩数据算法并最终获得大赛的冠军，因为大赛冠军的获得也为他们魔笛手团队获得各种基金公司风投的亲昧并要注资，到最后Hooli反告他们的侵权风投和基金公司的冷漠和无情，到在被商业世界无情的抛弃并绝望中让整个团队活下去的同时Hooli找到他让整个团队和产品卖给Hooli，在准备接受并签订合约的同时，另一名投资找到他并答应注资500W刀。在这个好消息带给团队的同时代价是让出两个董事位置和投资是分阶段的注入。为了让团队和下去CEO也接受了，到在某家基金公司因为询问核心算法因为它们的无知告诉另外的我一个团队，它们负责相应的技术算法应用到了在线视频传输上边。在大公司使用技术开发在线直播视频传输项目来直播一场搏击直播失败的情况下。最后因为一场拆除在线直播视频让它们的软件一炮儿红并在大公司的侵权官司获胜.\n\n## 观后感想\n\n创始人其实很辛苦要面对各种的未知事件和人物，稍微有点差错则会毁之一旦,这也提醒了我们做产品一定要注意保密自己的知识产权，如果一开始就注意这些以后的路途会避免很多问题。\n\n其中最主要就是对几个团队核心人员或创始人性格的描述，虽然程序员一直是对技术的最求，但技术是应用到产品上的你的产品是给用户使用的，所以应该反向思维从需求—》产品-》技术算法的研究。\n\n产品就像自己的孩子，其实团队对自己一手创造的东西占有欲都非常的强，像剧中因为败诉要求团队成员而删除所有的代码和数据。虽然最终是很幸运没有删除，但现实中可能这样的幸运情况几乎不可能发生，这就说明对自己的产品占有欲的强烈度。\n\n做自己喜欢做的东西永远是那么的有激情，就如最后败诉前的视频直播，为了让30万同时在线人数的视频直播不断线哪怕家中起火服务器燃烧也不能让服务器短线，因为自己很多年不写代码的黑客继续为服务器缓存开发代码。\n\n创业就是一场徒步旅行，因为你在其间会遇见各色各样的事件和人，有些人因为欣赏你的决定和所为自己追求一直坚持不懈的努力而追随你，也有些人因为不同的价值观而放弃你，但只要你一直坚持做你自己并想着最初做这件事的目的这样你就不会为创业后的花花世界虽放弃自己的追求。\n","slug":"美剧-硅谷-观后感","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j1w000oq623vt21st9d"},{"title":"纪念陪伴4年多的Kindle","date":"2016-05-11T12:57:21.000Z","_content":"\n前几天因为Kindle没有电了，在完成充电后直接导致变砖，使用官方的按键40S重启方法也没用,然后找官方客服得到的结论是因为我买的美亚版本不能给修,无能为力也尝试自己折腾下拿着螺丝刀根据网上的教程分解了下它,发现并不是我假设的那样简单的把电池拆解下来然后在安装回去可能会好,神奇的Kindle在我电池拆下来的时候屏幕还是跟变砖时候是一样的显示,最后怀疑是软件导致的问题接着就到网上去搜索怎样的刷机过程也跟着做了才发现在Fastboot的时候一直提示“Wating for device”,发现USB驱动一直没有连接上,这也导致了折腾的时间结束。\n<!-- more -->\n在没有Kindle的时间里才发现自己是如此的依赖上了这个电子产品,在零碎的时间总是会去拿起Kindle看,在Kindle陪伴我的4年时间里看了书也不下百本吧,最重要的是它给了我一个阅读习惯和在零碎时间能更快获取知识的一个途径。最近也开始试着在手机上去看一些资料和epub的电子书但发现还是因为屏幕是如此的小没有电子书的墨水屏那种体验感而放弃,最后还是不能仍受长时间的阅读导致眼睛的疲惫而上亚马逊又订购了一台.\n\n最后上一张这个陪伴了我4年的小电子产品最后变砖后的图吧!!!\n![Kindle Paperwith](/images/kindle.jpg)\n","source":"_posts/纪念陪伴4年多的Kindle.md","raw":"---\ntitle: 纪念陪伴4年多的Kindle\ndate: 2016-05-11 20:57:21\ntag: 折腾\ncategories: 生活记录\n---\n\n前几天因为Kindle没有电了，在完成充电后直接导致变砖，使用官方的按键40S重启方法也没用,然后找官方客服得到的结论是因为我买的美亚版本不能给修,无能为力也尝试自己折腾下拿着螺丝刀根据网上的教程分解了下它,发现并不是我假设的那样简单的把电池拆解下来然后在安装回去可能会好,神奇的Kindle在我电池拆下来的时候屏幕还是跟变砖时候是一样的显示,最后怀疑是软件导致的问题接着就到网上去搜索怎样的刷机过程也跟着做了才发现在Fastboot的时候一直提示“Wating for device”,发现USB驱动一直没有连接上,这也导致了折腾的时间结束。\n<!-- more -->\n在没有Kindle的时间里才发现自己是如此的依赖上了这个电子产品,在零碎的时间总是会去拿起Kindle看,在Kindle陪伴我的4年时间里看了书也不下百本吧,最重要的是它给了我一个阅读习惯和在零碎时间能更快获取知识的一个途径。最近也开始试着在手机上去看一些资料和epub的电子书但发现还是因为屏幕是如此的小没有电子书的墨水屏那种体验感而放弃,最后还是不能仍受长时间的阅读导致眼睛的疲惫而上亚马逊又订购了一台.\n\n最后上一张这个陪伴了我4年的小电子产品最后变砖后的图吧!!!\n![Kindle Paperwith](/images/kindle.jpg)\n","slug":"纪念陪伴4年多的Kindle","published":1,"updated":"2016-05-11T13:38:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j1z000sq623btxab9tr"},{"title":"等待的三天结束了半年的时间","date":"2014-12-19T16:14:06.000Z","id":"379","_content":"\n三天的等待结束了半年的时间跟精力又是一个失败的项目(美食的俘虏),并且和以前公司的项目情况竟然结局是一样的但是情况却不一样,只是因为某些人不想做或者老板不愿意投资或者老板的目的并不是做游戏而导致咯项目的失败导致最终裁员遣散。这个也只能说当初找初创扎窝的时候我们没有经过细心的考虑并且也是年轻太义气用事而导致今天的结果,也许就是人总是要经历各种的曲折和跳过无数的坑才能成长并且成熟.\n\n在裁员的谈判过程中虽然对不满意的处理结果也只有忍着减少利益损失的最小化,也就是退一步海阔天空.在这过程中的各种斗智斗勇到各种的折腾最后到对各种人什么样面孔的认识,也许应咯那句叫在最后或者困难的时候就看出来谁是真正对你好的人谁是真正对你有帮助的人,开始每个人都是义正言辞的沟通到在大难临头各自飞在利益面前总是能显出现实的残酷和人心的险恶.","source":"_posts/等待的三天结束了半年的时间.md","raw":"title: \"等待的三天结束了半年的时间\"\ndate: 2014-12-20 00:14:06\ntags:\nid: 379\ncategories: 职业生涯\n---\n\n三天的等待结束了半年的时间跟精力又是一个失败的项目(美食的俘虏),并且和以前公司的项目情况竟然结局是一样的但是情况却不一样,只是因为某些人不想做或者老板不愿意投资或者老板的目的并不是做游戏而导致咯项目的失败导致最终裁员遣散。这个也只能说当初找初创扎窝的时候我们没有经过细心的考虑并且也是年轻太义气用事而导致今天的结果,也许就是人总是要经历各种的曲折和跳过无数的坑才能成长并且成熟.\n\n在裁员的谈判过程中虽然对不满意的处理结果也只有忍着减少利益损失的最小化,也就是退一步海阔天空.在这过程中的各种斗智斗勇到各种的折腾最后到对各种人什么样面孔的认识,也许应咯那句叫在最后或者困难的时候就看出来谁是真正对你好的人谁是真正对你有帮助的人,开始每个人都是义正言辞的沟通到在大难临头各自飞在利益面前总是能显出现实的残酷和人心的险恶.","slug":"等待的三天结束了半年的时间","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j21000wq623qmu168st"},{"title":"生成cocos2d-x离线API文档","date":"2014-06-20T09:48:52.000Z","id":"320","_content":"\n安装: doxygen\n\n*   mac os: brew install doxygen\n*   windos: [Doxygen Download](http://doxygen.cn.uptodown.com)\n进入cocos2d-x/docs 文件夹，运行doxygen doxygen.config，查看目录下边生成的html目录","source":"_posts/生成cocos2d-x离线API文档.md","raw":"title: \"生成cocos2d-x离线API文档\"\ndate: 2014-06-20 17:48:52\ntags:\nid: 320\ncategories:\n  - 技术工具\n---\n\n安装: doxygen\n\n*   mac os: brew install doxygen\n*   windos: [Doxygen Download](http://doxygen.cn.uptodown.com)\n进入cocos2d-x/docs 文件夹，运行doxygen doxygen.config，查看目录下边生成的html目录","slug":"生成cocos2d-x离线API文档","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j23000yq623a3096dn5"},{"title":"现实和梦想","date":"2014-11-22T15:01:07.000Z","_content":"\n“现实总是残酷的梦想总是美好的” 这句话不知道被说了多少次和被无数的事实所证明其中的真理.\n\n有美好的梦想固然重要但建立的前提是在现实的基础上.\n\n如果没有了梦想也只有固步自封的不能前行也没有未之而奋斗的目标，但有时现实往往在你实现梦想的途中给的阻碍是那么的强大而且很容易让你因此而退缩也或是你直接导致梦想破灭的原因.因为你要面对现实而做出妥协.\n\n在制定目标的时候看清现实和理想的差距决定着你最终实现梦想的几率有多大.\n\n不完整的思考也只能随它而去.\n\n&nbsp;","source":"_posts/现实和梦想.md","raw":"title: \"现实和梦想\"\ndate: 2014-11-22 23:01:07\ntags: 胡思乱想\n---\n\n“现实总是残酷的梦想总是美好的” 这句话不知道被说了多少次和被无数的事实所证明其中的真理.\n\n有美好的梦想固然重要但建立的前提是在现实的基础上.\n\n如果没有了梦想也只有固步自封的不能前行也没有未之而奋斗的目标，但有时现实往往在你实现梦想的途中给的阻碍是那么的强大而且很容易让你因此而退缩也或是你直接导致梦想破灭的原因.因为你要面对现实而做出妥协.\n\n在制定目标的时候看清现实和理想的差距决定着你最终实现梦想的几率有多大.\n\n不完整的思考也只能随它而去.\n\n&nbsp;","slug":"现实和梦想","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j260011q623qk3spd3x"},{"title":"永恒的终结 读书笔记","date":"2015-02-12T11:05:47.000Z","id":"494","_content":"\n<div>这是一部关于时间旅行和平行时空概念的一部小说,大致的故事情节是永恒时空的发明出现在27世界,在时间以外有一个永恒的时空那里的人各司其职对不同时间段所改变结果的事情进行调整这在里面也叫着时间的变革,但70000世纪以上就是永恒时空所未知的区域,但事实是那里还存在更为厉害的人,最终事情发生在时间规划师安德鲁.哈伦身上她爱上了一个身处在854世纪的一个女人事实是这个女人来自120000世纪也就是永恒时空未知世纪的人，她带着摧毁永恒时空的责任和任务来改变平行时间发生的可能性 不让永恒时空产生改变人类自我发展的命运的使命来到845世纪并让哈伦爱上了她，但事实是后来她成功咯.</div>\n<!--more-->\n<div>看完后关于平行时空和一段时间旅行也有咯一点点的深思，这里的故事和我前段时间看的《星际穿越》中提出的时间概念有很多共同点,也就是通过不同世纪来传递让未来世纪中人们能理解的信号完成时间概念的因果循环.</div>\n<div></div>\n<div>什么是平行时空？大致的意思是我们生活的随着各种不同的选择对事物发展也有各种不同的结果产生,也就是事物会随着各种不同的选择而产生的结果也不同。在我存在世界也有千千万万个随着选择不同的世界存在并运行着.</div>\n<div></div>\n<div>看着豆瓣上的书评说关于科幻的时空小说,不能过多的思考因为其中的空间是无限大的,或许这是正确的这样看起来人类是多么的渺小.</div>\n<div></div>\n<div>人生就是一段时间点,好好的珍惜演绎好那个时间点吧,有无数种可能性或者平行的时间概念.但我们又能怎么去发现或者让它能为我们做些什么事情呢？</div>","source":"_posts/永恒的终结读书笔记.md","raw":"title: \"永恒的终结 读书笔记\"\ndate: 2015-02-12 19:05:47\ntags:\nid: 494\ncategories: 读书笔记\n---\n\n<div>这是一部关于时间旅行和平行时空概念的一部小说,大致的故事情节是永恒时空的发明出现在27世界,在时间以外有一个永恒的时空那里的人各司其职对不同时间段所改变结果的事情进行调整这在里面也叫着时间的变革,但70000世纪以上就是永恒时空所未知的区域,但事实是那里还存在更为厉害的人,最终事情发生在时间规划师安德鲁.哈伦身上她爱上了一个身处在854世纪的一个女人事实是这个女人来自120000世纪也就是永恒时空未知世纪的人，她带着摧毁永恒时空的责任和任务来改变平行时间发生的可能性 不让永恒时空产生改变人类自我发展的命运的使命来到845世纪并让哈伦爱上了她，但事实是后来她成功咯.</div>\n<!--more-->\n<div>看完后关于平行时空和一段时间旅行也有咯一点点的深思，这里的故事和我前段时间看的《星际穿越》中提出的时间概念有很多共同点,也就是通过不同世纪来传递让未来世纪中人们能理解的信号完成时间概念的因果循环.</div>\n<div></div>\n<div>什么是平行时空？大致的意思是我们生活的随着各种不同的选择对事物发展也有各种不同的结果产生,也就是事物会随着各种不同的选择而产生的结果也不同。在我存在世界也有千千万万个随着选择不同的世界存在并运行着.</div>\n<div></div>\n<div>看着豆瓣上的书评说关于科幻的时空小说,不能过多的思考因为其中的空间是无限大的,或许这是正确的这样看起来人类是多么的渺小.</div>\n<div></div>\n<div>人生就是一段时间点,好好的珍惜演绎好那个时间点吧,有无数种可能性或者平行的时间概念.但我们又能怎么去发现或者让它能为我们做些什么事情呢？</div>","slug":"永恒的终结读书笔记","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j280013q6238un3umo4"},{"layout":"psot","title":"树莓派(Raspberry Pi)提示Energency mode需要Root密码的处理方法","date":"2016-07-03T12:33:55.000Z","_content":"闲置了一段时间的Raspberry Pi在上个周末问了电信要了路由器的超级管理用户名和密码后,打算架设一个外网能访问的个人云盘，最后把自己外接移动硬盘也接入上去,结果在其中mount硬盘的时候想在系统启动的时候自动挂载上去就在/etc/fstab文件中多加了两行数据,结果就导致重新启动系统后一直提示`Give me password for maintenance`需要输入Root密码进入Energency mode的提示,在多次入root密码后还是提示失败然后放弃了，另外找方法了.最后找到方法并解决掉了这个问题,具体处理办法和步骤如下：\n<!-- more-->\n    1. 在启动时候按住shift键进入安装界面然后点击Edite Config\n    2. 选择command_file.txt tab,在其中rootwait前加上 `init=/etc/bin`\n    3. 重新启动系统,进入bash后,输入su\n    4. 输入：mount -p remount,rw /\n    5. vi /etc/fstab把自己加的那两行删除掉,然后重启.\n    6. 重复步骤1，2,删除其中的`init=/etc/bin`\n    7. 恭喜你进入系统\n    \n其实类似的问题在启动画面因为某些引导程序的配置文件失败，也可以通过上边的方法解决并正常启动系统.最后附上我启动失败提示的画面.\n![Raspberry pi](images/2016-7-3.jpg)\n\n    \n    \n","source":"_posts/树莓派-Raspberry-Pi-Energency-mode.md","raw":"layout: psot\ntitle: 树莓派(Raspberry Pi)提示Energency mode需要Root密码的处理方法\ndate: 2016-07-03 20:33:55\ntags: [折腾,Raspberry PI ]\ncategories: 技术工具\n---\n闲置了一段时间的Raspberry Pi在上个周末问了电信要了路由器的超级管理用户名和密码后,打算架设一个外网能访问的个人云盘，最后把自己外接移动硬盘也接入上去,结果在其中mount硬盘的时候想在系统启动的时候自动挂载上去就在/etc/fstab文件中多加了两行数据,结果就导致重新启动系统后一直提示`Give me password for maintenance`需要输入Root密码进入Energency mode的提示,在多次入root密码后还是提示失败然后放弃了，另外找方法了.最后找到方法并解决掉了这个问题,具体处理办法和步骤如下：\n<!-- more-->\n    1. 在启动时候按住shift键进入安装界面然后点击Edite Config\n    2. 选择command_file.txt tab,在其中rootwait前加上 `init=/etc/bin`\n    3. 重新启动系统,进入bash后,输入su\n    4. 输入：mount -p remount,rw /\n    5. vi /etc/fstab把自己加的那两行删除掉,然后重启.\n    6. 重复步骤1，2,删除其中的`init=/etc/bin`\n    7. 恭喜你进入系统\n    \n其实类似的问题在启动画面因为某些引导程序的配置文件失败，也可以通过上边的方法解决并正常启动系统.最后附上我启动失败提示的画面.\n![Raspberry pi](images/2016-7-3.jpg)\n\n    \n    \n","slug":"树莓派-Raspberry-Pi-Energency-mode","published":1,"updated":"2016-07-03T13:04:59.000Z","comments":1,"photos":[],"link":"","_id":"cis400j2b0016q623vdupj6ne"},{"title":"机器学习常用资源","date":"2014-07-23T01:38:55.000Z","id":"336","_content":"\n常用语言的一些关于机器学习的代码库.收藏以备后边查阅!!!!!\n\n## C++\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#compute-vision)计算机视觉\n\n*   [CCV](https://github.com/liuliu/ccv) —基于C语言/提供缓存/核心的机器视觉库，新颖的机器视觉库\n*   [OpenCV](http://opencv.org/)—它提供C++, C, Python, Java 以及 MATLAB接口，并支持Windows, Linux, Android and Mac OS操作系统。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning)通用机器学习\n\n*   [MLPack](http://www.mlpack.org/)\n*   [DLib](http://dlib.net/ml.html)\n*   [ecogg](https://code.google.com/p/encog-cpp/)\n*   [shark](http://image.diku.dk/shark/sphinx_pages/build/html/index.html)\n<!--more-->\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#closure)Closure\n\n#### 通用机器学习\n\n*   [Closure Toolbox](http://www.clojure-toolbox.com/)—Clojure语言库与工具的分类目录\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#go)Go\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#natural-language-processing)自然语言处理\n\n*   [go-porterstemmer](https://github.com/reiver/go-porterstemmer)—一个Porter词干提取算法的原生Go语言净室实现\n*   [paicehusk](https://github.com/Rookii/paicehusk)—Paice/Husk词干提取算法的Go语言实现\n*   [snowball](https://bitbucket.org/tebeka/snowball)—Go语言版的Snowball词干提取器\n\n#### <span style=\"font-weight: bold;\">通用机器学习</span>[](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-2)\n\n*   [Go Learn](https://github.com/sjwhitworth/golearn)— Go语言机器学习库\n*   [go-pr](https://github.com/daviddengcn/go-pr) —Go语言机器学习包.\n*   [bayesian](https://github.com/jbrukh/bayesian)—Go语言朴素贝叶斯分类库。\n*   [go-galib](https://github.com/thoj/go-galib)—Go语言遗传算法库。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization)\n数据分析/数据可视化\n\n*   [go-graph](https://github.com/StepLg/go-graph)—Go语言图形库。\n*   [SVGo](http://www.svgopen.org/2011/papers/34-SVGo_a_Go_Library_for_SVG_generation/)—Go语言的SVG生成库。\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#java)Java\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#natural-language-processing-1)自然语言处理\n\n*   [CoreNLP](http://nlp.stanford.edu/software/corenlp.shtml)—斯坦福大学的CoreNLP提供一系列的自然语言处理工具，输入原始英语文本，可以给出单词的基本形式（下面Stanford开头的几个工具都包含其中）。\n*   [Stanford Parser](http://nlp.stanford.edu/software/lex-parser.shtml)—一个自然语言解析器。\n*   [Stanford POS Tagger](http://nlp.stanford.edu/software/tagger.shtml) —一个词性分类器。\n*   [Stanford Name Entity Recognizer](http://nlp.stanford.edu/software/CRF-NER.shtml)—Java实现的名称识别器\n*   [Stanford Word Segmenter](http://nlp.stanford.edu/software/segmenter.shtml)—分词器，很多NLP工作中都要用到的标准预处理步骤。\n*   [Tregex, Tsurgeon and Semgrex](http://nlp.stanford.edu/software/tregex.shtml) —用来在树状数据结构中进行模式匹配，基于树关系以及节点匹配的正则表达式（名字是“tree regular expressions”的缩写）。\n*   [Stanford Phrasal:](http://nlp.stanford.edu/software/phrasal/)最新的基于统计短语的机器翻译系统，[ ](http://nlp.stanford.edu/software/phrasal/)java编写\n*   [Stanford Tokens Regex](http://nlp.stanford.edu/software/tokensregex.shtml)—用以定义文本模式的框架。\n*   [Stanford Temporal Tagger](http://nlp.stanford.edu/software/sutime.shtml)—SUTime是一个识别并标准化时间表达式的库。\n*   [Stanford SPIED](http://nlp.stanford.edu/software/patternslearning.shtml)—在种子集上使用模式，以迭代方式从无标签文本中学习字符实体\n*   [Stanford Topic Modeling Toolbox](http://nlp.stanford.edu/software/tmt/tmt-0.4/) —为社会科学家及其他希望分析数据集的人员提供的主题建模工具。\n*   [Twitter Text Java](https://github.com/twitter/twitter-text-java)—Java实现的推特文本处理库\n*   [MALLET](http://mallet.cs.umass.edu/) -—基于Java的统计自然语言处理、文档分类、聚类、主题建模、信息提取以及其他机器学习文本应用包。\n*   [OpenNLP](https://opennlp.apache.org/)—处理自然语言文本的机器学习工具包。\n*   [LingPipe](http://alias-i.com/lingpipe/index.html) —使用计算机语言学处理文本的工具包。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-3)\n通用机器学习\n\n*   [MLlib in Apache Spark](http://spark.apache.org/docs/latest/mllib-guide.html)—Spark中的分布式机器学习程序库\n*   [Mahout](https://github.com/apache/mahout) —分布式的机器学习库\n*   [Stanford Classifier](http://nlp.stanford.edu/software/classifier.shtml) —斯坦福大学的分类器\n*   [Weka](http://www.cs.waikato.ac.nz/ml/weka/)—Weka是数据挖掘方面的机器学习算法集。\n*   [ORYX](https://github.com/cloudera/oryx)—提供一个简单的大规模实时机器学习/预测分析基础架构。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization-1)数据分析/数据可视化\n\n*   [Hadoop](https://github.com/apache/hadoop-mapreduce)—大数据分析平台\n*   [Spark](https://github.com/apache/spark)—快速通用的大规模数据处理引擎。\n*   [Impala](https://github.com/cloudera/impala) —为Hadoop实现实时查询\n\n## \n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#javascript)Javascript\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#natural-language-processing-2)自然语言处理\n\n*   [Twitter-text-js](https://github.com/twitter/twitter-text-js) —JavaScript实现的推特文本处理库\n*   [NLP.js](https://github.com/nicktesla/nlpjs) —javascript及coffeescript编写的NLP工具\n*   [natural](https://github.com/NaturalNode/natural)—Node下的通用NLP工具\n*   [Knwl.js](https://github.com/loadfive/Knwl.js)—JS编写的自然语言处理器\n\n#### \n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization-2)数据分析/数据可视化\n\n*   [D3.js](http://d3js.org/)\n*   [High Charts](http://www.highcharts.com/)\n*   [NVD3.js](http://nvd3.org/)\n*   [dc.js](http://dc-js.github.io/dc.js/)\n*   [chartjs](http://www.chartjs.org/)\n*   [dimple](http://dimplejs.org/)\n*   [amCharts](http://www.amcharts.com/)\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-4)\n通用机器学习\n\n*   [Convnet.js](http://cs.stanford.edu/people/karpathy/convnetjs/)—训练深度学习模型的JavaScript库。\n*   [Clustering.js](https://github.com/tixz/clustering.js)—用JavaScript实现的聚类算法，供Node.js及浏览器使用。\n*   [Decision Trees](https://github.com/serendipious/nodejs-decision-tree-id3)—Node.js实现的决策树，使用ID3算法。\n*   [Node-fann](https://github.com/rlidwka/node-fann) —Node.js下的快速人工神经网络库。\n*   [Kmeans.js](https://github.com/tixz/kmeans.js)—k-means算法的简单Javascript实现，供Node.js及浏览器使用。\n*   [LDA.js](https://github.com/primaryobjects/lda) —供Node.js用的LDA主题建模工具。\n*   [Learning.js](https://github.com/yandongliu/learningjs)—逻辑回归/c4.5决策树的JavaScript实现\n*   [Machine Learning](http://joonku.com/project/machine_learning)—Node.js的机器学习库。\n*   [Node-SVM](https://github.com/nicolaspanel/node-svm)—Node.js的支持向量机\n*   [Brain](https://github.com/harthur/brain) —JavaScript实现的神经网络\n*   [Bayesian-Bandit](https://github.com/omphalos/bayesian-bandit.js) —贝叶斯强盗算法的实现，供Node.js及浏览器使用。\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#julia)Julia\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-5)通用机器学习\n\n*   [PGM](https://github.com/JuliaStats/PGM.jl)—Julia实现的概率图模型框架。\n*   [DA](https://github.com/trthatcher/DA.jl)—Julia实现的正则化判别分析包。\n*   [Regression](https://github.com/lindahua/Regression.jl)—回归分析算法包（如线性回归和逻辑回归）。\n*   [Local Regression](https://github.com/dcjones/Loess.jl) —局部回归，非常平滑！\n*   [Naive Bayes](https://github.com/nutsiepully/NaiveBayes.jl) —朴素贝叶斯的简单Julia实现\n*   [Mixed Models](https://github.com/dmbates/MixedModels.jl) —（统计）混合效应模型的Julia包\n*   [Simple MCMC](https://github.com/fredo-dedup/SimpleMCMC.jl) —Julia实现的基本mcmc采样器\n*   [Distance](https://github.com/JuliaStats/Distance.jl)—Julia实现的距离评估模块\n*   [Decision Tree](https://github.com/bensadeghi/DecisionTree.jl) —决策树分类器及回归分析器\n*   [Neural](https://github.com/compressed/neural.jl) —Julia实现的神经网络\n*   [MCMC](https://github.com/doobwa/MCMC.jl) —Julia下的MCMC工具\n*   [GLM](https://github.com/JuliaStats/GLM.jl) —Julia写的广义线性模型包\n*   [Online Learning](https://github.com/lendle/OnlineLearning.jl)\n*   [GLMNet](https://github.com/simonster/GLMNet.jl) —GMLNet的Julia包装版，适合套索/弹性网模型。\n*   [Clustering](https://github.com/JuliaStats/Clustering.jl)—数据聚类的基本函数：k-means, dp-means等。\n*   [SVM](https://github.com/JuliaStats/SVM.jl)—Julia下的支持向量机。\n*   [Kernal Density](https://github.com/JuliaStats/KernelDensity.jl)—Julia下的核密度估计器\n*   [Dimensionality Reduction](https://github.com/JuliaStats/DimensionalityReduction.jl)—降维算法\n*   [NMF](https://github.com/JuliaStats/NMF.jl) —Julia下的非负矩阵分解包\n*   [ANN](https://github.com/EricChiang/ANN.jl)—Julia实现的神经网络\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#natural-language-processing-3)自然语言处理\n\n*   [Topic Models](https://github.com/slycoder/TopicModels.jl) —Julia下的主题建模\n*   [Text Analysis](https://github.com/johnmyleswhite/TextAnalysis.jl)—Julia下的文本分析包\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization-3)数据分析/数据可视化\n\n*   [Graph Layout](https://github.com/IainNZ/GraphLayout.jl) —纯Julia实现的图布局算法。\n*   [Data Frames Meta](https://github.com/JuliaStats/DataFramesMeta.jl) —DataFrames的元编程工具。\n*   [Julia Data](https://github.com/nfoti/JuliaData)—处理表格数据的Julia库\n*   [Data Read](https://github.com/WizardMac/DataRead.jl)—从Stata、SAS、SPSS读取文件\n*   [Hypothesis Tests](https://github.com/JuliaStats/HypothesisTests.jl)—Julia中的假设检验包\n*   [Gladfly](https://github.com/dcjones/Gadfly.jl) —Julia编写的灵巧的统计绘图系统。\n*   [Stats](https://github.com/johnmyleswhite/stats.jl)—Julia编写的统计测试函数包\n*   [RDataSets](https://github.com/johnmyleswhite/RDatasets.jl) —读取R语言中众多可用的数据集的Julia函数包。\n*   [DataFrames](https://github.com/JuliaStats/DataFrames.jl) —处理表格数据的Julia库。\n*   [Distributions](https://github.com/JuliaStats/Distributions.jl)—概率分布及相关函数的Julia包。\n*   [Data Arrays](https://github.com/JuliaStats/DataArrays.jl) —元素值可以为空的数据结构。\n*   [Time Series](https://github.com/JuliaStats/TimeSeries.jl)—Julia的时间序列数据工具包。\n*   [Sampling](https://github.com/JuliaStats/Sampling.jl)—Julia的基本采样算法包\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#misc-stuff--presentations)杂项/演示文稿\n\n*   [DSP](https://github.com/JuliaDSP/DSP) —数字信号处理\n*   [JuliaCon Presentations](https://github.com/JuliaCon/presentations)—Julia大会上的演示文稿\n*   [SignalProcessing](https://github.com/davidavdav/SignalProcessing)—Julia的信号处理工具\n*   [Images](https://github.com/timholy/Images.jl)—Julia的图片库\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#matlab)\n\n## Lua\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning#general-purpose-machine-learning-7)\n通用机器学习\n\n*   [Torch7](http://torch.ch/)\n\n    *   [cephes](http://jucor.github.io/torch-cephes) —Cephes数学函数库，包装成Torch可用形式。提供并包装了超过180个特殊的数学函数，由Stephen L. Moshier开发，是SciPy的核心，应用于很多场合。\n    *   [graph](https://github.com/torch/graph) —供Torch使用的图形包。\n    *   [randomkit](http://jucor.github.io/torch-randomkit/)—从Numpy提取的随机数生成包，包装成Torch可用形式。\n    *   [signal](http://soumith.ch/torch-signal/signal/) —Torch-7可用的信号处理工具包，可进行FFT, DCT, Hilbert, cepstrums, stft等变换。\n    *   [nn](https://github.com/torch/nn) —Torch可用的神经网络包。\n    *   [nngraph](https://github.com/torch/nngraph) —为nn库提供图形计算能力。\n    *   [nnx](https://github.com/clementfarabet/lua---nnx)—一个不稳定实验性的包，扩展Torch内置的nn库。\n    *   [optim](https://github.com/torch/optim)—Torch可用的优化算法库，包括 SGD, Adagrad, 共轭梯度算法, LBFGS, RProp等算法。\n    *   [unsup](https://github.com/koraykv/unsup)—Torch下的非监督学习包。提供的模块与nn(LinearPsd, ConvPsd, AutoEncoder, …)及独立算法 (k-means, PCA)等兼容。\n    *   [manifold](https://github.com/clementfarabet/manifold)—操作流形的包。\n    *   [svm](https://github.com/koraykv/torch-svm)—Torch的支持向量机库。\n    *   [lbfgs](https://github.com/clementfarabet/lbfgs)—将liblbfgs包装为FFI接口。\n    *   [vowpalwabbit](https://github.com/clementfarabet/vowpal_wabbit) —老版的vowpalwabbit对torch的接口。\n    *   [OpenGM](https://github.com/clementfarabet/lua---opengm)—OpenGM是C++编写的图形建模及推断库，该binding可以用Lua以简单的方式描述图形，然后用OpenGM优化。\n    *   [sphagetti](https://github.com/MichaelMathieu/lua---spaghetti) —MichaelMathieu为torch7编写的稀疏线性模块。\n    *   [LuaSHKit](https://github.com/ocallaco/LuaSHkit) —将局部敏感哈希库SHKit包装成lua可用形式。\n    *   [kernel smoothing](https://github.com/rlowrance/kernel-smoothers) —KNN、核权平均以及局部线性回归平滑器\n    *   [cutorch](https://github.com/torch/cutorch)—torch的CUDA后端实现\n    *   [cunn](https://github.com/torch/cunn) —torch的CUDA神经网络实现。\n    *   [imgraph](https://github.com/clementfarabet/lua---imgraph)—torch的图像/图形库，提供从图像创建图形、分割、建立树、又转化回图像的例程\n    *   [videograph](https://github.com/clementfarabet/videograph)—torch的视频/图形库，提供从视频创建图形、分割、建立树、又转化回视频的例程\n    *   [saliency](https://github.com/marcoscoffier/torch-saliency) —积分图像的代码和工具，用来从快速积分直方图中寻找兴趣点。\n    *   [stitch](https://github.com/marcoscoffier/lua---stitch) —使用hugin拼合图像并将其生成视频序列。\n    *   [sfm](https://github.com/marcoscoffier/lua---sfm)—运动场景束调整/结构包\n    *   [fex](https://github.com/koraykv/fex) —torch的特征提取包，提供SIFT和dSIFT模块。\n    *   [OverFeat](https://github.com/sermanet/OverFeat)—当前最高水准的通用密度特征提取器。\n\n*   [Numeric Lua](http://numlua.luaforge.net/)\n*   [Lunatic Python](http://labix.org/lunatic-python)\n*   [SciLua](http://www.scilua.org/)\n*   [Lua – Numerical Algorithms](https://bitbucket.org/lucashnegri/lna)\n*   [Lunum](http://zrake.webfactional.com/projects/lunum)\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning#demos-and-scripts)演示及脚本\n\n*   [Core torch7 demos repository](https://github.com/e-lab/torch7-demos).核心torch7演示程序库\n\n    *   线性回归、逻辑回归\n    *   人脸检测（训练和检测是独立的演示）\n    *   基于mst的断词器\n    *   train-a-digit-classifier\n    *   train-autoencoder\n    *   optical flow demo\n    *   train-on-housenumbers\n    *   train-on-cifar\n    *   tracking with deep nets\n    *   kinect demo\n    *   滤波可视化\n    *   saliency-networks\n\n*   [Training a Convnet for the Galaxy-Zoo Kaggle challenge(CUDA demo)](https://github.com/soumith/galaxyzoo)\n*   [Music Tagging](https://github.com/mbhenaff/MusicTagging)—torch7下的音乐标签脚本\n*   [torch-datasets](https://github.com/rosejn/torch-datasets) 读取几个流行的数据集的脚本，包括：\n\n    *   BSR 500\n    *   CIFAR-10\n    *   COIL\n    *   Street View House Numbers\n    *   MNIST\n    *   NORB\n\n*   [Atari2600](https://github.com/fidlej/aledataset) —在Arcade Learning Environment模拟器中用静态帧生成数据集的脚本。\n\n## Matlab\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#computer-vision)计算机视觉\n\n*   [Contourlets](http://www.ifp.illinois.edu/~minhdo/software/contourlet_toolbox.tar) —实现轮廓波变换及其使用函数的MATLAB源代码\n*   [Shearlets](http://www.shearlab.org/index_software.html)—剪切波变换的MATLAB源码\n*   [Curvelets](http://www.curvelet.org/software.html)—Curvelet变换的MATLAB源码（Curvelet变换是对小波变换向更高维的推广，用来在不同尺度角度表示图像。）\n*   [Bandlets](http://www.cmap.polytechnique.fr/~peyre/download/)—Bandlets变换的MATLAB源码\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#natural-language-processing-4)自然语言处理\n\n*   [NLP](https://amplab.cs.berkeley.edu/2012/05/05/an-nlp-library-for-matlab/) —一个Matlab的NLP库\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-6)通用机器学习\n\n*   [Training a deep autoencoder or a classifier on MNIST digits](http://www.cs.toronto.edu/~hinton/MatlabForSciencePaper.html)—在MNIST字符数据集上训练一个深度的autoencoder或分类器[深度学习]。\n*   [t-Distributed Stochastic Neighbor Embedding](http://homepage.tudelft.nl/19j49/t-SNE.html) —获奖的降维技术，特别适合于高维数据集的可视化\n*   [Spider](http://people.kyb.tuebingen.mpg.de/spider/)—Matlab机器学习的完整面向对象环境。\n*   [LibSVM](http://www.csie.ntu.edu.tw/~cjlin/libsvm/#matlab) —支持向量机程序库\n*   [LibLinear](http://www.csie.ntu.edu.tw/~cjlin/liblinear/#download) —大型线性分类程序库\n*   [Machine Learning Module](https://github.com/josephmisiti/machine-learning-module) —M. A .Girolami教授的机器学习课程，包括PDF，讲义及代码。\n*   [Caffe](http://caffe.berkeleyvision.org/)—考虑了代码清洁、可读性及速度的深度学习框架\n*   [Pattern Recognition Toolbox](https://github.com/newfolder/PRT) —Matlab中的模式识别工具包，完全面向对象\n\n#### <span style=\"font-weight: bold;\">数据分析/数据可视化</span>[](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization-4)\n\n*   [matlab_gbl](https://www.cs.purdue.edu/homes/dgleich/packages/matlab_bgl/)—处理图像的Matlab包\n*   [gamic](http://www.mathworks.com/matlabcentral/fileexchange/24134-gaimc---graph-algorithms-in-matlab-code)—图像算法纯Matlab高效实现，对MatlabBGL的mex函数是个补充。\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#python)\n\n## .NET\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning#computer-vision-3)计算机视觉\n\n*   [OpenCVDotNet](https://code.google.com/p/opencvdotnet/) —包装器，使.NET程序能使用OpenCV代码\n*   [Emgu CV](http://www.emgu.com/wiki/index.php/Main_Page)—跨平台的包装器，能在Windows, Linus, Mac OS X, iOS, 和Android上编译。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning#natural-language-processing-6)自然语言处理\n\n*   [Stanford.NLP for .NET](https://github.com/sergey-tihon/Stanford.NLP.NET/) —斯坦福大学NLP包在.NET上的完全移植，还可作为NuGet包进行预编译。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning#general-purpose-machine-learning-9)通用机器学习\n\n*   [Accord.MachineLearning](http://www.nuget.org/packages/Accord.MachineLearning/) —支持向量机、决策树、朴素贝叶斯模型、K-means、高斯混合模型和机器学习应用的通用算法，例如：随机抽样一致性算法、交叉验证、网格搜索。这个包是Accord.NET框架的一部分。\n*   [Vulpes](https://github.com/fsprojects/Vulpes)—F#语言实现的Deep belief和深度学习包，它在Alea.cuBase下利用CUDA GPU来执行。\n*   [Encog](http://www.nuget.org/packages/encog-dotnet-core/) —先进的神经网络和机器学习框架，包括用来创建多种网络的类，也支持神经网络需要的数据规则化及处理的类。它的训练采用多线程弹性传播。它也能使用GPU加快处理时间。提供了图形化界面来帮助建模和训练神经网络。\n*   [Neural Network Designer](http://bragisoft.com/) —这是一个数据库管理系统和神经网络设计器。设计器用WPF开发，也是一个UI，你可以设计你的神经网络、查询网络、创建并配置聊天机器人，它能问问题，并从你的反馈中学习。这些机器人甚至可以从网络搜集信息用来输出，或是用来学习。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning#data-analysis--data-visualization-6)数据分析/数据可视化\n\n*   [numl](http://www.nuget.org/packages/numl/) —numl这个机器学习库，目标就是简化预测和聚类的标准建模技术。\n*   [Math.NET Numerics](http://www.nuget.org/packages/MathNet.Numerics/)—Math.NET项目的数值计算基础，着眼提供科学、工程以及日常数值计算的方法和算法。支持 Windows, Linux 和 Mac上的 .Net 4.0, .Net 3.5 和 Mono ，Silverlight 5, WindowsPhone/SL 8, WindowsPhone 8.1 以及装有 PCL Portable Profiles 47 及 344的Windows 8， 装有 Xamarin的Android/iOS 。\n*   [Sho](http://research.microsoft.com/en-us/projects/sho/) —Sho是数据分析和科学计算的交互式环境，可以让你将脚本（IronPython语言）和编译的代码（.NET）无缝连接，以快速灵活的建立原型。这个环境包括强大高效的库，如线性代数、数据可视化，可供任何.NET语言使用，还为快速开发提供了功能丰富的交互式shell。\n\n## Python\n\n#### 计算机视觉\n\n*   [SimpleCV](http://simplecv.org/)—开源的计算机视觉框架，可以访问如OpenCV等高性能计算机视觉库。使用Python编写，可以在Mac、Windows以及Ubuntu上运行。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#natural-language-processing-5)自然语言处理\n\n*   [NLTK](http://www.nltk.org/) —一个领先的平台，用来编写处理人类语言数据的Python程序\n*   [Pattern](http://www.clips.ua.ac.be/pattern)—Python可用的web挖掘模块，包括自然语言处理、机器学习等工具。\n*   [TextBlob](http://textblob.readthedocs.org/)—为普通自然语言处理任务提供一致的API，以NLTK和Pattern为基础，并和两者都能很好兼容。\n*   [jieba](https://github.com/fxsjy/jieba#jieba-1)—中文断词工具。\n*   [SnowNLP](https://github.com/isnowfy/snownlp) —中文文本处理库。\n*   [loso](https://github.com/victorlin/loso)—另一个中文断词库。\n*   [genius](https://github.com/duanhongyi/genius) —基于条件随机域的中文断词库。\n*   [nut](https://github.com/pprett/nut) —自然语言理解工具包。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-7)通用机器学习\n\n*   [Bayesian Methods for Hackers](https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers) —Python语言概率规划的电子书\n*   [MLlib in Apache Spark](http://spark.apache.org/docs/latest/mllib-guide.html)—Spark下的分布式机器学习库。\n*   [scikit-learn](http://scikit-learn.org/)—基于SciPy的机器学习模块\n*   [graphlab-create](http://graphlab.com/products/create/docs/) —包含多种机器学习模块的库（回归，聚类，推荐系统，图分析等），基于可以磁盘存储的DataFrame。\n*   [BigML](https://bigml.com/)—连接外部服务器的库。\n*   [pattern](https://github.com/clips/pattern)—Python的web挖掘模块\n*   [NuPIC](https://github.com/numenta/nupic)—Numenta公司的智能计算平台。\n*   [Pylearn2](https://github.com/lisa-lab/pylearn2)—基于Theano的机器学习库。\n*   [hebel](https://github.com/hannes-brt/hebel) —Python编写的使用GPU加速的深度学习库。\n*   [gensim](https://github.com/piskvorky/gensim)—主题建模工具。\n*   [PyBrain](https://github.com/pybrain/pybrain)—另一个机器学习库。\n*   [Crab](https://github.com/muricoca/crab) —可扩展的、快速推荐引擎。\n*   [python-recsys](https://github.com/ocelma/python-recsys) —Python实现的推荐系统。\n*   [thinking bayes](https://github.com/AllenDowney/ThinkBayes)—关于贝叶斯分析的书籍\n*   [Restricted Boltzmann Machines](https://github.com/echen/restricted-boltzmann-machines) —Python实现的受限波尔兹曼机。[深度学习]。\n*   [Bolt](https://github.com/pprett/bolt) —在线学习工具箱。\n*   [CoverTree](https://github.com/patvarilly/CoverTree) —cover tree的Python实现，scipy.spatial.kdtree便捷的替代。\n*   [nilearn](https://github.com/nilearn/nilearn)—Python实现的神经影像学机器学习库。\n*   [Shogun](https://github.com/shogun-toolbox/shogun)—机器学习工具箱。\n*   [Pyevolve](https://github.com/perone/Pyevolve) —遗传算法框架。\n*   [Caffe](http://caffe.berkeleyvision.org/) —考虑了代码清洁、可读性及速度的深度学习框架\n*   [breze](https://github.com/breze-no-salt/breze)—深度及递归神经网络的程序库，基于Theano。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization-5)数据分析/数据可视化\n\n*   [SciPy](http://www.scipy.org/) —基于Python的数学、科学、工程开源软件生态系统。\n*   [NumPy](http://www.numpy.org/)—Python科学计算基础包。\n*   [Numba](http://numba.pydata.org/) —Python的低级虚拟机JIT编译器，Cython and NumPy的开发者编写，供科学计算使用\n*   [NetworkX](https://networkx.github.io/) —为复杂网络使用的高效软件。\n*   [Pandas](http://pandas.pydata.org/)—这个库提供了高性能、易用的数据结构及数据分析工具。\n*   [Open Mining](https://github.com/avelino/mining)—Python中的商业智能工具（Pandas web接口）。\n*   [PyMC](https://github.com/pymc-devs/pymc) —MCMC采样工具包。\n*   [zipline](https://github.com/quantopian/zipline)—Python的算法交易库。\n*   [PyDy](https://pydy.org/)—全名Python Dynamics，协助基于NumPy, SciPy, IPython以及 matplotlib的动态建模工作流。\n*   [SymPy](https://github.com/sympy/sympy) —符号数学Python库。\n*   [statsmodels](https://github.com/statsmodels/statsmodels)—Python的统计建模及计量经济学库。\n*   [astropy](http://www.astropy.org/) —Python天文学程序库，社区协作编写\n*   [matplotlib](http://matplotlib.org/) —Python的2D绘图库。\n*   [bokeh](https://github.com/ContinuumIO/bokeh)—Python的交互式Web绘图库。\n*   [plotly](https://plot.ly/python) —Python and matplotlib的协作web绘图库。\n*   [vincent](https://github.com/wrobstory/vincent)—将Python数据结构转换为Vega可视化语法。\n*   [d3py](https://github.com/mikedewar/d3py)—Python的绘图库，基于D3.js。\n*   [ggplot](https://github.com/yhat/ggplot) —和R语言里的ggplot2提供同样的API。\n*   [Kartograph.py](https://github.com/kartograph/kartograph.py)—Python中渲染SVG图的库，效果漂亮。\n*   [pygal](http://pygal.org/)—Python下的SVG图表生成器。\n*   [pycascading](https://github.com/twitter/pycascading)\n\n#### 杂项脚本/iPython笔记/代码库[](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#misc-scripts--ipython-notebooks--codebases)\n\n*   [pattern_classification](https://github.com/rasbt/pattern_classification)\n*   [thinking stats 2](https://github.com/Wavelets/ThinkStats2)\n*   [hyperopt](https://github.com/hyperopt/hyperopt-sklearn)\n*   [numpic](https://github.com/numenta/nupic)\n*   [2012-paper-diginorm](https://github.com/ged-lab/2012-paper-diginorm)\n*   [ipython-notebooks](https://github.com/ogrisel/notebooks)\n*   [decision-weights](https://github.com/CamDavidsonPilon/decision-weights)\n*   [Sarah Palin LDA](https://github.com/Wavelets/sarah-palin-lda) —Sarah Palin关于主题建模的电邮。\n*   [Diffusion Segmentation](https://github.com/Wavelets/diffusion-segmentation) —基于扩散方法的图像分割算法集合。\n*   [Scipy Tutorials](https://github.com/Wavelets/scipy-tutorials) —SciPy教程，已过时，请查看scipy-lecture-notes\n*   [Crab](https://github.com/marcelcaraciolo/crab)—Python的推荐引擎库。\n*   [BayesPy](https://github.com/maxsklar/BayesPy)—Python中的贝叶斯推断工具。\n*   [scikit-learn tutorials](https://github.com/GaelVaroquaux/scikit-learn-tutorial)—scikit-learn学习笔记系列\n*   [sentiment-analyzer](https://github.com/madhusudancs/sentiment-analyzer) —推特情绪分析器\n*   [group-lasso](https://github.com/fabianp/group_lasso)—坐标下降算法实验，应用于（稀疏）群套索模型。\n*   [mne-python-notebooks](https://github.com/mne-tools/mne-python-notebooks)—使用 mne-python进行EEG/MEG数据处理的IPython笔记\n*   [pandas cookbook](https://github.com/jvns/pandas-cookbook)—使用Python pandas库的方法书。\n*   [climin](https://github.com/BRML/climin)—机器学习的优化程序库，用Python实现了梯度下降、LBFGS、rmsprop、adadelta 等算法。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#kaggle-competition-source-code)Kaggle竞赛源代码\n\n*   [wiki challange](https://github.com/hammer/wikichallenge) —Kaggle上一个维基预测挑战赛 Dell Zhang解法的实现。\n*   [kaggle insults](https://github.com/amueller/kaggle_insults)—Kaggle上”从社交媒体评论中检测辱骂“竞赛提交的代码\n*   [kaggle_acquire-valued-shoppers-challenge](https://github.com/MLWave/kaggle_acquire-valued-shoppers-challenge)—Kaggle预测回头客挑战赛的代码\n*   [kaggle-cifar](https://github.com/zygmuntz/kaggle-cifar) —Kaggle上CIFAR-10 竞赛的代码，使用cuda-convnet\n*   [kaggle-blackbox](https://github.com/zygmuntz/kaggle-blackbox) —Kaggle上blackbox赛代码，关于深度学习。\n*   [kaggle-accelerometer](https://github.com/zygmuntz/kaggle-accelerometer) —Kaggle上加速度计数据识别用户竞赛的代码\n*   [kaggle-advertised-salaries](https://github.com/zygmuntz/kaggle-advertised-salaries) —Kaggle上用广告预测工资竞赛的代码\n*   [kaggle amazon](https://github.com/zygmuntz/kaggle-amazon) —Kaggle上给定员工角色预测其访问需求竞赛的代码\n*   [kaggle-bestbuy_big](https://github.com/zygmuntz/kaggle-bestbuy_big)—Kaggle上根据bestbuy用户查询预测点击商品竞赛的代码（大数据版）\n*   [kaggle-bestbuy_small](https://github.com/zygmuntz/kaggle-bestbuy_small)—Kaggle上根据bestbuy用户查询预测点击商品竞赛的代码（小数据版）\n*   [Kaggle Dogs vs. Cats](https://github.com/kastnerkyle/kaggle-dogs-vs-cats) —Kaggle上从图片中识别猫和狗竞赛的代码\n*   [Kaggle Galaxy Challenge](https://github.com/benanne/kaggle-galaxies) —Kaggle上遥远星系形态分类竞赛的优胜代码\n*   [Kaggle Gender](https://github.com/zygmuntz/kaggle-gender) —Kaggle竞赛：从笔迹区分性别\n*   [Kaggle Merck](https://github.com/zygmuntz/kaggle-merck)—Kaggle上预测药物分子活性竞赛的代码（默克制药赞助）\n*   [Kaggle Stackoverflow](https://github.com/zygmuntz/kaggle-stackoverflow)—Kaggle上 预测Stack Overflow网站问题是否会被关闭竞赛的代码\n*   [wine-quality](https://github.com/zygmuntz/wine-quality) —预测红酒质量。\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#ruby)Ruby\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#natural-language-processing-6)自然语言处理\n\n*   [Treat](https://github.com/louismullie/treat)—文本检索与注释工具包，Ruby上我见过的最全面的工具包。\n*   [Ruby Linguistics](http://www.deveiate.org/projects/Linguistics/)—这个框架可以用任何语言为Ruby对象构建语言学工具。包括一个语言无关的通用前端，一个将语言代码映射到语言名的模块，和一个含有很有英文语言工具的模块。\n*   [Stemmer](https://github.com/aurelian/ruby-stemmer)—使得Ruby可用 libstemmer_c中的接口。\n*   [Ruby Wordnet](http://www.deveiate.org/projects/Ruby-WordNet/) —WordNet的Ruby接口库。\n*   [Raspel](http://sourceforge.net/projects/raspell/) —aspell绑定到Ruby的接口\n*   [UEA Stemmer](https://github.com/ealdent/uea-stemmer)—UEALite Stemmer的Ruby移植版，供搜索和检索用的保守的词干分析器\n*   [Twitter-text-rb](https://github.com/twitter/twitter-text-rb)—该程序库可以将推特中的用户名、列表和话题标签自动连接并提取出来。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-8)通用机器学习\n\n*   [Ruby Machine Learning](https://github.com/tsycho/ruby-machine-learning) —Ruby实现的一些机器学习算法。\n*   [Machine Learning Ruby](https://github.com/mizoR/machine-learning-ruby)\n*   [jRuby Mahout](https://github.com/vasinov/jruby_mahout) —精华！在JRuby世界中释放了Apache Mahout的威力。\n*   [CardMagic-Classifier](https://github.com/cardmagic/classifier)—可用贝叶斯及其他分类法的通用分类器模块。\n*   [Neural Networks and Deep Learning](https://github.com/mnielsen/neural-networks-and-deep-learning)—《神经网络和深度学习》一书的示例代码。\n\n#### 数据分析/数据可视化[](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization-6)\n\n*   [rsruby](https://github.com/alexgutteridge/rsruby) - Ruby – R bridge\n*   [data-visualization-ruby](https://github.com/chrislo/data_visualisation_ruby)—关于数据可视化的Ruby Manor演示的源代码和支持内容\n*   [ruby-plot](https://www.ruby-toolbox.com/projects/ruby-plot) —将gnuplot包装为Ruby形式，特别适合将ROC曲线转化为svg文件。\n*   [plot-rb](https://github.com/zuhao/plotrb)—基于Vega和D3的ruby绘图库\n*   [scruffy](http://www.rubyinside.com/scruffy-a-beautiful-graphing-toolkit-for-ruby-194.html) —Ruby下出色的图形工具包\n*   [SciRuby](http://sciruby.com/)\n*   [Glean](https://github.com/glean/glean)—数据管理工具\n*   [Bioruby](https://github.com/bioruby/bioruby)\n*   [Arel](https://github.com/nkallen/arel)\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#misc)Misc\n杂项\n\n*   [Big Data For Chimps](https://github.com/infochimps-labs/big_data_for_chimps)—大数据处理严肃而有趣的指南书\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#r)R\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-9)通用机器学习\n\n*   [Clever Algorithms For Machine Learning](https://github.com/jbrownlee/CleverAlgorithmsMachineLearning)\n*   [Machine Learning For Hackers\n](https://github.com/johnmyleswhite/ML_for_Hackers)\n*   [Machine Learning Task View on CRAN](http://cran.r-project.org/web/views/MachineLearning.html)—R语言机器学习包列表，按算法类型分组。\n*   [caret](http://caret.r-forge.r-project.org/)—R语言150个机器学习算法的统一接口\n*   [SuperLearner](https://github.com/ecpolley/SuperLearner) and [subsemble](http://cran.r-project.org/web/packages/subsemble/index.html)—该包集合了多种机器学习算法\n*   [Introduction to Statistical Learning](http://www-bcf.usc.edu/~gareth/ISL/)\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization-7)\n\n#### 数据分析/数据可视化\n\n*   [Learning Statistics Using R\n](http://health.adelaide.edu.au/psychology/ccs/teaching/lsr/)\n*   [ggplot2](http://ggplot2.org/)—基于图形语法的数据可视化包。\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#scala)Scala\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#natural-language-processing-7)自然语言处理\n\n*   [ScalaNLP](http://www.scalanlp.org/)—机器学习和数值计算库的套装\n*   [Breeze](https://github.com/scalanlp/breeze) —Scala用的数值处理库\n*   [Chalk](https://github.com/scalanlp/chalk)—自然语言处理库。\n*   [FACTORIE](https://github.com/factorie/factorie)—可部署的概率建模工具包，用Scala实现的软件库。为用户提供简洁的语言来创建关系因素图，评估参数并进行推断。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization-8)数据分析/数据可视化\n\n*   [MLlib in Apache Spark](http://spark.apache.org/docs/latest/mllib-guide.html)—Spark下的分布式机器学习库\n*   [Scalding](https://github.com/twitter/scalding) —CAscading的Scala接口\n*   [Summing Bird](https://github.com/twitter/summingbird)—用Scalding 和 Storm进行Streaming MapReduce\n*   [Algebird](https://github.com/twitter/algebird) —Scala的抽象代数工具\n*   [xerial](https://github.com/xerial/xerial) —Scala的数据管理工具\n*   [simmer](https://github.com/avibryant/simmer) —化简你的数据，进行代数聚合的unix过滤器\n*   [PredictionIO](https://github.com/PredictionIO/PredictionIO) —供软件开发者和数据工程师用的机器学习服务器。\n*   [BIDMat](https://github.com/BIDData/BIDMat)—支持大规模探索性数据分析的CPU和GPU加速矩阵库。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-10)通用机器学习\n\n*   [Conjecture](https://github.com/etsy/Conjecture)—Scalding下可扩展的机器学习框架\n*   [brushfire](https://github.com/avibryant/brushfire)—scalding下的决策树工具。\n*   [ganitha](https://github.com/tresata/ganitha) —基于scalding的机器学习程序库\n*   [adam](https://github.com/bigdatagenomics/adam)—使用Apache Avro, Apache Spark 和 Parquet的基因组处理引擎，有专用的文件格式，Apache 2软件许可。\n*   [bioscala](https://github.com/bioscala/bioscala) —Scala语言可用的生物信息学程序库\n*   [BIDMach](https://github.com/BIDData/BIDMach)—机器学习CPU和GPU加速库。","source":"_posts/机器学习常用资源.md","raw":"title: \"机器学习常用资源\"\ndate: 2014-07-23 09:38:55\ntags:\nid: 336\ncategories:\n  - 编程技术\n---\n\n常用语言的一些关于机器学习的代码库.收藏以备后边查阅!!!!!\n\n## C++\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#compute-vision)计算机视觉\n\n*   [CCV](https://github.com/liuliu/ccv) —基于C语言/提供缓存/核心的机器视觉库，新颖的机器视觉库\n*   [OpenCV](http://opencv.org/)—它提供C++, C, Python, Java 以及 MATLAB接口，并支持Windows, Linux, Android and Mac OS操作系统。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning)通用机器学习\n\n*   [MLPack](http://www.mlpack.org/)\n*   [DLib](http://dlib.net/ml.html)\n*   [ecogg](https://code.google.com/p/encog-cpp/)\n*   [shark](http://image.diku.dk/shark/sphinx_pages/build/html/index.html)\n<!--more-->\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#closure)Closure\n\n#### 通用机器学习\n\n*   [Closure Toolbox](http://www.clojure-toolbox.com/)—Clojure语言库与工具的分类目录\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#go)Go\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#natural-language-processing)自然语言处理\n\n*   [go-porterstemmer](https://github.com/reiver/go-porterstemmer)—一个Porter词干提取算法的原生Go语言净室实现\n*   [paicehusk](https://github.com/Rookii/paicehusk)—Paice/Husk词干提取算法的Go语言实现\n*   [snowball](https://bitbucket.org/tebeka/snowball)—Go语言版的Snowball词干提取器\n\n#### <span style=\"font-weight: bold;\">通用机器学习</span>[](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-2)\n\n*   [Go Learn](https://github.com/sjwhitworth/golearn)— Go语言机器学习库\n*   [go-pr](https://github.com/daviddengcn/go-pr) —Go语言机器学习包.\n*   [bayesian](https://github.com/jbrukh/bayesian)—Go语言朴素贝叶斯分类库。\n*   [go-galib](https://github.com/thoj/go-galib)—Go语言遗传算法库。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization)\n数据分析/数据可视化\n\n*   [go-graph](https://github.com/StepLg/go-graph)—Go语言图形库。\n*   [SVGo](http://www.svgopen.org/2011/papers/34-SVGo_a_Go_Library_for_SVG_generation/)—Go语言的SVG生成库。\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#java)Java\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#natural-language-processing-1)自然语言处理\n\n*   [CoreNLP](http://nlp.stanford.edu/software/corenlp.shtml)—斯坦福大学的CoreNLP提供一系列的自然语言处理工具，输入原始英语文本，可以给出单词的基本形式（下面Stanford开头的几个工具都包含其中）。\n*   [Stanford Parser](http://nlp.stanford.edu/software/lex-parser.shtml)—一个自然语言解析器。\n*   [Stanford POS Tagger](http://nlp.stanford.edu/software/tagger.shtml) —一个词性分类器。\n*   [Stanford Name Entity Recognizer](http://nlp.stanford.edu/software/CRF-NER.shtml)—Java实现的名称识别器\n*   [Stanford Word Segmenter](http://nlp.stanford.edu/software/segmenter.shtml)—分词器，很多NLP工作中都要用到的标准预处理步骤。\n*   [Tregex, Tsurgeon and Semgrex](http://nlp.stanford.edu/software/tregex.shtml) —用来在树状数据结构中进行模式匹配，基于树关系以及节点匹配的正则表达式（名字是“tree regular expressions”的缩写）。\n*   [Stanford Phrasal:](http://nlp.stanford.edu/software/phrasal/)最新的基于统计短语的机器翻译系统，[ ](http://nlp.stanford.edu/software/phrasal/)java编写\n*   [Stanford Tokens Regex](http://nlp.stanford.edu/software/tokensregex.shtml)—用以定义文本模式的框架。\n*   [Stanford Temporal Tagger](http://nlp.stanford.edu/software/sutime.shtml)—SUTime是一个识别并标准化时间表达式的库。\n*   [Stanford SPIED](http://nlp.stanford.edu/software/patternslearning.shtml)—在种子集上使用模式，以迭代方式从无标签文本中学习字符实体\n*   [Stanford Topic Modeling Toolbox](http://nlp.stanford.edu/software/tmt/tmt-0.4/) —为社会科学家及其他希望分析数据集的人员提供的主题建模工具。\n*   [Twitter Text Java](https://github.com/twitter/twitter-text-java)—Java实现的推特文本处理库\n*   [MALLET](http://mallet.cs.umass.edu/) -—基于Java的统计自然语言处理、文档分类、聚类、主题建模、信息提取以及其他机器学习文本应用包。\n*   [OpenNLP](https://opennlp.apache.org/)—处理自然语言文本的机器学习工具包。\n*   [LingPipe](http://alias-i.com/lingpipe/index.html) —使用计算机语言学处理文本的工具包。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-3)\n通用机器学习\n\n*   [MLlib in Apache Spark](http://spark.apache.org/docs/latest/mllib-guide.html)—Spark中的分布式机器学习程序库\n*   [Mahout](https://github.com/apache/mahout) —分布式的机器学习库\n*   [Stanford Classifier](http://nlp.stanford.edu/software/classifier.shtml) —斯坦福大学的分类器\n*   [Weka](http://www.cs.waikato.ac.nz/ml/weka/)—Weka是数据挖掘方面的机器学习算法集。\n*   [ORYX](https://github.com/cloudera/oryx)—提供一个简单的大规模实时机器学习/预测分析基础架构。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization-1)数据分析/数据可视化\n\n*   [Hadoop](https://github.com/apache/hadoop-mapreduce)—大数据分析平台\n*   [Spark](https://github.com/apache/spark)—快速通用的大规模数据处理引擎。\n*   [Impala](https://github.com/cloudera/impala) —为Hadoop实现实时查询\n\n## \n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#javascript)Javascript\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#natural-language-processing-2)自然语言处理\n\n*   [Twitter-text-js](https://github.com/twitter/twitter-text-js) —JavaScript实现的推特文本处理库\n*   [NLP.js](https://github.com/nicktesla/nlpjs) —javascript及coffeescript编写的NLP工具\n*   [natural](https://github.com/NaturalNode/natural)—Node下的通用NLP工具\n*   [Knwl.js](https://github.com/loadfive/Knwl.js)—JS编写的自然语言处理器\n\n#### \n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization-2)数据分析/数据可视化\n\n*   [D3.js](http://d3js.org/)\n*   [High Charts](http://www.highcharts.com/)\n*   [NVD3.js](http://nvd3.org/)\n*   [dc.js](http://dc-js.github.io/dc.js/)\n*   [chartjs](http://www.chartjs.org/)\n*   [dimple](http://dimplejs.org/)\n*   [amCharts](http://www.amcharts.com/)\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-4)\n通用机器学习\n\n*   [Convnet.js](http://cs.stanford.edu/people/karpathy/convnetjs/)—训练深度学习模型的JavaScript库。\n*   [Clustering.js](https://github.com/tixz/clustering.js)—用JavaScript实现的聚类算法，供Node.js及浏览器使用。\n*   [Decision Trees](https://github.com/serendipious/nodejs-decision-tree-id3)—Node.js实现的决策树，使用ID3算法。\n*   [Node-fann](https://github.com/rlidwka/node-fann) —Node.js下的快速人工神经网络库。\n*   [Kmeans.js](https://github.com/tixz/kmeans.js)—k-means算法的简单Javascript实现，供Node.js及浏览器使用。\n*   [LDA.js](https://github.com/primaryobjects/lda) —供Node.js用的LDA主题建模工具。\n*   [Learning.js](https://github.com/yandongliu/learningjs)—逻辑回归/c4.5决策树的JavaScript实现\n*   [Machine Learning](http://joonku.com/project/machine_learning)—Node.js的机器学习库。\n*   [Node-SVM](https://github.com/nicolaspanel/node-svm)—Node.js的支持向量机\n*   [Brain](https://github.com/harthur/brain) —JavaScript实现的神经网络\n*   [Bayesian-Bandit](https://github.com/omphalos/bayesian-bandit.js) —贝叶斯强盗算法的实现，供Node.js及浏览器使用。\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#julia)Julia\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-5)通用机器学习\n\n*   [PGM](https://github.com/JuliaStats/PGM.jl)—Julia实现的概率图模型框架。\n*   [DA](https://github.com/trthatcher/DA.jl)—Julia实现的正则化判别分析包。\n*   [Regression](https://github.com/lindahua/Regression.jl)—回归分析算法包（如线性回归和逻辑回归）。\n*   [Local Regression](https://github.com/dcjones/Loess.jl) —局部回归，非常平滑！\n*   [Naive Bayes](https://github.com/nutsiepully/NaiveBayes.jl) —朴素贝叶斯的简单Julia实现\n*   [Mixed Models](https://github.com/dmbates/MixedModels.jl) —（统计）混合效应模型的Julia包\n*   [Simple MCMC](https://github.com/fredo-dedup/SimpleMCMC.jl) —Julia实现的基本mcmc采样器\n*   [Distance](https://github.com/JuliaStats/Distance.jl)—Julia实现的距离评估模块\n*   [Decision Tree](https://github.com/bensadeghi/DecisionTree.jl) —决策树分类器及回归分析器\n*   [Neural](https://github.com/compressed/neural.jl) —Julia实现的神经网络\n*   [MCMC](https://github.com/doobwa/MCMC.jl) —Julia下的MCMC工具\n*   [GLM](https://github.com/JuliaStats/GLM.jl) —Julia写的广义线性模型包\n*   [Online Learning](https://github.com/lendle/OnlineLearning.jl)\n*   [GLMNet](https://github.com/simonster/GLMNet.jl) —GMLNet的Julia包装版，适合套索/弹性网模型。\n*   [Clustering](https://github.com/JuliaStats/Clustering.jl)—数据聚类的基本函数：k-means, dp-means等。\n*   [SVM](https://github.com/JuliaStats/SVM.jl)—Julia下的支持向量机。\n*   [Kernal Density](https://github.com/JuliaStats/KernelDensity.jl)—Julia下的核密度估计器\n*   [Dimensionality Reduction](https://github.com/JuliaStats/DimensionalityReduction.jl)—降维算法\n*   [NMF](https://github.com/JuliaStats/NMF.jl) —Julia下的非负矩阵分解包\n*   [ANN](https://github.com/EricChiang/ANN.jl)—Julia实现的神经网络\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#natural-language-processing-3)自然语言处理\n\n*   [Topic Models](https://github.com/slycoder/TopicModels.jl) —Julia下的主题建模\n*   [Text Analysis](https://github.com/johnmyleswhite/TextAnalysis.jl)—Julia下的文本分析包\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization-3)数据分析/数据可视化\n\n*   [Graph Layout](https://github.com/IainNZ/GraphLayout.jl) —纯Julia实现的图布局算法。\n*   [Data Frames Meta](https://github.com/JuliaStats/DataFramesMeta.jl) —DataFrames的元编程工具。\n*   [Julia Data](https://github.com/nfoti/JuliaData)—处理表格数据的Julia库\n*   [Data Read](https://github.com/WizardMac/DataRead.jl)—从Stata、SAS、SPSS读取文件\n*   [Hypothesis Tests](https://github.com/JuliaStats/HypothesisTests.jl)—Julia中的假设检验包\n*   [Gladfly](https://github.com/dcjones/Gadfly.jl) —Julia编写的灵巧的统计绘图系统。\n*   [Stats](https://github.com/johnmyleswhite/stats.jl)—Julia编写的统计测试函数包\n*   [RDataSets](https://github.com/johnmyleswhite/RDatasets.jl) —读取R语言中众多可用的数据集的Julia函数包。\n*   [DataFrames](https://github.com/JuliaStats/DataFrames.jl) —处理表格数据的Julia库。\n*   [Distributions](https://github.com/JuliaStats/Distributions.jl)—概率分布及相关函数的Julia包。\n*   [Data Arrays](https://github.com/JuliaStats/DataArrays.jl) —元素值可以为空的数据结构。\n*   [Time Series](https://github.com/JuliaStats/TimeSeries.jl)—Julia的时间序列数据工具包。\n*   [Sampling](https://github.com/JuliaStats/Sampling.jl)—Julia的基本采样算法包\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#misc-stuff--presentations)杂项/演示文稿\n\n*   [DSP](https://github.com/JuliaDSP/DSP) —数字信号处理\n*   [JuliaCon Presentations](https://github.com/JuliaCon/presentations)—Julia大会上的演示文稿\n*   [SignalProcessing](https://github.com/davidavdav/SignalProcessing)—Julia的信号处理工具\n*   [Images](https://github.com/timholy/Images.jl)—Julia的图片库\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#matlab)\n\n## Lua\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning#general-purpose-machine-learning-7)\n通用机器学习\n\n*   [Torch7](http://torch.ch/)\n\n    *   [cephes](http://jucor.github.io/torch-cephes) —Cephes数学函数库，包装成Torch可用形式。提供并包装了超过180个特殊的数学函数，由Stephen L. Moshier开发，是SciPy的核心，应用于很多场合。\n    *   [graph](https://github.com/torch/graph) —供Torch使用的图形包。\n    *   [randomkit](http://jucor.github.io/torch-randomkit/)—从Numpy提取的随机数生成包，包装成Torch可用形式。\n    *   [signal](http://soumith.ch/torch-signal/signal/) —Torch-7可用的信号处理工具包，可进行FFT, DCT, Hilbert, cepstrums, stft等变换。\n    *   [nn](https://github.com/torch/nn) —Torch可用的神经网络包。\n    *   [nngraph](https://github.com/torch/nngraph) —为nn库提供图形计算能力。\n    *   [nnx](https://github.com/clementfarabet/lua---nnx)—一个不稳定实验性的包，扩展Torch内置的nn库。\n    *   [optim](https://github.com/torch/optim)—Torch可用的优化算法库，包括 SGD, Adagrad, 共轭梯度算法, LBFGS, RProp等算法。\n    *   [unsup](https://github.com/koraykv/unsup)—Torch下的非监督学习包。提供的模块与nn(LinearPsd, ConvPsd, AutoEncoder, …)及独立算法 (k-means, PCA)等兼容。\n    *   [manifold](https://github.com/clementfarabet/manifold)—操作流形的包。\n    *   [svm](https://github.com/koraykv/torch-svm)—Torch的支持向量机库。\n    *   [lbfgs](https://github.com/clementfarabet/lbfgs)—将liblbfgs包装为FFI接口。\n    *   [vowpalwabbit](https://github.com/clementfarabet/vowpal_wabbit) —老版的vowpalwabbit对torch的接口。\n    *   [OpenGM](https://github.com/clementfarabet/lua---opengm)—OpenGM是C++编写的图形建模及推断库，该binding可以用Lua以简单的方式描述图形，然后用OpenGM优化。\n    *   [sphagetti](https://github.com/MichaelMathieu/lua---spaghetti) —MichaelMathieu为torch7编写的稀疏线性模块。\n    *   [LuaSHKit](https://github.com/ocallaco/LuaSHkit) —将局部敏感哈希库SHKit包装成lua可用形式。\n    *   [kernel smoothing](https://github.com/rlowrance/kernel-smoothers) —KNN、核权平均以及局部线性回归平滑器\n    *   [cutorch](https://github.com/torch/cutorch)—torch的CUDA后端实现\n    *   [cunn](https://github.com/torch/cunn) —torch的CUDA神经网络实现。\n    *   [imgraph](https://github.com/clementfarabet/lua---imgraph)—torch的图像/图形库，提供从图像创建图形、分割、建立树、又转化回图像的例程\n    *   [videograph](https://github.com/clementfarabet/videograph)—torch的视频/图形库，提供从视频创建图形、分割、建立树、又转化回视频的例程\n    *   [saliency](https://github.com/marcoscoffier/torch-saliency) —积分图像的代码和工具，用来从快速积分直方图中寻找兴趣点。\n    *   [stitch](https://github.com/marcoscoffier/lua---stitch) —使用hugin拼合图像并将其生成视频序列。\n    *   [sfm](https://github.com/marcoscoffier/lua---sfm)—运动场景束调整/结构包\n    *   [fex](https://github.com/koraykv/fex) —torch的特征提取包，提供SIFT和dSIFT模块。\n    *   [OverFeat](https://github.com/sermanet/OverFeat)—当前最高水准的通用密度特征提取器。\n\n*   [Numeric Lua](http://numlua.luaforge.net/)\n*   [Lunatic Python](http://labix.org/lunatic-python)\n*   [SciLua](http://www.scilua.org/)\n*   [Lua – Numerical Algorithms](https://bitbucket.org/lucashnegri/lna)\n*   [Lunum](http://zrake.webfactional.com/projects/lunum)\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning#demos-and-scripts)演示及脚本\n\n*   [Core torch7 demos repository](https://github.com/e-lab/torch7-demos).核心torch7演示程序库\n\n    *   线性回归、逻辑回归\n    *   人脸检测（训练和检测是独立的演示）\n    *   基于mst的断词器\n    *   train-a-digit-classifier\n    *   train-autoencoder\n    *   optical flow demo\n    *   train-on-housenumbers\n    *   train-on-cifar\n    *   tracking with deep nets\n    *   kinect demo\n    *   滤波可视化\n    *   saliency-networks\n\n*   [Training a Convnet for the Galaxy-Zoo Kaggle challenge(CUDA demo)](https://github.com/soumith/galaxyzoo)\n*   [Music Tagging](https://github.com/mbhenaff/MusicTagging)—torch7下的音乐标签脚本\n*   [torch-datasets](https://github.com/rosejn/torch-datasets) 读取几个流行的数据集的脚本，包括：\n\n    *   BSR 500\n    *   CIFAR-10\n    *   COIL\n    *   Street View House Numbers\n    *   MNIST\n    *   NORB\n\n*   [Atari2600](https://github.com/fidlej/aledataset) —在Arcade Learning Environment模拟器中用静态帧生成数据集的脚本。\n\n## Matlab\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#computer-vision)计算机视觉\n\n*   [Contourlets](http://www.ifp.illinois.edu/~minhdo/software/contourlet_toolbox.tar) —实现轮廓波变换及其使用函数的MATLAB源代码\n*   [Shearlets](http://www.shearlab.org/index_software.html)—剪切波变换的MATLAB源码\n*   [Curvelets](http://www.curvelet.org/software.html)—Curvelet变换的MATLAB源码（Curvelet变换是对小波变换向更高维的推广，用来在不同尺度角度表示图像。）\n*   [Bandlets](http://www.cmap.polytechnique.fr/~peyre/download/)—Bandlets变换的MATLAB源码\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#natural-language-processing-4)自然语言处理\n\n*   [NLP](https://amplab.cs.berkeley.edu/2012/05/05/an-nlp-library-for-matlab/) —一个Matlab的NLP库\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-6)通用机器学习\n\n*   [Training a deep autoencoder or a classifier on MNIST digits](http://www.cs.toronto.edu/~hinton/MatlabForSciencePaper.html)—在MNIST字符数据集上训练一个深度的autoencoder或分类器[深度学习]。\n*   [t-Distributed Stochastic Neighbor Embedding](http://homepage.tudelft.nl/19j49/t-SNE.html) —获奖的降维技术，特别适合于高维数据集的可视化\n*   [Spider](http://people.kyb.tuebingen.mpg.de/spider/)—Matlab机器学习的完整面向对象环境。\n*   [LibSVM](http://www.csie.ntu.edu.tw/~cjlin/libsvm/#matlab) —支持向量机程序库\n*   [LibLinear](http://www.csie.ntu.edu.tw/~cjlin/liblinear/#download) —大型线性分类程序库\n*   [Machine Learning Module](https://github.com/josephmisiti/machine-learning-module) —M. A .Girolami教授的机器学习课程，包括PDF，讲义及代码。\n*   [Caffe](http://caffe.berkeleyvision.org/)—考虑了代码清洁、可读性及速度的深度学习框架\n*   [Pattern Recognition Toolbox](https://github.com/newfolder/PRT) —Matlab中的模式识别工具包，完全面向对象\n\n#### <span style=\"font-weight: bold;\">数据分析/数据可视化</span>[](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization-4)\n\n*   [matlab_gbl](https://www.cs.purdue.edu/homes/dgleich/packages/matlab_bgl/)—处理图像的Matlab包\n*   [gamic](http://www.mathworks.com/matlabcentral/fileexchange/24134-gaimc---graph-algorithms-in-matlab-code)—图像算法纯Matlab高效实现，对MatlabBGL的mex函数是个补充。\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#python)\n\n## .NET\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning#computer-vision-3)计算机视觉\n\n*   [OpenCVDotNet](https://code.google.com/p/opencvdotnet/) —包装器，使.NET程序能使用OpenCV代码\n*   [Emgu CV](http://www.emgu.com/wiki/index.php/Main_Page)—跨平台的包装器，能在Windows, Linus, Mac OS X, iOS, 和Android上编译。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning#natural-language-processing-6)自然语言处理\n\n*   [Stanford.NLP for .NET](https://github.com/sergey-tihon/Stanford.NLP.NET/) —斯坦福大学NLP包在.NET上的完全移植，还可作为NuGet包进行预编译。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning#general-purpose-machine-learning-9)通用机器学习\n\n*   [Accord.MachineLearning](http://www.nuget.org/packages/Accord.MachineLearning/) —支持向量机、决策树、朴素贝叶斯模型、K-means、高斯混合模型和机器学习应用的通用算法，例如：随机抽样一致性算法、交叉验证、网格搜索。这个包是Accord.NET框架的一部分。\n*   [Vulpes](https://github.com/fsprojects/Vulpes)—F#语言实现的Deep belief和深度学习包，它在Alea.cuBase下利用CUDA GPU来执行。\n*   [Encog](http://www.nuget.org/packages/encog-dotnet-core/) —先进的神经网络和机器学习框架，包括用来创建多种网络的类，也支持神经网络需要的数据规则化及处理的类。它的训练采用多线程弹性传播。它也能使用GPU加快处理时间。提供了图形化界面来帮助建模和训练神经网络。\n*   [Neural Network Designer](http://bragisoft.com/) —这是一个数据库管理系统和神经网络设计器。设计器用WPF开发，也是一个UI，你可以设计你的神经网络、查询网络、创建并配置聊天机器人，它能问问题，并从你的反馈中学习。这些机器人甚至可以从网络搜集信息用来输出，或是用来学习。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning#data-analysis--data-visualization-6)数据分析/数据可视化\n\n*   [numl](http://www.nuget.org/packages/numl/) —numl这个机器学习库，目标就是简化预测和聚类的标准建模技术。\n*   [Math.NET Numerics](http://www.nuget.org/packages/MathNet.Numerics/)—Math.NET项目的数值计算基础，着眼提供科学、工程以及日常数值计算的方法和算法。支持 Windows, Linux 和 Mac上的 .Net 4.0, .Net 3.5 和 Mono ，Silverlight 5, WindowsPhone/SL 8, WindowsPhone 8.1 以及装有 PCL Portable Profiles 47 及 344的Windows 8， 装有 Xamarin的Android/iOS 。\n*   [Sho](http://research.microsoft.com/en-us/projects/sho/) —Sho是数据分析和科学计算的交互式环境，可以让你将脚本（IronPython语言）和编译的代码（.NET）无缝连接，以快速灵活的建立原型。这个环境包括强大高效的库，如线性代数、数据可视化，可供任何.NET语言使用，还为快速开发提供了功能丰富的交互式shell。\n\n## Python\n\n#### 计算机视觉\n\n*   [SimpleCV](http://simplecv.org/)—开源的计算机视觉框架，可以访问如OpenCV等高性能计算机视觉库。使用Python编写，可以在Mac、Windows以及Ubuntu上运行。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#natural-language-processing-5)自然语言处理\n\n*   [NLTK](http://www.nltk.org/) —一个领先的平台，用来编写处理人类语言数据的Python程序\n*   [Pattern](http://www.clips.ua.ac.be/pattern)—Python可用的web挖掘模块，包括自然语言处理、机器学习等工具。\n*   [TextBlob](http://textblob.readthedocs.org/)—为普通自然语言处理任务提供一致的API，以NLTK和Pattern为基础，并和两者都能很好兼容。\n*   [jieba](https://github.com/fxsjy/jieba#jieba-1)—中文断词工具。\n*   [SnowNLP](https://github.com/isnowfy/snownlp) —中文文本处理库。\n*   [loso](https://github.com/victorlin/loso)—另一个中文断词库。\n*   [genius](https://github.com/duanhongyi/genius) —基于条件随机域的中文断词库。\n*   [nut](https://github.com/pprett/nut) —自然语言理解工具包。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-7)通用机器学习\n\n*   [Bayesian Methods for Hackers](https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers) —Python语言概率规划的电子书\n*   [MLlib in Apache Spark](http://spark.apache.org/docs/latest/mllib-guide.html)—Spark下的分布式机器学习库。\n*   [scikit-learn](http://scikit-learn.org/)—基于SciPy的机器学习模块\n*   [graphlab-create](http://graphlab.com/products/create/docs/) —包含多种机器学习模块的库（回归，聚类，推荐系统，图分析等），基于可以磁盘存储的DataFrame。\n*   [BigML](https://bigml.com/)—连接外部服务器的库。\n*   [pattern](https://github.com/clips/pattern)—Python的web挖掘模块\n*   [NuPIC](https://github.com/numenta/nupic)—Numenta公司的智能计算平台。\n*   [Pylearn2](https://github.com/lisa-lab/pylearn2)—基于Theano的机器学习库。\n*   [hebel](https://github.com/hannes-brt/hebel) —Python编写的使用GPU加速的深度学习库。\n*   [gensim](https://github.com/piskvorky/gensim)—主题建模工具。\n*   [PyBrain](https://github.com/pybrain/pybrain)—另一个机器学习库。\n*   [Crab](https://github.com/muricoca/crab) —可扩展的、快速推荐引擎。\n*   [python-recsys](https://github.com/ocelma/python-recsys) —Python实现的推荐系统。\n*   [thinking bayes](https://github.com/AllenDowney/ThinkBayes)—关于贝叶斯分析的书籍\n*   [Restricted Boltzmann Machines](https://github.com/echen/restricted-boltzmann-machines) —Python实现的受限波尔兹曼机。[深度学习]。\n*   [Bolt](https://github.com/pprett/bolt) —在线学习工具箱。\n*   [CoverTree](https://github.com/patvarilly/CoverTree) —cover tree的Python实现，scipy.spatial.kdtree便捷的替代。\n*   [nilearn](https://github.com/nilearn/nilearn)—Python实现的神经影像学机器学习库。\n*   [Shogun](https://github.com/shogun-toolbox/shogun)—机器学习工具箱。\n*   [Pyevolve](https://github.com/perone/Pyevolve) —遗传算法框架。\n*   [Caffe](http://caffe.berkeleyvision.org/) —考虑了代码清洁、可读性及速度的深度学习框架\n*   [breze](https://github.com/breze-no-salt/breze)—深度及递归神经网络的程序库，基于Theano。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization-5)数据分析/数据可视化\n\n*   [SciPy](http://www.scipy.org/) —基于Python的数学、科学、工程开源软件生态系统。\n*   [NumPy](http://www.numpy.org/)—Python科学计算基础包。\n*   [Numba](http://numba.pydata.org/) —Python的低级虚拟机JIT编译器，Cython and NumPy的开发者编写，供科学计算使用\n*   [NetworkX](https://networkx.github.io/) —为复杂网络使用的高效软件。\n*   [Pandas](http://pandas.pydata.org/)—这个库提供了高性能、易用的数据结构及数据分析工具。\n*   [Open Mining](https://github.com/avelino/mining)—Python中的商业智能工具（Pandas web接口）。\n*   [PyMC](https://github.com/pymc-devs/pymc) —MCMC采样工具包。\n*   [zipline](https://github.com/quantopian/zipline)—Python的算法交易库。\n*   [PyDy](https://pydy.org/)—全名Python Dynamics，协助基于NumPy, SciPy, IPython以及 matplotlib的动态建模工作流。\n*   [SymPy](https://github.com/sympy/sympy) —符号数学Python库。\n*   [statsmodels](https://github.com/statsmodels/statsmodels)—Python的统计建模及计量经济学库。\n*   [astropy](http://www.astropy.org/) —Python天文学程序库，社区协作编写\n*   [matplotlib](http://matplotlib.org/) —Python的2D绘图库。\n*   [bokeh](https://github.com/ContinuumIO/bokeh)—Python的交互式Web绘图库。\n*   [plotly](https://plot.ly/python) —Python and matplotlib的协作web绘图库。\n*   [vincent](https://github.com/wrobstory/vincent)—将Python数据结构转换为Vega可视化语法。\n*   [d3py](https://github.com/mikedewar/d3py)—Python的绘图库，基于D3.js。\n*   [ggplot](https://github.com/yhat/ggplot) —和R语言里的ggplot2提供同样的API。\n*   [Kartograph.py](https://github.com/kartograph/kartograph.py)—Python中渲染SVG图的库，效果漂亮。\n*   [pygal](http://pygal.org/)—Python下的SVG图表生成器。\n*   [pycascading](https://github.com/twitter/pycascading)\n\n#### 杂项脚本/iPython笔记/代码库[](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#misc-scripts--ipython-notebooks--codebases)\n\n*   [pattern_classification](https://github.com/rasbt/pattern_classification)\n*   [thinking stats 2](https://github.com/Wavelets/ThinkStats2)\n*   [hyperopt](https://github.com/hyperopt/hyperopt-sklearn)\n*   [numpic](https://github.com/numenta/nupic)\n*   [2012-paper-diginorm](https://github.com/ged-lab/2012-paper-diginorm)\n*   [ipython-notebooks](https://github.com/ogrisel/notebooks)\n*   [decision-weights](https://github.com/CamDavidsonPilon/decision-weights)\n*   [Sarah Palin LDA](https://github.com/Wavelets/sarah-palin-lda) —Sarah Palin关于主题建模的电邮。\n*   [Diffusion Segmentation](https://github.com/Wavelets/diffusion-segmentation) —基于扩散方法的图像分割算法集合。\n*   [Scipy Tutorials](https://github.com/Wavelets/scipy-tutorials) —SciPy教程，已过时，请查看scipy-lecture-notes\n*   [Crab](https://github.com/marcelcaraciolo/crab)—Python的推荐引擎库。\n*   [BayesPy](https://github.com/maxsklar/BayesPy)—Python中的贝叶斯推断工具。\n*   [scikit-learn tutorials](https://github.com/GaelVaroquaux/scikit-learn-tutorial)—scikit-learn学习笔记系列\n*   [sentiment-analyzer](https://github.com/madhusudancs/sentiment-analyzer) —推特情绪分析器\n*   [group-lasso](https://github.com/fabianp/group_lasso)—坐标下降算法实验，应用于（稀疏）群套索模型。\n*   [mne-python-notebooks](https://github.com/mne-tools/mne-python-notebooks)—使用 mne-python进行EEG/MEG数据处理的IPython笔记\n*   [pandas cookbook](https://github.com/jvns/pandas-cookbook)—使用Python pandas库的方法书。\n*   [climin](https://github.com/BRML/climin)—机器学习的优化程序库，用Python实现了梯度下降、LBFGS、rmsprop、adadelta 等算法。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#kaggle-competition-source-code)Kaggle竞赛源代码\n\n*   [wiki challange](https://github.com/hammer/wikichallenge) —Kaggle上一个维基预测挑战赛 Dell Zhang解法的实现。\n*   [kaggle insults](https://github.com/amueller/kaggle_insults)—Kaggle上”从社交媒体评论中检测辱骂“竞赛提交的代码\n*   [kaggle_acquire-valued-shoppers-challenge](https://github.com/MLWave/kaggle_acquire-valued-shoppers-challenge)—Kaggle预测回头客挑战赛的代码\n*   [kaggle-cifar](https://github.com/zygmuntz/kaggle-cifar) —Kaggle上CIFAR-10 竞赛的代码，使用cuda-convnet\n*   [kaggle-blackbox](https://github.com/zygmuntz/kaggle-blackbox) —Kaggle上blackbox赛代码，关于深度学习。\n*   [kaggle-accelerometer](https://github.com/zygmuntz/kaggle-accelerometer) —Kaggle上加速度计数据识别用户竞赛的代码\n*   [kaggle-advertised-salaries](https://github.com/zygmuntz/kaggle-advertised-salaries) —Kaggle上用广告预测工资竞赛的代码\n*   [kaggle amazon](https://github.com/zygmuntz/kaggle-amazon) —Kaggle上给定员工角色预测其访问需求竞赛的代码\n*   [kaggle-bestbuy_big](https://github.com/zygmuntz/kaggle-bestbuy_big)—Kaggle上根据bestbuy用户查询预测点击商品竞赛的代码（大数据版）\n*   [kaggle-bestbuy_small](https://github.com/zygmuntz/kaggle-bestbuy_small)—Kaggle上根据bestbuy用户查询预测点击商品竞赛的代码（小数据版）\n*   [Kaggle Dogs vs. Cats](https://github.com/kastnerkyle/kaggle-dogs-vs-cats) —Kaggle上从图片中识别猫和狗竞赛的代码\n*   [Kaggle Galaxy Challenge](https://github.com/benanne/kaggle-galaxies) —Kaggle上遥远星系形态分类竞赛的优胜代码\n*   [Kaggle Gender](https://github.com/zygmuntz/kaggle-gender) —Kaggle竞赛：从笔迹区分性别\n*   [Kaggle Merck](https://github.com/zygmuntz/kaggle-merck)—Kaggle上预测药物分子活性竞赛的代码（默克制药赞助）\n*   [Kaggle Stackoverflow](https://github.com/zygmuntz/kaggle-stackoverflow)—Kaggle上 预测Stack Overflow网站问题是否会被关闭竞赛的代码\n*   [wine-quality](https://github.com/zygmuntz/wine-quality) —预测红酒质量。\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#ruby)Ruby\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#natural-language-processing-6)自然语言处理\n\n*   [Treat](https://github.com/louismullie/treat)—文本检索与注释工具包，Ruby上我见过的最全面的工具包。\n*   [Ruby Linguistics](http://www.deveiate.org/projects/Linguistics/)—这个框架可以用任何语言为Ruby对象构建语言学工具。包括一个语言无关的通用前端，一个将语言代码映射到语言名的模块，和一个含有很有英文语言工具的模块。\n*   [Stemmer](https://github.com/aurelian/ruby-stemmer)—使得Ruby可用 libstemmer_c中的接口。\n*   [Ruby Wordnet](http://www.deveiate.org/projects/Ruby-WordNet/) —WordNet的Ruby接口库。\n*   [Raspel](http://sourceforge.net/projects/raspell/) —aspell绑定到Ruby的接口\n*   [UEA Stemmer](https://github.com/ealdent/uea-stemmer)—UEALite Stemmer的Ruby移植版，供搜索和检索用的保守的词干分析器\n*   [Twitter-text-rb](https://github.com/twitter/twitter-text-rb)—该程序库可以将推特中的用户名、列表和话题标签自动连接并提取出来。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-8)通用机器学习\n\n*   [Ruby Machine Learning](https://github.com/tsycho/ruby-machine-learning) —Ruby实现的一些机器学习算法。\n*   [Machine Learning Ruby](https://github.com/mizoR/machine-learning-ruby)\n*   [jRuby Mahout](https://github.com/vasinov/jruby_mahout) —精华！在JRuby世界中释放了Apache Mahout的威力。\n*   [CardMagic-Classifier](https://github.com/cardmagic/classifier)—可用贝叶斯及其他分类法的通用分类器模块。\n*   [Neural Networks and Deep Learning](https://github.com/mnielsen/neural-networks-and-deep-learning)—《神经网络和深度学习》一书的示例代码。\n\n#### 数据分析/数据可视化[](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization-6)\n\n*   [rsruby](https://github.com/alexgutteridge/rsruby) - Ruby – R bridge\n*   [data-visualization-ruby](https://github.com/chrislo/data_visualisation_ruby)—关于数据可视化的Ruby Manor演示的源代码和支持内容\n*   [ruby-plot](https://www.ruby-toolbox.com/projects/ruby-plot) —将gnuplot包装为Ruby形式，特别适合将ROC曲线转化为svg文件。\n*   [plot-rb](https://github.com/zuhao/plotrb)—基于Vega和D3的ruby绘图库\n*   [scruffy](http://www.rubyinside.com/scruffy-a-beautiful-graphing-toolkit-for-ruby-194.html) —Ruby下出色的图形工具包\n*   [SciRuby](http://sciruby.com/)\n*   [Glean](https://github.com/glean/glean)—数据管理工具\n*   [Bioruby](https://github.com/bioruby/bioruby)\n*   [Arel](https://github.com/nkallen/arel)\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#misc)Misc\n杂项\n\n*   [Big Data For Chimps](https://github.com/infochimps-labs/big_data_for_chimps)—大数据处理严肃而有趣的指南书\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#r)R\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-9)通用机器学习\n\n*   [Clever Algorithms For Machine Learning](https://github.com/jbrownlee/CleverAlgorithmsMachineLearning)\n*   [Machine Learning For Hackers\n](https://github.com/johnmyleswhite/ML_for_Hackers)\n*   [Machine Learning Task View on CRAN](http://cran.r-project.org/web/views/MachineLearning.html)—R语言机器学习包列表，按算法类型分组。\n*   [caret](http://caret.r-forge.r-project.org/)—R语言150个机器学习算法的统一接口\n*   [SuperLearner](https://github.com/ecpolley/SuperLearner) and [subsemble](http://cran.r-project.org/web/packages/subsemble/index.html)—该包集合了多种机器学习算法\n*   [Introduction to Statistical Learning](http://www-bcf.usc.edu/~gareth/ISL/)\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization-7)\n\n#### 数据分析/数据可视化\n\n*   [Learning Statistics Using R\n](http://health.adelaide.edu.au/psychology/ccs/teaching/lsr/)\n*   [ggplot2](http://ggplot2.org/)—基于图形语法的数据可视化包。\n\n## [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#scala)Scala\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#natural-language-processing-7)自然语言处理\n\n*   [ScalaNLP](http://www.scalanlp.org/)—机器学习和数值计算库的套装\n*   [Breeze](https://github.com/scalanlp/breeze) —Scala用的数值处理库\n*   [Chalk](https://github.com/scalanlp/chalk)—自然语言处理库。\n*   [FACTORIE](https://github.com/factorie/factorie)—可部署的概率建模工具包，用Scala实现的软件库。为用户提供简洁的语言来创建关系因素图，评估参数并进行推断。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#data-analysis--data-visualization-8)数据分析/数据可视化\n\n*   [MLlib in Apache Spark](http://spark.apache.org/docs/latest/mllib-guide.html)—Spark下的分布式机器学习库\n*   [Scalding](https://github.com/twitter/scalding) —CAscading的Scala接口\n*   [Summing Bird](https://github.com/twitter/summingbird)—用Scalding 和 Storm进行Streaming MapReduce\n*   [Algebird](https://github.com/twitter/algebird) —Scala的抽象代数工具\n*   [xerial](https://github.com/xerial/xerial) —Scala的数据管理工具\n*   [simmer](https://github.com/avibryant/simmer) —化简你的数据，进行代数聚合的unix过滤器\n*   [PredictionIO](https://github.com/PredictionIO/PredictionIO) —供软件开发者和数据工程师用的机器学习服务器。\n*   [BIDMat](https://github.com/BIDData/BIDMat)—支持大规模探索性数据分析的CPU和GPU加速矩阵库。\n\n#### [](https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md#general-purpose-machine-learning-10)通用机器学习\n\n*   [Conjecture](https://github.com/etsy/Conjecture)—Scalding下可扩展的机器学习框架\n*   [brushfire](https://github.com/avibryant/brushfire)—scalding下的决策树工具。\n*   [ganitha](https://github.com/tresata/ganitha) —基于scalding的机器学习程序库\n*   [adam](https://github.com/bigdatagenomics/adam)—使用Apache Avro, Apache Spark 和 Parquet的基因组处理引擎，有专用的文件格式，Apache 2软件许可。\n*   [bioscala](https://github.com/bioscala/bioscala) —Scala语言可用的生物信息学程序库\n*   [BIDMach](https://github.com/BIDData/BIDMach)—机器学习CPU和GPU加速库。","slug":"机器学习常用资源","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j2f001bq6236eljc1ig"},{"title":"有时候我们都是孤独患者","date":"2014-05-09T14:41:10.000Z","id":"229","_content":"\n有时候总是一个想逃避到寂静的环境中成为一个“孤独患者”,也许会被别人看来我们都有“精神病”,但其实我们都是在放逐自己放空想的太多的心,因为我们都有一颗脆弱的心并不时的保护它不受到伤害,就像歌词所唱通讯录的人有好几百个但真正聊聊天的能有几个.\n孤独也许并不是天生的仅仅是因为有时候一些外在的因素需要面对,让我们有总想逃避成为“孤独患者”.\n有时候我们都是患者远离喧嚣的环境,一个人闹情绪无人关心又有何意义.\n没有得到何必担心失去,回忆只会更多的刺疼那想要逃避的神经.\n\n&nbsp;\n\n&nbsp;","source":"_posts/有时候我们都是孤独患者.md","raw":"title: \"有时候我们都是孤独患者\"\ndate: 2014-05-09 22:41:10\ntags:\nid: 229\ncategories:\n  - 听的世界\n---\n\n有时候总是一个想逃避到寂静的环境中成为一个“孤独患者”,也许会被别人看来我们都有“精神病”,但其实我们都是在放逐自己放空想的太多的心,因为我们都有一颗脆弱的心并不时的保护它不受到伤害,就像歌词所唱通讯录的人有好几百个但真正聊聊天的能有几个.\n孤独也许并不是天生的仅仅是因为有时候一些外在的因素需要面对,让我们有总想逃避成为“孤独患者”.\n有时候我们都是患者远离喧嚣的环境,一个人闹情绪无人关心又有何意义.\n没有得到何必担心失去,回忆只会更多的刺疼那想要逃避的神经.\n\n&nbsp;\n\n&nbsp;","slug":"有时候我们都是孤独患者","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j2h001eq623vtsj63x6"},{"title":"有时候习惯上了某些东西.","date":"2013-04-20T03:52:15.000Z","_content":"\n有时候习惯上了某些东西，到需要放弃的时候感觉到那是多么的艰难呀.\n也许我们就是不是那么轻易的放弃某些已经习惯的东西吧.\n习惯是需要累积才能成为的一种技能.","source":"_posts/有时候习惯上了某些东西..md","raw":"title: \"有时候习惯上了某些东西.\"\ndate: 2013-04-20 11:52:15\ntags: 胡思乱想\n---\n\n有时候习惯上了某些东西，到需要放弃的时候感觉到那是多么的艰难呀.\n也许我们就是不是那么轻易的放弃某些已经习惯的东西吧.\n习惯是需要累积才能成为的一种技能.","slug":"有时候习惯上了某些东西.","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j2j001hq623beq0xq79"},{"title":"有一种行为叫着瞎折腾！","date":"2014-03-03T14:16:08.000Z","_content":"\n最近发现自己总是喜欢在一些事情上“瞎折腾”，比如：看着自己的手机系统是android原生版的效果又不cool有不炫的，看着第三方系统效果很好又是最新版的，结果刷机后用了不到1个月的时间手机出现莫名其妙的问题，根据经验可能是硬件不能支持系统的原因，自己又给刷回原生的系统了。\n\n那么什么叫着“瞎折腾”呢？就是你总是看一件事物或者事情很不爽，总想去改变下它的面貌但改变后不久你又感觉它不如以前或者原始的面貌好看你又把它给还原回去了,这样的经历是又浪费精力和时间.\n\n如何避免这样的行为在以后的工作或者生活中发生呢？就是在做任何决策之前多问自己几遍“为什么？”要去做这样的决策，明白原因和目的后在决策该不该行动.","source":"_posts/有一种行为叫着瞎折腾.md","raw":"title: \"有一种行为叫着瞎折腾！\"\ndate: 2014-03-03 22:16:08\ntags: 胡思乱想\ncategories: 生活记录\n---\n\n最近发现自己总是喜欢在一些事情上“瞎折腾”，比如：看着自己的手机系统是android原生版的效果又不cool有不炫的，看着第三方系统效果很好又是最新版的，结果刷机后用了不到1个月的时间手机出现莫名其妙的问题，根据经验可能是硬件不能支持系统的原因，自己又给刷回原生的系统了。\n\n那么什么叫着“瞎折腾”呢？就是你总是看一件事物或者事情很不爽，总想去改变下它的面貌但改变后不久你又感觉它不如以前或者原始的面貌好看你又把它给还原回去了,这样的经历是又浪费精力和时间.\n\n如何避免这样的行为在以后的工作或者生活中发生呢？就是在做任何决策之前多问自己几遍“为什么？”要去做这样的决策，明白原因和目的后在决策该不该行动.","slug":"有一种行为叫着瞎折腾","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j2l001jq623uwe0bguv"},{"title":"更换域名为feiio.com","date":"2014-05-22T04:58:42.000Z","id":"256","_content":"\n发现登陆网站的域名太长了,而且也不是那么的友好.所以决定重新注册一个稍微短点的域名,最终选择了这个feiio.com.\n为什么选择这个域名呢？\n其实fei就是我名字的最好一个中文拼音,io则对应的是英文里买的input &amp; out,其实这样更能表达这个是个人blog.","source":"_posts/更换域名为feiio.com.md","raw":"title: \"更换域名为feiio.com\"\ndate: 2014-05-22 12:58:42\ntags:\nid: 256\ncategories: 技术工具\n---\n\n发现登陆网站的域名太长了,而且也不是那么的友好.所以决定重新注册一个稍微短点的域名,最终选择了这个feiio.com.\n为什么选择这个域名呢？\n其实fei就是我名字的最好一个中文拼音,io则对应的是英文里买的input &amp; out,其实这样更能表达这个是个人blog.","slug":"更换域名为feiio.com","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j2n001mq623n1wd9ag5"},{"title":"更换Blog的服务器","date":"2014-05-05T08:03:34.000Z","_content":"\n近闲来发现有更多的情感有点想抒发并想记录下来,发现网站打开的速度极其慢而且不能编辑文章,追其原因就是使用的是国外Red Opensift的免费限额空间,然后用百度的加速乐对国内的用户访问提供加速.思考了一番最后最终决定把自己的Blog搬到国内来,但因为国内对域名的备案导致了其间的无数折腾，然后决定买一个不需要备案而且国内访问速度还不错的香港虚拟主机自己也使用工具对其主机速度侦探了一番发现国内访问速度相对美国空间还是不错的.\n\n对于一个技术宅并喜欢折腾的人来说，如果没有一个地方记录自己的零零碎碎的思绪话对于有点记录强迫症的我,还是比较痛苦的一件事.于是趁这次更花服务器的同时丰富了blog整体的内容.","source":"_posts/更换Blog的服务器.md","raw":"title: \"更换Blog的服务器\"\ndate: 2014-05-05 16:03:34\ntags:\ncategories: 技术工具\n---\n\n近闲来发现有更多的情感有点想抒发并想记录下来,发现网站打开的速度极其慢而且不能编辑文章,追其原因就是使用的是国外Red Opensift的免费限额空间,然后用百度的加速乐对国内的用户访问提供加速.思考了一番最后最终决定把自己的Blog搬到国内来,但因为国内对域名的备案导致了其间的无数折腾，然后决定买一个不需要备案而且国内访问速度还不错的香港虚拟主机自己也使用工具对其主机速度侦探了一番发现国内访问速度相对美国空间还是不错的.\n\n对于一个技术宅并喜欢折腾的人来说，如果没有一个地方记录自己的零零碎碎的思绪话对于有点记录强迫症的我,还是比较痛苦的一件事.于是趁这次更花服务器的同时丰富了blog整体的内容.","slug":"更换Blog的服务器","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j2p001oq6231b03mp0c"},{"title":"新生活即将开启","date":"2013-05-10T15:16:40.000Z","id":"10","_content":"\n在2个月的待业时间中,各种的奔波、纠结、迷茫到面对现实.\n\n导致今年的就业机会相对比起往年少了很多，多少也有点网页游戏行业各种投资人转做手游的行业现状有关。在零星的面试到各种的选择中渡过，这也是从工作以来最长的工作间隔时间，这段时间从离职后的傲慢到自大到面对,也许这也验证了上班的时候总是想着离开公司由很多机会等着我或离职后很多工作机会自动找我的,带着这样的心态离职后才发现现实是多么的残酷多么的和自己的想象相反.得到这样得教训和在面试时总是拿着和上家公司的条件去对比现在求职的公司，这也许就是想找一家让自己心满意足的条件公司到最后总是不尽人意。待遇等问题其实在上家公司因为种种的原因在行业中已经算时很高的了,导致了自己的傲慢总以为还有更好的机会等着，结果面试很多家后发现一家不如一家.最后自己的傲慢也得到了教训以妥协现实和调整自己的心态结束自己的待业时间.\n\n在离职后的几天总是因为各种面试中的不如意让自己也开始有了点烦躁的心理，带着烦躁和傲慢的心理总是一直思考能靠单人的力量做点什么.做了一件自己感觉也不算坏的小游戏项目，也算是对自己经历的一种磨炼，但在实施中才发现众多的技能不是一个人之力能,结果才发现工作的这么多年自己的人际关系是多么的匮乏.\n\n也许我们做开发技术也许还算是幸运的了,毕竟行业还是有很多机会的只要调整到合适自己的待遇和心态,也能很轻松的找到一份还算不差的工作.\n\n一直带着许多的问题的问自己想要什么，随着年龄的增大还有几年的青春可以浪费呢？还有几年的时间可以来去实现梦想呢？也许在现实的压力下怎样去实现自己的梦想呢？因为不是圣人的我，避免不了要去食人间烟火.","source":"_posts/新生活即将开启.md","raw":"title: \"新生活即将开启\"\ndate: 2013-05-10 23:16:40\ntags:\nid: 10\ncategories: 职业生涯\n---\n\n在2个月的待业时间中,各种的奔波、纠结、迷茫到面对现实.\n\n导致今年的就业机会相对比起往年少了很多，多少也有点网页游戏行业各种投资人转做手游的行业现状有关。在零星的面试到各种的选择中渡过，这也是从工作以来最长的工作间隔时间，这段时间从离职后的傲慢到自大到面对,也许这也验证了上班的时候总是想着离开公司由很多机会等着我或离职后很多工作机会自动找我的,带着这样的心态离职后才发现现实是多么的残酷多么的和自己的想象相反.得到这样得教训和在面试时总是拿着和上家公司的条件去对比现在求职的公司，这也许就是想找一家让自己心满意足的条件公司到最后总是不尽人意。待遇等问题其实在上家公司因为种种的原因在行业中已经算时很高的了,导致了自己的傲慢总以为还有更好的机会等着，结果面试很多家后发现一家不如一家.最后自己的傲慢也得到了教训以妥协现实和调整自己的心态结束自己的待业时间.\n\n在离职后的几天总是因为各种面试中的不如意让自己也开始有了点烦躁的心理，带着烦躁和傲慢的心理总是一直思考能靠单人的力量做点什么.做了一件自己感觉也不算坏的小游戏项目，也算是对自己经历的一种磨炼，但在实施中才发现众多的技能不是一个人之力能,结果才发现工作的这么多年自己的人际关系是多么的匮乏.\n\n也许我们做开发技术也许还算是幸运的了,毕竟行业还是有很多机会的只要调整到合适自己的待遇和心态,也能很轻松的找到一份还算不差的工作.\n\n一直带着许多的问题的问自己想要什么，随着年龄的增大还有几年的青春可以浪费呢？还有几年的时间可以来去实现梦想呢？也许在现实的压力下怎样去实现自己的梦想呢？因为不是圣人的我，避免不了要去食人间烟火.","slug":"新生活即将开启","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j2s001qq6236ji6j4se"},{"title":"按既定的路线前行","date":"2014-03-04T13:16:24.000Z","id":"105","_content":"\n也许受外界的压力或者其他事件的影响总是担忧前景的迷茫.\n\n明天还要继续既然已经选择了就要承担选择的结果纠结和压力让它去吧!\n\n也许人的心理都是哪样的总是为放弃的东西和即丢失的东西感觉总是有那么一点点的舍不得和惋惜.\n\n尊重自己选择的结果吧,按照既定的目标前行不要因为一时的阻碍而困而却步.\n\n退确了一小步前进一大步.总是需要镇静和沉着来安抚这一只跳动的小兔.\n\n按既定的路线前行并不为之而改变方向是目前该做的.","source":"_posts/按既定的路线前行.md","raw":"title: \"按既定的路线前行\"\ndate: 2014-03-04 21:16:24\ntags:\nid: 105\ncategories:\n  - 生活记录\n---\n\n也许受外界的压力或者其他事件的影响总是担忧前景的迷茫.\n\n明天还要继续既然已经选择了就要承担选择的结果纠结和压力让它去吧!\n\n也许人的心理都是哪样的总是为放弃的东西和即丢失的东西感觉总是有那么一点点的舍不得和惋惜.\n\n尊重自己选择的结果吧,按照既定的目标前行不要因为一时的阻碍而困而却步.\n\n退确了一小步前进一大步.总是需要镇静和沉着来安抚这一只跳动的小兔.\n\n按既定的路线前行并不为之而改变方向是目前该做的.","slug":"按既定的路线前行","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j2u001sq623nmezfyou"},{"title":"我为什么要学Emacs及基础操作记录","date":"2014-06-11T08:40:31.000Z","id":"312","_content":"\n最近算是迷上了emacs文本编辑器,也花了些时间了解入门.还有另外一种和emacs其名的VI文本编辑器到底两种编辑器谁好咱不讨论,只是各求所需各求其好,文本编辑器也只是一个工具而已,我们需要关注的是工具能帮助我们做什么事情.其实平时工作和生活中大部分时间都会使用电脑,所以也会使用电脑上面的工具记录点TODOList和日志包括一些想法记录等.其实普通的文本工具也就可以了,最后无意间看见了别人对emacs的讨论自己也去了解了下这个工具并逐渐认识到了它正是我所需要的工具,因为emacs可以配置自己需要的mode简单的文本界面避免了一些工具的太多操作的分心到最后只去关心学习工具了,反而忘记了到底是需要工具来做什么事情了.\n<!--more-->\nemacs中的[org-mode](http://zh.wikipedia.org/zh/Org-%E6%A8%A1%E5%BC%8F)就是对个人管理的一个种工具很好用,其中它可以对我的todo list进行管理,并且可以对项目进行多级管理,并且可以导出htmliCanlendarpdf等格式的文档.这也满足了我平时项目清单和行动记录的需求,待办事项还包括行动的状态切换、截至时间和行动时间的分配、周行动的概览、行动时间的统计、项目进度的统计等.其他还包括一些链接表格、注释等功能.\n\n[Emacs下载](http://ftp.gnu.org/gnu/emacs/)   [Org-Mode下载](http://orgmode.org/)\n简单的记录下emacs的基本操作：\n打开emacs:\n<pre lang=\"shell\">$emacs 或 $emacs ~/文档名</pre>\nC=control键,M=Alt键或按下Ese,S=shift键,Control键在操作模式中是对一个字符进行的操作,而Alt是对一个句子进行的操作.\n\n查看其中的帮助文档:C-h t\n\n打开文件或者查找文件: C-x C-f 文件\n\n取消命令: C-g\n\n光标移动操作:\nC-f :向前一个字符   C-p:上一行\nC-b:向后一个字符   C-n:下一行\n或键盘上的方向键.也可以使用M-xM-fM-pM-n.\n\n光标到文章头:Esc-&lt;\n光标到文章尾:Esc-&gt;\n\n删除字符: C-d(后一个文字) 或 Delete键(前一个文字)\n删除一行文字:C-k\n\n移动光标到句子头: C-a\n移动光标到句子尾: C-e\n\n粘贴：C-y\n移除选中字符: C-@ 移动光标 C-w\n撤销:C-x u\n\n移动视图: C-v (下一屏)或 M-v(上一屏)\n\n查找字符: C-s(向前查找字符) 或 C-r(向后查找字符)\n替换字符：M-x repl&lt;Tab&gt;-str&lt;Tab&gt; &lt;Return&gt; 需要替换的字符 &lt;Return&gt; 被替换后的字符 Note:按tab键会自动补齐的.Return=回车键\n保存文件: C-x C-s\n退出Emacs: C-x C-c\n\n多次操作:C-u 数字 操作键组合,比如向下移动10行C-u 10 C-n\n\n查看当前缓冲区: C-x C-b\n切换缓冲区: C-x b\n关闭缓冲区:C-x k\n切换光标到其他缓冲区：C-x o\n关闭显示的其他缓冲区: C-x 1\n打开多个缓冲区: C-x 2\n\n切换编辑模式: M-x 模式名，比如:M-x org-mode这样就把当前文本缓冲区切换成了org模式\n\n&nbsp;\n\n&nbsp;","source":"_posts/我为什么要学Emacs及基础操作记录.md","raw":"title: \"我为什么要学Emacs及基础操作记录\"\ndate: 2014-06-11 16:40:31\ntags:\nid: 312\ncategories:\n  - 技术工具\n---\n\n最近算是迷上了emacs文本编辑器,也花了些时间了解入门.还有另外一种和emacs其名的VI文本编辑器到底两种编辑器谁好咱不讨论,只是各求所需各求其好,文本编辑器也只是一个工具而已,我们需要关注的是工具能帮助我们做什么事情.其实平时工作和生活中大部分时间都会使用电脑,所以也会使用电脑上面的工具记录点TODOList和日志包括一些想法记录等.其实普通的文本工具也就可以了,最后无意间看见了别人对emacs的讨论自己也去了解了下这个工具并逐渐认识到了它正是我所需要的工具,因为emacs可以配置自己需要的mode简单的文本界面避免了一些工具的太多操作的分心到最后只去关心学习工具了,反而忘记了到底是需要工具来做什么事情了.\n<!--more-->\nemacs中的[org-mode](http://zh.wikipedia.org/zh/Org-%E6%A8%A1%E5%BC%8F)就是对个人管理的一个种工具很好用,其中它可以对我的todo list进行管理,并且可以对项目进行多级管理,并且可以导出htmliCanlendarpdf等格式的文档.这也满足了我平时项目清单和行动记录的需求,待办事项还包括行动的状态切换、截至时间和行动时间的分配、周行动的概览、行动时间的统计、项目进度的统计等.其他还包括一些链接表格、注释等功能.\n\n[Emacs下载](http://ftp.gnu.org/gnu/emacs/)   [Org-Mode下载](http://orgmode.org/)\n简单的记录下emacs的基本操作：\n打开emacs:\n<pre lang=\"shell\">$emacs 或 $emacs ~/文档名</pre>\nC=control键,M=Alt键或按下Ese,S=shift键,Control键在操作模式中是对一个字符进行的操作,而Alt是对一个句子进行的操作.\n\n查看其中的帮助文档:C-h t\n\n打开文件或者查找文件: C-x C-f 文件\n\n取消命令: C-g\n\n光标移动操作:\nC-f :向前一个字符   C-p:上一行\nC-b:向后一个字符   C-n:下一行\n或键盘上的方向键.也可以使用M-xM-fM-pM-n.\n\n光标到文章头:Esc-&lt;\n光标到文章尾:Esc-&gt;\n\n删除字符: C-d(后一个文字) 或 Delete键(前一个文字)\n删除一行文字:C-k\n\n移动光标到句子头: C-a\n移动光标到句子尾: C-e\n\n粘贴：C-y\n移除选中字符: C-@ 移动光标 C-w\n撤销:C-x u\n\n移动视图: C-v (下一屏)或 M-v(上一屏)\n\n查找字符: C-s(向前查找字符) 或 C-r(向后查找字符)\n替换字符：M-x repl&lt;Tab&gt;-str&lt;Tab&gt; &lt;Return&gt; 需要替换的字符 &lt;Return&gt; 被替换后的字符 Note:按tab键会自动补齐的.Return=回车键\n保存文件: C-x C-s\n退出Emacs: C-x C-c\n\n多次操作:C-u 数字 操作键组合,比如向下移动10行C-u 10 C-n\n\n查看当前缓冲区: C-x C-b\n切换缓冲区: C-x b\n关闭缓冲区:C-x k\n切换光标到其他缓冲区：C-x o\n关闭显示的其他缓冲区: C-x 1\n打开多个缓冲区: C-x 2\n\n切换编辑模式: M-x 模式名，比如:M-x org-mode这样就把当前文本缓冲区切换成了org模式\n\n&nbsp;\n\n&nbsp;","slug":"我为什么要学Emacs及基础操作记录","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j2y001uq623ixnlxwqo"},{"title":"往年的习惯","date":"2016-01-01T09:37:03.000Z","_content":"按照往年的习惯一定会在这一段时间里面对去年以及新的一年作年终总结和年度计划的,有了这两样东西也许会让自己不会在那漫长的摸索路途中迷失方向.这也算是我在过去的一年中学习到最重要的东西,对自己的想要获得东西进行一系计划并根据不断的变化修正其中的步骤来实现其目标的一种行事方式.\n<!-- more-->\n去年从迷茫的失业中到上下班需要3小时的路程但最终不是很满意的工作，到加入目前所在的公司(聚会玩).认识到一些优秀的人并从他们身上看见了我所缺少的一些东西.\n\n一位亲人的离去让我感到生命的脆弱和短暂并让我更加的珍惜身边所有的亲人.\n\n从2010年开始加入游戏客户端的开发到2015年的离去已经整整5个年头了,从页游到手游对整个行业的气氛感觉是那么的浮躁，各种缺乏创新的游戏项目到对整个行业的信心丧失，曾经一度的想要放弃开发游戏的职业因为整个行业让人看起来这份职业的前景是多么的让人看不见未来呀！\n\n在继续前行的路上改掉自己的执行能力和规划能力让一些因为不能有效执行并拖延了很久的一些目标变成现实,使用软件工具(OmniFocus)管理好自己的计划和目标并定期回顾和修正，按照计划前行规划和提醒自己正在做正确的事情.随着记忆力的减弱也对软件工具有了一个全新的认识,也让我愿意从一个只用盗版或花时间去找各种破解工具的人有了购买软件的习惯,也许是近两年使用MacOS对我最大的影响.\n\n---EOF---\n","source":"_posts/往年的习惯.md","raw":"title: 往年的习惯\ndate: 2016-01-01 17:37:03\ntags: 计划和总结\ncategories: 生活记录\n---\n按照往年的习惯一定会在这一段时间里面对去年以及新的一年作年终总结和年度计划的,有了这两样东西也许会让自己不会在那漫长的摸索路途中迷失方向.这也算是我在过去的一年中学习到最重要的东西,对自己的想要获得东西进行一系计划并根据不断的变化修正其中的步骤来实现其目标的一种行事方式.\n<!-- more-->\n去年从迷茫的失业中到上下班需要3小时的路程但最终不是很满意的工作，到加入目前所在的公司(聚会玩).认识到一些优秀的人并从他们身上看见了我所缺少的一些东西.\n\n一位亲人的离去让我感到生命的脆弱和短暂并让我更加的珍惜身边所有的亲人.\n\n从2010年开始加入游戏客户端的开发到2015年的离去已经整整5个年头了,从页游到手游对整个行业的气氛感觉是那么的浮躁，各种缺乏创新的游戏项目到对整个行业的信心丧失，曾经一度的想要放弃开发游戏的职业因为整个行业让人看起来这份职业的前景是多么的让人看不见未来呀！\n\n在继续前行的路上改掉自己的执行能力和规划能力让一些因为不能有效执行并拖延了很久的一些目标变成现实,使用软件工具(OmniFocus)管理好自己的计划和目标并定期回顾和修正，按照计划前行规划和提醒自己正在做正确的事情.随着记忆力的减弱也对软件工具有了一个全新的认识,也让我愿意从一个只用盗版或花时间去找各种破解工具的人有了购买软件的习惯,也许是近两年使用MacOS对我最大的影响.\n\n---EOF---\n","slug":"往年的习惯","published":1,"updated":"2016-01-03T04:22:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j2z001wq6237bpsb4i1"},{"title":"失败的选择","date":"2015-05-20T13:39:12.000Z","_content":"\n   最近因为公司的发展运营策略调整,一直由我开发了2个多月的产品被砍掉了，发展思路由自己做线上精品小游戏的线路而导致目前的购买网上出售的游戏源代码修改并上线的思路来开发游戏,对这样的发展策略也不知道该说些什么咯.\n <!-- more -->\n \n   做些和自己价值观违背的事情总是有点不是滋味,毕竟这不是长远的发展眼光,虽然老大说的是为短期内积累更多的资金来为长远的公司发展来做的这个运营策略的调整.\n   \n\n## 怎么做？\n\n俗话说”道不同，不相谋”,作为一位开发人除了暂时的遵守公司的发展道路,如果和自己价值观有冲突的事情那也只有离开.但目前又不得不因为生活的压力而选择暂时的迁就目前的境况,毕竟是需要养家糊口的。\n\n## 结束\n\n作为一个已经在这个游戏行业打拼咯几年的人看来，这种行为有点不是滋味,别人辛苦几个月开发的东西被别人反汇编出来然后仅仅的只是做一些小改动而推出相同的产品短期来获取利益,这也算是目前这个行业的灰色地带，而且好像根据我的了解目前这样的公司很多,这也是为什么目前国内游戏行业的浮躁,资本的大量进入因为看见这个行业能获取大量的利益,接过就出现了很多的团队根本就不具备开发游戏的经验仅仅是想获取更多的投资然后套取利益这样的现象.\n\n最近一直在思索一个问题是否要离开这个行业,去做点别的事情毕竟人只有一个人生,需要做点有意义的事情,但另一个思想打断了我既然当初选定了这行就必须坚持下去,不能因为一点点的失败而放弃自己的理想.\n\n--------EOF--------","source":"_posts/失败的选择.md","raw":"title: \"失败的选择\"\ndate: 2015-05-20 21:39:12 +0800\ncategories: 职业生涯\ntags: 胡思乱想\n---\n\n   最近因为公司的发展运营策略调整,一直由我开发了2个多月的产品被砍掉了，发展思路由自己做线上精品小游戏的线路而导致目前的购买网上出售的游戏源代码修改并上线的思路来开发游戏,对这样的发展策略也不知道该说些什么咯.\n <!-- more -->\n \n   做些和自己价值观违背的事情总是有点不是滋味,毕竟这不是长远的发展眼光,虽然老大说的是为短期内积累更多的资金来为长远的公司发展来做的这个运营策略的调整.\n   \n\n## 怎么做？\n\n俗话说”道不同，不相谋”,作为一位开发人除了暂时的遵守公司的发展道路,如果和自己价值观有冲突的事情那也只有离开.但目前又不得不因为生活的压力而选择暂时的迁就目前的境况,毕竟是需要养家糊口的。\n\n## 结束\n\n作为一个已经在这个游戏行业打拼咯几年的人看来，这种行为有点不是滋味,别人辛苦几个月开发的东西被别人反汇编出来然后仅仅的只是做一些小改动而推出相同的产品短期来获取利益,这也算是目前这个行业的灰色地带，而且好像根据我的了解目前这样的公司很多,这也是为什么目前国内游戏行业的浮躁,资本的大量进入因为看见这个行业能获取大量的利益,接过就出现了很多的团队根本就不具备开发游戏的经验仅仅是想获取更多的投资然后套取利益这样的现象.\n\n最近一直在思索一个问题是否要离开这个行业,去做点别的事情毕竟人只有一个人生,需要做点有意义的事情,但另一个思想打断了我既然当初选定了这行就必须坚持下去,不能因为一点点的失败而放弃自己的理想.\n\n--------EOF--------","slug":"失败的选择","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j330020q623gkaxlgm2"},{"title":"可怜的小猫,无能的虐猫者","date":"2013-11-01T12:00:49.000Z","id":"16","_content":"\n下班路过小区的路上,遇见一只脖子上拴着绳子全身湿透并不断大声哀叫,大约4、5个月左右的小猫，替它解开了绳子.然后回家拿着装着猫粮的纸箱子下楼小猫不见了.祈祷被好心人捡走了吧！\n\n遇见这么弱小的动物被这样的虐待，我们又能做点什么呢？\n\n真心不知道虐猫者是出于什么心理去对待那样的一只弱小生物？\n\n只想对虐猫的人们说：“对弱小生命的欺负只能是一种无能的表现,那样并不能证明你是强大的”.\n\n同在一个地球上的生物，如果没有对你的生命和生存造成威胁的，请善待它们！\n\n除了对虐待者的道德和心理的咒骂以外，我们还能为这些弱小的生命做点什么呢？\n\n领养一只小猫咪并且让他陪你走过它的一生,根据我的能力目前只能养一只猫咪这也是我正在做的一件事.\n\n现在的猫咪已经跟我们生活了一年多,也给我们带来不少的欢乐.","source":"_posts/可怜的小猫,无能的虐猫者.md","raw":"title: \"可怜的小猫,无能的虐猫者\"\ndate: 2013-11-01 20:00:49\ntags:\nid: 16\ncategories:\n  - 生活记录\n---\n\n下班路过小区的路上,遇见一只脖子上拴着绳子全身湿透并不断大声哀叫,大约4、5个月左右的小猫，替它解开了绳子.然后回家拿着装着猫粮的纸箱子下楼小猫不见了.祈祷被好心人捡走了吧！\n\n遇见这么弱小的动物被这样的虐待，我们又能做点什么呢？\n\n真心不知道虐猫者是出于什么心理去对待那样的一只弱小生物？\n\n只想对虐猫的人们说：“对弱小生命的欺负只能是一种无能的表现,那样并不能证明你是强大的”.\n\n同在一个地球上的生物，如果没有对你的生命和生存造成威胁的，请善待它们！\n\n除了对虐待者的道德和心理的咒骂以外，我们还能为这些弱小的生命做点什么呢？\n\n领养一只小猫咪并且让他陪你走过它的一生,根据我的能力目前只能养一只猫咪这也是我正在做的一件事.\n\n现在的猫咪已经跟我们生活了一年多,也给我们带来不少的欢乐.","slug":"可怜的小猫,无能的虐猫者","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j340023q6239pjmdi8r"},{"title":"劳而无获","date":"2013-10-28T12:26:15.000Z","_content":"\n一直在寻找自己想要的东西，其实心里只是有一个模糊的概念的而已.\n\n总是在一些不重要的事情上徘徊而放弃了最初坚持的东西，繁杂的信息扰乱了我视线.\n\n总是做一些不常用的事情渐进的不实践就忘记了,保持着对新东西的发掘热情少了一份最初的坚持.\n\n也许是时候做些改变了,因为平庸总是不经意的侵袭你的“大脑”,最终的结果就是忙忙碌碌而劳而无获.\n\n&nbsp;","source":"_posts/劳而无获.md","raw":"title: \"劳而无获\"\ndate: 2013-10-28 20:26:15\ntags: 胡思乱想\n---\n\n一直在寻找自己想要的东西，其实心里只是有一个模糊的概念的而已.\n\n总是在一些不重要的事情上徘徊而放弃了最初坚持的东西，繁杂的信息扰乱了我视线.\n\n总是做一些不常用的事情渐进的不实践就忘记了,保持着对新东西的发掘热情少了一份最初的坚持.\n\n也许是时候做些改变了,因为平庸总是不经意的侵袭你的“大脑”,最终的结果就是忙忙碌碌而劳而无获.\n\n&nbsp;","slug":"劳而无获","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j360025q6231ov86xpy"},{"title":"办证路上","date":"2016-04-13T03:20:20.000Z","_content":"就在昨天我去办证了,而且还在据说办事效率高的上海.中国,算起来这都是是第三次为办居住证的事情跑居委会了,结果有是一阵折腾,居委会呢只有周二下午14:00-16:00才有人办,结果问其他时段有无人,就跟我说可以去物业开租房合同然后去街道办事处备案租房合同.然后在去街道专门办理居住证的地方拿上租凭备案证明和身份证申请居住证.\n\n原本我就不想要什么“居住证”,记得以前看过老罗的视频里面吐槽过暂住证的事情现在又来了什么居住证,对居住证这个东西其实也是比较反感的,但屈于现实是你读个驾校、拍个车牌、换个驾照等全都需要,办事要这个证件也算了咱是个守法公民也配合着去办，好了问题来了这个办证路上就需要各种的证明材料.\n\n拿房屋租凭合同备案来说,这应该也是很多人没有办下来的一道关卡,租的房子需要房东的房产证还有房东本人要做个什么保证签名,一般情况下出租房子的人都是比较配合你的,但有这些还不够然后你得拿上这些东西需要去街道社区办事处房管局办理备案,房东得知备案后租房需要收取XX税,这时候房东就不愿意了.那么也就意味着你的办证失败了.我也算就这样结束了这次的办证路程.\n\n无奈计划好好的事情又被打乱了顺序,生活总是这样不是吗？\n","source":"_posts/办证路上.md","raw":"---\ntitle: 办证路上\ndate: 2016-04-13 11:20:20\ncategories: 生活记录\ntag: 办证\n---\n就在昨天我去办证了,而且还在据说办事效率高的上海.中国,算起来这都是是第三次为办居住证的事情跑居委会了,结果有是一阵折腾,居委会呢只有周二下午14:00-16:00才有人办,结果问其他时段有无人,就跟我说可以去物业开租房合同然后去街道办事处备案租房合同.然后在去街道专门办理居住证的地方拿上租凭备案证明和身份证申请居住证.\n\n原本我就不想要什么“居住证”,记得以前看过老罗的视频里面吐槽过暂住证的事情现在又来了什么居住证,对居住证这个东西其实也是比较反感的,但屈于现实是你读个驾校、拍个车牌、换个驾照等全都需要,办事要这个证件也算了咱是个守法公民也配合着去办，好了问题来了这个办证路上就需要各种的证明材料.\n\n拿房屋租凭合同备案来说,这应该也是很多人没有办下来的一道关卡,租的房子需要房东的房产证还有房东本人要做个什么保证签名,一般情况下出租房子的人都是比较配合你的,但有这些还不够然后你得拿上这些东西需要去街道社区办事处房管局办理备案,房东得知备案后租房需要收取XX税,这时候房东就不愿意了.那么也就意味着你的办证失败了.我也算就这样结束了这次的办证路程.\n\n无奈计划好好的事情又被打乱了顺序,生活总是这样不是吗？\n","slug":"办证路上","published":1,"updated":"2016-04-13T03:58:07.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j3b0027q623rti1qhwo"},{"title":"对blog使用Let's Encrypt支持https","date":"2015-12-06T03:45:59.000Z","_content":"\n距上一篇时隔两月,看见同事的blog中支持了https自己也尝试的配置了下,也一起把blog的万网虚拟主机升级换上了高大上的[Vultr VPS](http://www.vultr.com/?ref=6862277)，线路选择的是洛杉矶机房。网站的证书使用的是[LET'S ENCRYPT](https://letsencrypt.org/)的免费证书但唯一缺点就是每隔90天需要重新的续签一次。\n服务器系统是：CentOS 7.0\nweb服务器：Nginx。\n<!-- more -->\n\n以下就是对blog进行Let's Encrypt https支持的的配置的过程：\n\n### Let's Encrypt的获取\n<pre class=\"brush: bash; \">\ngit clone https://github.com/letsencrypt/letsencrypt\ncd letsencrypt\n./letsencrypt-auto --nginx or apache\n</pre>\nNOTE: 第一次使用自动配置没有成功.\n\n### 生成网站证书\n\n<pre class=\"brush: bash; \">\n//如果有多个域名请自行增加 *-d 域名* 参数\n./letsencrypt-auto certonly --webroot -w 网站的主目录 -d 域名 \n//查看生成证书的目录\n$ls /etc/letsencrypt/live/域名/\n</pre>\n\n### nginx中的证书配置 \n\n<pre clas=\"brush: bash; \">\nserver {\n\nlisten 443 ssl;\nserver_name  *.heyuanfei.cn *.feiio.com;\nroot        网站主目录\n//SSL证书配置\nssl_certificate /etc/letsencrypt/live/heyuanfei.cn/fullchain.pem;\nssl_certificate_key /etc/letsencrypt/live/heyuanfei.cn/privkey.pem;\nssl on;\n}\n//重新启动服务器\nservice nginx restart\n</pre>\n\n### 对HTTP请求的跳转配置\n\n<pre class=\"brush: bash\">\nserver {\nlisten       80 default_server;\nlisten       [::]:80 default_server;\nserver_name *.feiio.com *.heyuanfei.cn;\nrewrite ^(.*)$ https://$host$1 permanent;\n}\n</pre>\n\n\n\n\n\n\n","source":"_posts/使用Let-s-Encrypt让blog支持https吧.md","raw":"title: \"对blog使用Let's Encrypt支持https\"\ndate: 2015-12-06 11:45:59\ntags: 折腾\ncategories: 技术工具\n---\n\n距上一篇时隔两月,看见同事的blog中支持了https自己也尝试的配置了下,也一起把blog的万网虚拟主机升级换上了高大上的[Vultr VPS](http://www.vultr.com/?ref=6862277)，线路选择的是洛杉矶机房。网站的证书使用的是[LET'S ENCRYPT](https://letsencrypt.org/)的免费证书但唯一缺点就是每隔90天需要重新的续签一次。\n服务器系统是：CentOS 7.0\nweb服务器：Nginx。\n<!-- more -->\n\n以下就是对blog进行Let's Encrypt https支持的的配置的过程：\n\n### Let's Encrypt的获取\n<pre class=\"brush: bash; \">\ngit clone https://github.com/letsencrypt/letsencrypt\ncd letsencrypt\n./letsencrypt-auto --nginx or apache\n</pre>\nNOTE: 第一次使用自动配置没有成功.\n\n### 生成网站证书\n\n<pre class=\"brush: bash; \">\n//如果有多个域名请自行增加 *-d 域名* 参数\n./letsencrypt-auto certonly --webroot -w 网站的主目录 -d 域名 \n//查看生成证书的目录\n$ls /etc/letsencrypt/live/域名/\n</pre>\n\n### nginx中的证书配置 \n\n<pre clas=\"brush: bash; \">\nserver {\n\nlisten 443 ssl;\nserver_name  *.heyuanfei.cn *.feiio.com;\nroot        网站主目录\n//SSL证书配置\nssl_certificate /etc/letsencrypt/live/heyuanfei.cn/fullchain.pem;\nssl_certificate_key /etc/letsencrypt/live/heyuanfei.cn/privkey.pem;\nssl on;\n}\n//重新启动服务器\nservice nginx restart\n</pre>\n\n### 对HTTP请求的跳转配置\n\n<pre class=\"brush: bash\">\nserver {\nlisten       80 default_server;\nlisten       [::]:80 default_server;\nserver_name *.feiio.com *.heyuanfei.cn;\nrewrite ^(.*)$ https://$host$1 permanent;\n}\n</pre>\n\n\n\n\n\n\n","slug":"使用Let-s-Encrypt让blog支持https吧","published":1,"updated":"2016-08-21T03:33:46.000Z","_id":"cis400j3f002bq623bzqd631f","comments":1,"layout":"post","photos":[],"link":""},{"title":"从零开始到没有安全的工作","date":"2016-03-20T13:58:17.000Z","_content":"\n刚刚看了阮一峰Blog的一篇博文[“有没有安全的工作”](http://www.ruanyifeng.com/blog/2015/12/safe-job.html) 其中描述的就跟我的经历比较相似2010年对页游和Flash技术的喜爱而进入游戏行业,最终行业和技术的衰落和变迁到进入移动端游戏cocos2d-x的开发其间经历各种团队、各种原因都没有一个成功的项目经验到目前公司技术的转型.这种经历和经验对于技术人员来说可能是比较“伤”的吧，根本就是一个从零开始.面对如此的变化其实只有两条路可以走，要么坚持自己当初的选着辞职在找相同的技术类型的工作，要么留下随着公司的变化而变化.我选择了后者只希望自己的激情和坚定的信心不要被被时间的消磨和没有成就感所打败。\n\n<!-- more -->\n\n面对公司业务的再次转型,其实自己的技术也面临着一种挑战,进入游戏行业5年之久经历各种公司的兴衰，5年的游戏客户端开发经验在公司没有任何收入或盈利的面前你也面临着最终失业的审判.并不会因为你是多么的有激情或技术多么的厉害而而会有不同的待遇，最终结果还是一样会被这个商业社会淘汰.感慨这些年所经历都是一样的,从开始的激情澎湃到最终的不欢而散,行业的浮躁也对自己的前景进行深思离开这一行还能做点什么来进行养家糊口呢？该如何面对这一切的变化并对其做出改变并进行行动.\n\n同时对最近人工智能话题的火爆也稍微在往未来思考一下：机器人和工作的关系,我们的工作如果被机器人取代了那时我们还能做什么？想起K.K 《必然》“知化”那章提到：“以后大多数流程化的工作会被机器人或智能程序所取代，但我们会被更多的思考如何让机器做更智能的工作并改善这些机器，这就是我们与机器人互相依赖共存的一种状态？”，面对这科技日新月异的世界，作为其中的工作者的我们又该如何让这种依赖共存的关系发展下去呢？如何才能发挥机器的长处让机器为我们工作.\n","source":"_posts/从零开始到没有安全的工作.md","raw":"---\ntitle: 从零开始到没有安全的工作\ndate: 2016-03-20 21:58:17\ntags: [胡思乱想,Work,人工智能]\ncategories: 职业生涯\n---\n\n刚刚看了阮一峰Blog的一篇博文[“有没有安全的工作”](http://www.ruanyifeng.com/blog/2015/12/safe-job.html) 其中描述的就跟我的经历比较相似2010年对页游和Flash技术的喜爱而进入游戏行业,最终行业和技术的衰落和变迁到进入移动端游戏cocos2d-x的开发其间经历各种团队、各种原因都没有一个成功的项目经验到目前公司技术的转型.这种经历和经验对于技术人员来说可能是比较“伤”的吧，根本就是一个从零开始.面对如此的变化其实只有两条路可以走，要么坚持自己当初的选着辞职在找相同的技术类型的工作，要么留下随着公司的变化而变化.我选择了后者只希望自己的激情和坚定的信心不要被被时间的消磨和没有成就感所打败。\n\n<!-- more -->\n\n面对公司业务的再次转型,其实自己的技术也面临着一种挑战,进入游戏行业5年之久经历各种公司的兴衰，5年的游戏客户端开发经验在公司没有任何收入或盈利的面前你也面临着最终失业的审判.并不会因为你是多么的有激情或技术多么的厉害而而会有不同的待遇，最终结果还是一样会被这个商业社会淘汰.感慨这些年所经历都是一样的,从开始的激情澎湃到最终的不欢而散,行业的浮躁也对自己的前景进行深思离开这一行还能做点什么来进行养家糊口呢？该如何面对这一切的变化并对其做出改变并进行行动.\n\n同时对最近人工智能话题的火爆也稍微在往未来思考一下：机器人和工作的关系,我们的工作如果被机器人取代了那时我们还能做什么？想起K.K 《必然》“知化”那章提到：“以后大多数流程化的工作会被机器人或智能程序所取代，但我们会被更多的思考如何让机器做更智能的工作并改善这些机器，这就是我们与机器人互相依赖共存的一种状态？”，面对这科技日新月异的世界，作为其中的工作者的我们又该如何让这种依赖共存的关系发展下去呢？如何才能发挥机器的长处让机器为我们工作.\n","slug":"从零开始到没有安全的工作","published":1,"updated":"2016-03-20T14:09:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j3i002eq623r7em5d5g"},{"title":"从减肥到健康的目标总结","date":"2015-04-24T14:02:51.000Z","id":"489","_content":"\n是时候总结下自己这大半年做的减肥目标咯,在2014年7月因为公司做入职体检的时候被检测到因为肥胖导致身体有脂肪肝等问题。当时设立一个目标就是为了健康的身体减肥。从2014年7月份到2015年4月体重由87KG-74KG，这期间有2个月因为失业的一些压力和过春节假期也就放纵了自己，在那段时间锻炼的次数总共加起来估计不过10天。，当时也去看咯一些关于健身的书籍其中两本有[《无器械健身 : 用自身体重锻练》](http://book.douban.com/subject/11608712/ \"无器械健身\")《[囚徒健身》](http://book.douban.com/subject/25717097/)这两本书都提倡利用自身体重来锻炼身体，而不是通健身器械来达到健身的目的，<!--more-->开始也就随便找咯几组基础动作来入门.\n\n主要使用两个方法锻炼和饮食达到自己的目的:\n\n*   通过饮食多吃清单的素食，尽量少食油腻的食物，可乐等碳酸饮料完全不喝.\n*   每天坚持锻炼至少20分钟时间，这20分钟时间主要由倾斜俯卧撑*3组、平地举腿45度*3、卷腹*3和深蹲*3，每组由一开始的10-&gt;20-&gt;30-&gt;50个进阶.每组做多少这里的数量是根据自己的体质来调整.\n锻炼时间：开始是睡觉前、周末下午、早晨起床上班前，最后到现在的时间都固定在早起后的30分钟里，因为这段时间能让睡意朦胧的大脑因为锻炼进入最佳状态.然后就是周末的下午15-17点的这段时间.\n其实锻炼方法根据上边推荐的书一开始选择适合自己体质的几组锻炼动作，可以通过日记本统计自己每天的锻炼数量和所做的动作，然后统计分析并改善运动强度和更改挑战难度较大的动作。关键是贵在坚持.开始的日子里不论什么事情每天都要锻炼不要停止运动，可以因为时间的紧俏而锻炼数量上少，但不能停因为能让这些锻炼行为在每天的不断重复中逐渐变成你的习惯.","source":"_posts/从减肥到健康的目标总结.md","raw":"title: \"从减肥到健康的目标总结\"\ndate: 2015-04-24 22:02:51\ntags:\nid: 489\ncategories:\n  - 生活记录\n---\n\n是时候总结下自己这大半年做的减肥目标咯,在2014年7月因为公司做入职体检的时候被检测到因为肥胖导致身体有脂肪肝等问题。当时设立一个目标就是为了健康的身体减肥。从2014年7月份到2015年4月体重由87KG-74KG，这期间有2个月因为失业的一些压力和过春节假期也就放纵了自己，在那段时间锻炼的次数总共加起来估计不过10天。，当时也去看咯一些关于健身的书籍其中两本有[《无器械健身 : 用自身体重锻练》](http://book.douban.com/subject/11608712/ \"无器械健身\")《[囚徒健身》](http://book.douban.com/subject/25717097/)这两本书都提倡利用自身体重来锻炼身体，而不是通健身器械来达到健身的目的，<!--more-->开始也就随便找咯几组基础动作来入门.\n\n主要使用两个方法锻炼和饮食达到自己的目的:\n\n*   通过饮食多吃清单的素食，尽量少食油腻的食物，可乐等碳酸饮料完全不喝.\n*   每天坚持锻炼至少20分钟时间，这20分钟时间主要由倾斜俯卧撑*3组、平地举腿45度*3、卷腹*3和深蹲*3，每组由一开始的10-&gt;20-&gt;30-&gt;50个进阶.每组做多少这里的数量是根据自己的体质来调整.\n锻炼时间：开始是睡觉前、周末下午、早晨起床上班前，最后到现在的时间都固定在早起后的30分钟里，因为这段时间能让睡意朦胧的大脑因为锻炼进入最佳状态.然后就是周末的下午15-17点的这段时间.\n其实锻炼方法根据上边推荐的书一开始选择适合自己体质的几组锻炼动作，可以通过日记本统计自己每天的锻炼数量和所做的动作，然后统计分析并改善运动强度和更改挑战难度较大的动作。关键是贵在坚持.开始的日子里不论什么事情每天都要锻炼不要停止运动，可以因为时间的紧俏而锻炼数量上少，但不能停因为能让这些锻炼行为在每天的不断重复中逐渐变成你的习惯.","slug":"从减肥到健康的目标总结","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j3l002lq623hkx3uoc7"},{"title":"二分搜索算法","date":"2015-01-19T08:30:42.000Z","id":"411","_content":"\n*   #### 实现步骤\n\n    * * *\n\n    1.  先对数据容器中元素进行从大到小的排序.\n    2.  取出容器开始、结束和中间值元素的指针\n    3.  迭代循环，终止循环条件为中间指针!=结尾指针和中间的值!=待查找的值\n    4.  如果查找的元素小于中间值则设置结尾指针为中间指针,否则设置开始指针为当前中间位置的下一位置\n    5.  重新设置当前中间指针\n<!--more-->\n\n*   #### 实现代码\n\n* * *\n\n<pre class=\"lang:c++ decode:true\">    vector&lt;int&gt; test_data={45,23,12,4,3};\n\n    sort(test_data.begin(), test_data.end(), [&amp;](const int &amp;a,const int &amp;b)\n         {\n             return a&lt;b;\n         });\n\n    auto begen = test_data.begin();\n    auto end=test_data.end();\n    auto mid = begen+(end-begen)/2;\n\n    int find_val = 45;//查找的值\n\nwhile (mid!=end &amp;&amp;　*mid!=find_val) {\n        if (find_val&lt;*mid) {\n            end = mid;\n        }else{\n            begen = mid+1;\n        }\n        mid = begen+(end-begen)/2;\n    }\n</pre>\n\n*   ####  模板方法\n\n* * *\n\n<pre class=\"lang:c++ decode:true \">template &lt;typename T,typename V&gt;\nT average_find(T beg,T end,const V &amp;val)\n{\n    auto mid = beg+(end-beg)/2;\n    while (mid!=end &amp;&amp; *mid!=val) {\n        if (val&lt;(*mid)) {\n            end = mid;\n        }else{\n            beg = mid+1;\n        }\n        mid = beg+(end-beg)/2;\n    }\n    return mid;\n\n}\n</pre>\n&nbsp;","source":"_posts/二分搜索算法.md","raw":"title: \"二分搜索算法\"\ndate: 2015-01-19 16:30:42\ntags:\nid: 411\ncategories:\n  - 编程技术\n---\n\n*   #### 实现步骤\n\n    * * *\n\n    1.  先对数据容器中元素进行从大到小的排序.\n    2.  取出容器开始、结束和中间值元素的指针\n    3.  迭代循环，终止循环条件为中间指针!=结尾指针和中间的值!=待查找的值\n    4.  如果查找的元素小于中间值则设置结尾指针为中间指针,否则设置开始指针为当前中间位置的下一位置\n    5.  重新设置当前中间指针\n<!--more-->\n\n*   #### 实现代码\n\n* * *\n\n<pre class=\"lang:c++ decode:true\">    vector&lt;int&gt; test_data={45,23,12,4,3};\n\n    sort(test_data.begin(), test_data.end(), [&amp;](const int &amp;a,const int &amp;b)\n         {\n             return a&lt;b;\n         });\n\n    auto begen = test_data.begin();\n    auto end=test_data.end();\n    auto mid = begen+(end-begen)/2;\n\n    int find_val = 45;//查找的值\n\nwhile (mid!=end &amp;&amp;　*mid!=find_val) {\n        if (find_val&lt;*mid) {\n            end = mid;\n        }else{\n            begen = mid+1;\n        }\n        mid = begen+(end-begen)/2;\n    }\n</pre>\n\n*   ####  模板方法\n\n* * *\n\n<pre class=\"lang:c++ decode:true \">template &lt;typename T,typename V&gt;\nT average_find(T beg,T end,const V &amp;val)\n{\n    auto mid = beg+(end-beg)/2;\n    while (mid!=end &amp;&amp; *mid!=val) {\n        if (val&lt;(*mid)) {\n            end = mid;\n        }else{\n            beg = mid+1;\n        }\n        mid = beg+(end-beg)/2;\n    }\n    return mid;\n\n}\n</pre>\n&nbsp;","slug":"二分搜索算法","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j3n002nq6237elr0f2l"},{"title":"世事无常","date":"2013-10-06T15:22:34.000Z","id":"12","_content":"\n从高兴到失落，世事总是这么的变化无常。 一件事在没有在百分之百确定的情况下，千万别为它流露出任何喜悦的笑容，因为随着时间的流逝你会发现“上帝”总是在和你开玩笑。","source":"_posts/世事无常.md","raw":"title: \"世事无常\"\ndate: 2013-10-06 23:22:34\ntags:\nid: 12\ncategories:\n  - 生活记录\n---\n\n从高兴到失落，世事总是这么的变化无常。 一件事在没有在百分之百确定的情况下，千万别为它流露出任何喜悦的笑容，因为随着时间的流逝你会发现“上帝”总是在和你开玩笑。","slug":"世事无常","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j3p002pq6233bwup3c9"},{"title":"不要在游戏中输掉了你的素质","date":"2014-08-15T16:40:54.000Z","comment":false,"_content":"\n最近在游戏中总是碰见一些玩家只要队友在游戏中表现的不是很好就对别人进行言语上的攻击，特别是联机多人竞技类的游戏只要别人操作不是很好或者一局游戏中别人坑了你，你就在言语上进行侮辱或者咒骂，试试问自己这一局游戏的输赢对你就是那么的重要吗？你输的并不是这一局游戏而是丢了你的素质,人人玩游戏都不是大神都是从新手阶段到大神阶段一步步成长的，查看下你的游戏数据记录你玩的比别人多仅此而已,新手小白只是把游戏当着一种娱乐工具打发时间而已,何必那么认真呢?也有可能被你在这局游戏中进行了言语侮辱别人可能以后就在也不会玩这个游戏,那你以后怎么匹配对手或者队友呢?请以一个平和和宽容的心态去对待新手吧！\n\n也许你的宽容就会对新手队友造成一种上进的心理,比如说在这局游戏中我没有获胜就会去查看攻略或者了解游戏的操作多多练习对别人也会在兴趣上多一点对不了解的事物多花点时间进行了解.","source":"_posts/不要在游戏中输掉了你的素质.md","raw":"title: \"不要在游戏中输掉了你的素质\"\ndate: 2014-08-16 00:40:54\ntags: 胡思乱想\ncomment: false\ncategories: 生活记录\n---\n\n最近在游戏中总是碰见一些玩家只要队友在游戏中表现的不是很好就对别人进行言语上的攻击，特别是联机多人竞技类的游戏只要别人操作不是很好或者一局游戏中别人坑了你，你就在言语上进行侮辱或者咒骂，试试问自己这一局游戏的输赢对你就是那么的重要吗？你输的并不是这一局游戏而是丢了你的素质,人人玩游戏都不是大神都是从新手阶段到大神阶段一步步成长的，查看下你的游戏数据记录你玩的比别人多仅此而已,新手小白只是把游戏当着一种娱乐工具打发时间而已,何必那么认真呢?也有可能被你在这局游戏中进行了言语侮辱别人可能以后就在也不会玩这个游戏,那你以后怎么匹配对手或者队友呢?请以一个平和和宽容的心态去对待新手吧！\n\n也许你的宽容就会对新手队友造成一种上进的心理,比如说在这局游戏中我没有获胜就会去查看攻略或者了解游戏的操作多多练习对别人也会在兴趣上多一点对不了解的事物多花点时间进行了解.","slug":"不要在游戏中输掉了你的素质","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j3q002rq623q6ohh90q"},{"title":"一切恢复","date":"2014-06-29T14:52:02.000Z","id":"325","_content":"\n最近看完路遥《平凡的世界》这部长篇小说,这部小说描述的是一群平凡的人们其中有农民、政府官员所经历的一切其中包括也每个人事业、亲情、爱情,也因为外部当时中国社会景象,如文化大革命、土地私有化等政策对这群人的影响以及对当时中国农村社会面貌的改变.\n> **每个人生活同样是一个世界，即使最平凡的人，也得要为他那个世界的存在而战斗。**\n就像其中所描述的那样即使最平凡的人也有他活在这个世界上的意义,每个单独的生物都有它存在这个世界上的意义也只有它自己才能去走出这短暂人生路途并赋予它的意义.我们都有过青春、激情也都在为不同的目标去努力和奋斗.\n\n&nbsp;\n\n<!--more-->\n> **人活在世界上有多少幸福又有多少苦难，生活不能等待别人来安排,要自己去争取和奋斗,而不论其结果是喜是悲，但可以慰籍的是，你总不枉在这个世界上活了一场.**\n孙玉厚家的两小子因为自己的奋斗追寻自己人生的意义而让全家人不在受饥饿的煎熬,让整个家族因此在整个公社都有了“面子”,最后也因为他们兄弟对人生的追求不一样各自去满怀信心的去追求他们的梦想,虽说其中遇见过各种不同的挫折.\n> **幸福，或者说生存的价值，并不在于我们从事什么样的工作。在无数艰难困苦之中，又何尝不包含人生的幸福 ？**\n最遗憾的是老天嫉妒普通人得到甜蜜爱情一样总是让他们不能在一起.比如:孙少安和田润叶的爱情因为对方还存在着传统的思想本来是一对青梅竹马的爱情,虽说最终都各自的得到了他们的幸福.田晓霞和孙少平的这段在当时传统的中国社会来说门不当户不对的爱情但他们是那么的深爱着对方,那么单纯的爱情，结果让田晓霞失去了生命.\n> **爱情，应该真正建立在现实生活坚实的基础上，否则它就是在活生生的生活之树上盛开一朵不结果实的花.**\n是呀有多少爱情因为没有坚实的生活基础而最终土崩瓦解,不管当初是多么的情深似海最终的结局都是那么的让人有点悲伤.社会就是如此!!!\n> **青年！无论怎样的挫折和打击，都要咬着牙关挺住,因为你们完全有机会重建生活;只要不灰心丧气，每一次挫折就只不过是通往新境界的一块普通的绊脚石,而绝不会致人于死命。人啊,忍、韧、仁....**\n在赋予这个平凡世界的意义中总是会遇见不同的挫折和绊脚石,也要紧牙关“忍、韧、仁”,工作日的早晨和往常一样拖着疲惫的身体起床上班，感觉这一切都是那么的熟悉,在休息了3个多月的时间里各种心情的起伏也因为忙碌而一切烟消云散了,只是奔向的目的地不一样而已.已经半个多月的忙碌时间使得不能停下脚步来思考这一切的意义,也许是因为闲暇日子的孤独和焦虑让我也体会到了得到的东西需要珍惜不想轻易的失去.忙碌的去赋予自己那个平凡的世界.\n\n&nbsp;\n\n&nbsp;","source":"_posts/一切恢复.md","raw":"title: \"一切恢复\"\ndate: 2014-06-29 22:52:02\ntags:\nid: 325\ncategories:\n  - 读书笔记\n---\n\n最近看完路遥《平凡的世界》这部长篇小说,这部小说描述的是一群平凡的人们其中有农民、政府官员所经历的一切其中包括也每个人事业、亲情、爱情,也因为外部当时中国社会景象,如文化大革命、土地私有化等政策对这群人的影响以及对当时中国农村社会面貌的改变.\n> **每个人生活同样是一个世界，即使最平凡的人，也得要为他那个世界的存在而战斗。**\n就像其中所描述的那样即使最平凡的人也有他活在这个世界上的意义,每个单独的生物都有它存在这个世界上的意义也只有它自己才能去走出这短暂人生路途并赋予它的意义.我们都有过青春、激情也都在为不同的目标去努力和奋斗.\n\n&nbsp;\n\n<!--more-->\n> **人活在世界上有多少幸福又有多少苦难，生活不能等待别人来安排,要自己去争取和奋斗,而不论其结果是喜是悲，但可以慰籍的是，你总不枉在这个世界上活了一场.**\n孙玉厚家的两小子因为自己的奋斗追寻自己人生的意义而让全家人不在受饥饿的煎熬,让整个家族因此在整个公社都有了“面子”,最后也因为他们兄弟对人生的追求不一样各自去满怀信心的去追求他们的梦想,虽说其中遇见过各种不同的挫折.\n> **幸福，或者说生存的价值，并不在于我们从事什么样的工作。在无数艰难困苦之中，又何尝不包含人生的幸福 ？**\n最遗憾的是老天嫉妒普通人得到甜蜜爱情一样总是让他们不能在一起.比如:孙少安和田润叶的爱情因为对方还存在着传统的思想本来是一对青梅竹马的爱情,虽说最终都各自的得到了他们的幸福.田晓霞和孙少平的这段在当时传统的中国社会来说门不当户不对的爱情但他们是那么的深爱着对方,那么单纯的爱情，结果让田晓霞失去了生命.\n> **爱情，应该真正建立在现实生活坚实的基础上，否则它就是在活生生的生活之树上盛开一朵不结果实的花.**\n是呀有多少爱情因为没有坚实的生活基础而最终土崩瓦解,不管当初是多么的情深似海最终的结局都是那么的让人有点悲伤.社会就是如此!!!\n> **青年！无论怎样的挫折和打击，都要咬着牙关挺住,因为你们完全有机会重建生活;只要不灰心丧气，每一次挫折就只不过是通往新境界的一块普通的绊脚石,而绝不会致人于死命。人啊,忍、韧、仁....**\n在赋予这个平凡世界的意义中总是会遇见不同的挫折和绊脚石,也要紧牙关“忍、韧、仁”,工作日的早晨和往常一样拖着疲惫的身体起床上班，感觉这一切都是那么的熟悉,在休息了3个多月的时间里各种心情的起伏也因为忙碌而一切烟消云散了,只是奔向的目的地不一样而已.已经半个多月的忙碌时间使得不能停下脚步来思考这一切的意义,也许是因为闲暇日子的孤独和焦虑让我也体会到了得到的东西需要珍惜不想轻易的失去.忙碌的去赋予自己那个平凡的世界.\n\n&nbsp;\n\n&nbsp;","slug":"一切恢复","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j3u002uq62358imvsa4"},{"title":"《把时间当成朋友》- 估算时间","date":"2015-06-19T14:08:52.000Z","_content":"\n\n再次看李笑来老师的[《把时间当成朋友》](http://book.douban.com/subject/3609132/ \"把时间当成朋友\")估算时间的章节印象很深刻这里简单的做一个记录吧。讲的就是我们在估算任务的时间的时候为什么总是不能按实际估算出的时间内完成任务,其中说了我们在估算时间的时候都比较大意的没有考虑到任务的复杂度.因为我们总是拿自己以前的经验或者是以前完成类似任务的时间来计划完成时间,这样就导致一个问题忽略了任务的复杂度,没有对任务本质的一个清楚的认识和明确的分类.\n\n<!-- more -->\n\n## 过去经验的思考\n其实在实际的工作和生活中我们也是往往比较盲目的根据以往经验获取一个任务的预估完成时间并没有考虑这个任务的其他因素.这也是思维上的一个懒惰的表现,因为我们不愿意过多的去获取和任务相关联的其他信息。\n\n## 如何避免盲目的估算任务的完成时间呢？\n可以在做任务计划的时候对任务本质做一个清晰的认识,可以使用问自己这个任务是是什么？为什么要完成它？以及在哪儿完成？通过什么样的方式来完它？它和谁相关等问题来得出任务的本质,然后在根据自己目前的能力情况得出这个任务的复杂度,其实估算一个任务的时间是蛮主观的,因为只有你自己知道你的能力有多大.\n* 简单的任务\n  可以根据以往类似的任务完成的时间来预估。\n* 复杂的任务\n  可以对任务进行分解直到得到每个小任务需要花费的预估时间之和.\n\n","source":"_posts/《把时间当成朋友》- 估算时间.md","raw":"title: \"《把时间当成朋友》- 估算时间\"\ndate: 2015-06-19 22:08:52\ntags: 时间管理\ncategories: 读书笔记\n---\n\n\n再次看李笑来老师的[《把时间当成朋友》](http://book.douban.com/subject/3609132/ \"把时间当成朋友\")估算时间的章节印象很深刻这里简单的做一个记录吧。讲的就是我们在估算任务的时间的时候为什么总是不能按实际估算出的时间内完成任务,其中说了我们在估算时间的时候都比较大意的没有考虑到任务的复杂度.因为我们总是拿自己以前的经验或者是以前完成类似任务的时间来计划完成时间,这样就导致一个问题忽略了任务的复杂度,没有对任务本质的一个清楚的认识和明确的分类.\n\n<!-- more -->\n\n## 过去经验的思考\n其实在实际的工作和生活中我们也是往往比较盲目的根据以往经验获取一个任务的预估完成时间并没有考虑这个任务的其他因素.这也是思维上的一个懒惰的表现,因为我们不愿意过多的去获取和任务相关联的其他信息。\n\n## 如何避免盲目的估算任务的完成时间呢？\n可以在做任务计划的时候对任务本质做一个清晰的认识,可以使用问自己这个任务是是什么？为什么要完成它？以及在哪儿完成？通过什么样的方式来完它？它和谁相关等问题来得出任务的本质,然后在根据自己目前的能力情况得出这个任务的复杂度,其实估算一个任务的时间是蛮主观的,因为只有你自己知道你的能力有多大.\n* 简单的任务\n  可以根据以往类似的任务完成的时间来预估。\n* 复杂的任务\n  可以对任务进行分解直到得到每个小任务需要花费的预估时间之和.\n\n","slug":"《把时间当成朋友》- 估算时间","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j3w002wq623nf5rymy2"},{"title":"git submodule使用总结","date":"2015-08-09T13:16:32.000Z","_content":"\n近一个星期公司项目由于需要使用git submodule来管理不同的子项目,自己对仅限了解add 、update、init进一步了解了对不同子项目代码的工作流作一个总结.\n<!-- more -->\n### Git Submodule相关命令\n\n<pre>\n#增加子模块\n $ git submodule add  远程地址 本地存放目录\n\n#浏览项目的子模块\n$ git submodule\n\n#对所有子模块进行相同的操作\n$ git submodule foreach 命令\n   比如: git submodule foreach git pull #这里是抓取所有子模块的最新版本\n#初始化子模块\n$ git submodule init\n#对子模块进行更新操作\n$ git submodule update\nPS: 这个命令的时候需要确保子模块中没有修改\n#切换所有子模块的分支\n$ git submodule foreach git checkout -b 分支名\n</pre>\n\n###修改子模块内容操作\n对子模块内容修改一种方法是可以重新git clone 一份项目进行修改，然后在相对应的引用项目内update。另一种方法需要进入子模块的目录然后进行相应的git add & commit & push提交来确保更新到相应的子模块项目库中.这里需要注意一点就是如果子模块中做咯相应的修改在引用子模块的项目中也需要在此提交来更改引用项目对子模块进行引用的HAS记录值。\n\n\n","source":"_posts/git-submodule使用总结.md","raw":"title: \"git submodule使用总结\"\ndate: 2015-08-09 21:16:32\ntags: git\ncategories: 技术工具\n---\n\n近一个星期公司项目由于需要使用git submodule来管理不同的子项目,自己对仅限了解add 、update、init进一步了解了对不同子项目代码的工作流作一个总结.\n<!-- more -->\n### Git Submodule相关命令\n\n<pre>\n#增加子模块\n $ git submodule add  远程地址 本地存放目录\n\n#浏览项目的子模块\n$ git submodule\n\n#对所有子模块进行相同的操作\n$ git submodule foreach 命令\n   比如: git submodule foreach git pull #这里是抓取所有子模块的最新版本\n#初始化子模块\n$ git submodule init\n#对子模块进行更新操作\n$ git submodule update\nPS: 这个命令的时候需要确保子模块中没有修改\n#切换所有子模块的分支\n$ git submodule foreach git checkout -b 分支名\n</pre>\n\n###修改子模块内容操作\n对子模块内容修改一种方法是可以重新git clone 一份项目进行修改，然后在相对应的引用项目内update。另一种方法需要进入子模块的目录然后进行相应的git add & commit & push提交来确保更新到相应的子模块项目库中.这里需要注意一点就是如果子模块中做咯相应的修改在引用子模块的项目中也需要在此提交来更改引用项目对子模块进行引用的HAS记录值。\n\n\n","slug":"git-submodule使用总结","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j3y0030q623i931itoi"},{"title":"libcurl库相关接口及其用法","date":"2015-10-18T12:39:11.000Z","_content":"\n最近在做公司项目的时候需要在客户端中实现图片数据进行HTTP上传的一个需求,发现cocos2d-x中的HTTPClient实现起来甚是难用.最终使用curl库来实现相应的需求发现真是一切都是那么的美好,这里只记录下curl使用过程相对应的接口.   \n<!--more-->\n## Easy 和Multi的区别\n* easy相关的接口是同步阻塞式的处理相对应的请求,优点在于它简单很快的实现\n* Multi相关接口是异步处理,异步处理会及时对请求做出返回不会对线程进行阻塞.\n\n## 使用流程\n   在开始初始化全局的请求环境,然后通过curl_*_init获取相对应的handle,在初始化对应的请求头数据.然后 'curl_*_opt'设置相对应的返回回调函数和对应的网页头数据,curl_formadd接口设置对应请求所需要的数据.然后通过curl_perform对handle进行请求，在判断请求的结果，释放相关的请求数据和handle,如果不需要再次请求需要释放初始化的全局环境curl_globale_clean.\n\n## 相关接口\n* curl_global_init\n  对curl请求环境进行初始化\n* curl_easy_init()\n  获取一个请求的handle\n* curl_easy_cleanup()\n  清理相应的请求handle\n* curl_easy_setopt()\n  设置相应的请求参数,不如请求的网页头,及请求的数据类型.及请求返回的相关回调函数.\n* curl_easy_perform()\n  对参数设置的handle进行一次请求,这个接口一般在请求头和请求数据,设置完成后调用。\n* curl_easy_getinfo()\n  获取handle的相关信息\n* curl_formadd()\n  设置请求的数据及其数据类型\n* curl_formfree()\n  释放请求数据指针\n* curl_slist_append()\n  设置请求体头数据\n* curl_slist_free_all()\n  释放请求的头数据\n* curl_version()\n  返回当前使用库相关版本的信息·\n## 相关资料 \n* [CURL and libcurl](http://curl.haxx.se/)\n\n\n","source":"_posts/curl库的用法.md","raw":"title: \"libcurl库相关接口及其用法\"\ndate: 2015-10-18 20:39:11\ntags: [C++ , cocos2d-x]\ncategories: 编程技术\n---\n\n最近在做公司项目的时候需要在客户端中实现图片数据进行HTTP上传的一个需求,发现cocos2d-x中的HTTPClient实现起来甚是难用.最终使用curl库来实现相应的需求发现真是一切都是那么的美好,这里只记录下curl使用过程相对应的接口.   \n<!--more-->\n## Easy 和Multi的区别\n* easy相关的接口是同步阻塞式的处理相对应的请求,优点在于它简单很快的实现\n* Multi相关接口是异步处理,异步处理会及时对请求做出返回不会对线程进行阻塞.\n\n## 使用流程\n   在开始初始化全局的请求环境,然后通过curl_*_init获取相对应的handle,在初始化对应的请求头数据.然后 'curl_*_opt'设置相对应的返回回调函数和对应的网页头数据,curl_formadd接口设置对应请求所需要的数据.然后通过curl_perform对handle进行请求，在判断请求的结果，释放相关的请求数据和handle,如果不需要再次请求需要释放初始化的全局环境curl_globale_clean.\n\n## 相关接口\n* curl_global_init\n  对curl请求环境进行初始化\n* curl_easy_init()\n  获取一个请求的handle\n* curl_easy_cleanup()\n  清理相应的请求handle\n* curl_easy_setopt()\n  设置相应的请求参数,不如请求的网页头,及请求的数据类型.及请求返回的相关回调函数.\n* curl_easy_perform()\n  对参数设置的handle进行一次请求,这个接口一般在请求头和请求数据,设置完成后调用。\n* curl_easy_getinfo()\n  获取handle的相关信息\n* curl_formadd()\n  设置请求的数据及其数据类型\n* curl_formfree()\n  释放请求数据指针\n* curl_slist_append()\n  设置请求体头数据\n* curl_slist_free_all()\n  释放请求的头数据\n* curl_version()\n  返回当前使用库相关版本的信息·\n## 相关资料 \n* [CURL and libcurl](http://curl.haxx.se/)\n\n\n","slug":"curl库的用法","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j400034q623cj95h5uq"},{"title":"cocos2d-x中lua层调用Object-C和Java中接口的方法","date":"2015-08-30T12:00:41.000Z","_content":"\n在cocos2d-x lua框架生成项目目录src/cocos/cocos2d/luaj.lua和luaoc.lua两个文件，在项目中使用一个公共的lua文件通过device.platform进行对ios和android平台的管理进行相应的选择需要调用的接口.\n在文件中分别提供了一个callStaticMethod的接口来对需要调用接口的调用.接口分为三个参数:类名,方法名,和参数.\n\n在cocos2d-x lua项目中新建一个platformBridge.lua文件来对不同平台调用进行管理，lua文件代码如下：\n<!-- more -->\n<pre>\n function platformBridge()\n   local result = {}\n     if device.platform == \"ios\" then\n        result.ios = import(\"cocos.cocos2d.luaoc\")\n\tend\n\tif device.platform == \"android\" then\n\t    result.android = import(\"cocos.cocos2d.luaj\")\n\tend\n\treturn result\nend\n\n --在其他文件中使用,这样就可以同个一个变量来对不同平台调用进行管理\n local bridgeLua = import(\"platformBridge\")[device.platform]\n bridgeLua.callStaticMethod(\"类名\",\"接口名\",\"调用的参数\")\n</pre>\n\n调用Object-C和Java接口cocos2d-x都是通过C++来做中转调用的.具体的实现细节参考cocos2d-x框架目录cocos/scripting/lua-bindings/manual/platform/中ios和anroid目录下的代码.\n","source":"_posts/cocos2d-x中lua层调用Object-C和Java中接口的方法.md","raw":"title: \"cocos2d-x中lua层调用Object-C和Java中接口的方法\"\ndate: 2015-08-30 20:00:41\ntags: [cocos2d-x,Lua]\ncategories: [游戏开发]\n---\n\n在cocos2d-x lua框架生成项目目录src/cocos/cocos2d/luaj.lua和luaoc.lua两个文件，在项目中使用一个公共的lua文件通过device.platform进行对ios和android平台的管理进行相应的选择需要调用的接口.\n在文件中分别提供了一个callStaticMethod的接口来对需要调用接口的调用.接口分为三个参数:类名,方法名,和参数.\n\n在cocos2d-x lua项目中新建一个platformBridge.lua文件来对不同平台调用进行管理，lua文件代码如下：\n<!-- more -->\n<pre>\n function platformBridge()\n   local result = {}\n     if device.platform == \"ios\" then\n        result.ios = import(\"cocos.cocos2d.luaoc\")\n\tend\n\tif device.platform == \"android\" then\n\t    result.android = import(\"cocos.cocos2d.luaj\")\n\tend\n\treturn result\nend\n\n --在其他文件中使用,这样就可以同个一个变量来对不同平台调用进行管理\n local bridgeLua = import(\"platformBridge\")[device.platform]\n bridgeLua.callStaticMethod(\"类名\",\"接口名\",\"调用的参数\")\n</pre>\n\n调用Object-C和Java接口cocos2d-x都是通过C++来做中转调用的.具体的实现细节参考cocos2d-x框架目录cocos/scripting/lua-bindings/manual/platform/中ios和anroid目录下的代码.\n","slug":"cocos2d-x中lua层调用Object-C和Java中接口的方法","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j43003aq6233m82blhc"},{"title":"CentOS7.0 LAMP","date":"2015-04-04T06:12:03.000Z","id":"484","_content":"\n* Setting the Hostname:\nhostnamectl set-hostname plato\n\n** CentOS6\necho “HOSTNAME=plato” &gt;&gt; /etc/sysconfig/network\nhostname “plato”\n\n* Update /etc/hosts\n12.34.56.78 plato.example.com plato\n<span id=\"more-5\"></span>\n\n* Setting the timezone\nlist timezone\ntimedatectl list-timezones\nsetting\ntimedatectl set-timezone Asia/Shanghai\n\n<!--more-->* Checking the Time\n$ date\n\n* Installing software updates\nyum update\n\n* Install and Configure Apchae Web Server\n$sudo yum install httpd\n** backup configure\n$ cp /etc/httpd/conf/httpd.conf ~/httpd.conf.backup\n** enable apache and boot run first time\n$ sudo /bin/systemctl enable httpd.service\n$ sudo /bin/systemctl start httpd.service\n$ systemctl restart httpd.service\n* install and configure mariaDB Database server\nsystemctl start vsftpd.service\n\n$ sudo yum install mariadb-server\n** Install\n1\\. sudo yum install mariadb-server\n2\\. sudo /bin/systemctl enable mariadb.service\n3\\. sudo /bin/systemctl start mariadb.service\n4\\. cp /etc/my.cnf ~/my.cnf.backup\n** Configure MariaDB and Set Up MariaDB databases\n1\\. mysql_secure_installation\n2\\. mysql -u root -p\n3\\. create new database\ncreate database example_database_name;\ngrant all on example_database_name.* to ‘example_user’@’localhost’ identified by ‘example_password';\n* Install and configuring php\n1\\. sudo yum install php php-pear\n2\\. emacs /etc/php.ini\nerror_log = /var/log/php/error.log\n3\\. sudo mkdir /var/log/php\nsudo chown apache /var/log/php\n4\\. sudo yum install php-mysql\n5\\. sudo /bin/systemctl reload httpd\nyum -y install php-gd\nyum -y install php-mbstring\n\n* add system user and configure permissions\n– adduser username\n– passwd username #change password\n– edite permissions\n$visudo\n## Allow root to run any commands anywhere\nroot ALL=(ALL) ALL\nuser ALL=(ALL) ALL","source":"_posts/centos7-0-lamp.md","raw":"title: \"CentOS7.0 LAMP\"\ndate: 2015-04-04 14:12:03\ntags:\nid: 484\ncategories:\n  - 技术工具\n---\n\n* Setting the Hostname:\nhostnamectl set-hostname plato\n\n** CentOS6\necho “HOSTNAME=plato” &gt;&gt; /etc/sysconfig/network\nhostname “plato”\n\n* Update /etc/hosts\n12.34.56.78 plato.example.com plato\n<span id=\"more-5\"></span>\n\n* Setting the timezone\nlist timezone\ntimedatectl list-timezones\nsetting\ntimedatectl set-timezone Asia/Shanghai\n\n<!--more-->* Checking the Time\n$ date\n\n* Installing software updates\nyum update\n\n* Install and Configure Apchae Web Server\n$sudo yum install httpd\n** backup configure\n$ cp /etc/httpd/conf/httpd.conf ~/httpd.conf.backup\n** enable apache and boot run first time\n$ sudo /bin/systemctl enable httpd.service\n$ sudo /bin/systemctl start httpd.service\n$ systemctl restart httpd.service\n* install and configure mariaDB Database server\nsystemctl start vsftpd.service\n\n$ sudo yum install mariadb-server\n** Install\n1\\. sudo yum install mariadb-server\n2\\. sudo /bin/systemctl enable mariadb.service\n3\\. sudo /bin/systemctl start mariadb.service\n4\\. cp /etc/my.cnf ~/my.cnf.backup\n** Configure MariaDB and Set Up MariaDB databases\n1\\. mysql_secure_installation\n2\\. mysql -u root -p\n3\\. create new database\ncreate database example_database_name;\ngrant all on example_database_name.* to ‘example_user’@’localhost’ identified by ‘example_password';\n* Install and configuring php\n1\\. sudo yum install php php-pear\n2\\. emacs /etc/php.ini\nerror_log = /var/log/php/error.log\n3\\. sudo mkdir /var/log/php\nsudo chown apache /var/log/php\n4\\. sudo yum install php-mysql\n5\\. sudo /bin/systemctl reload httpd\nyum -y install php-gd\nyum -y install php-mbstring\n\n* add system user and configure permissions\n– adduser username\n– passwd username #change password\n– edite permissions\n$visudo\n## Allow root to run any commands anywhere\nroot ALL=(ALL) ALL\nuser ALL=(ALL) ALL","slug":"centos7-0-lamp","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j45003gq623e14dpwwd"},{"title":"ZeroBrane Studio自定义代码提示","date":"2015-08-11T13:22:15.000Z","_content":"\n\n近来被cocos code ide来调试和开发cocos2d-x for lua项目搞的确实的比较蛋疼，真心不想在这里吐槽目前官方团队发布的版本是多么的难用,在前段时间实在忍无可忍的情况下在QQ群里问了一下最新的cocos code ide 什么时候发布得到的答案是9月份,在卡顿和各种系统下各种疑难杂症的情况下,不能让这样的工具来影响自己的开发效率,我也最终放弃使用cocos code ide改到比较老一点的ZeroBrane Studio下去开发脚本了,其实这个工具比较轻量级也不会卡顿,唯一的缺憾是不支持cocos2d-x api代码提示,也想了下直接通过官方的文档然后写个脚本支持来扩展对cocos2d-x api的支持.对学习zerobrane studio自定义代码提示做一个简短的记录.\n<!--more-->\n### 需要提示的API文件格式\n需要提示api文件如下：\n\n```\n{\n   {\n   test = {\n   \t\t\ttype=\"lib or class/function\",\n   \t\t\tdescription=\"这里是描述\",\n   \t\t\targs=\"(参数逗号分割)\",\n   \t\t\treturns=\"(返回的类型)\",\n   \t\t\tchilds={ --这里是类型包含的子函数或值\n   \t\t\t\tbar = {\n   \t\t\t\t\ttype=\"function\",\n   \t\t\t\t\tdescription=\"这里是方法的描述\",\n   \t\t\t\t\tvaluetype=\"返回值的类型\",\n   \t\t\t\t\t\n   \t\t\t\t}\n   \t\t\t},\n   \t\t\tinherits=\"父类型\"\n\t\t\n    \n     }\n   }\n}\n\n```\n\n\n###api lua文件 table键值介绍：\n对应自定义lua文件可使用table键描述\n * type: 类型值如下\n \t* keyword: 需要描述语言的关键字符,如：do 、end\n \t* class and lib: 一组包含方法和属性的类型 \n \t* value: 描述值可以是一个常量\n \t* function:接受参数的函数来描述(args)和返回值(返回)\n \t* method:描述方法调用；方法类似于函数，也接受参数和返回值和值类型。唯一的区别是，method是在打\":\"时提示,而function是在打\".\"和\":\"后提示。\n * description: 方法或类的注释简短说明\n * args(可选): 字符串参数 如：”(file:file)“\n * returns(可选): 字符串，返回值类型,如：\"(boolean|nil)\"\n * childs(可选):table类型,当前模块或类所包含的子类或方法\n * valuetype(可选):字符串，返回值的类型\n * inherits(可选): 字符串,当前模块继承的模块\n\n \t\n### 引用自定的API lua文件\n\n在安装程序interpreters/目录下创建lua文件，如interpresters/Cocos2d.lua,然后在其中api健对应table值中增加\"cocos2d\":\n\n```\n\treturn {\n\t\tname=\"Cocos2d-x\",\n\t\tdescription = \"这里是一个cocos2d-x api\",\n\t\tapi={\"cocos2d\",\"baselib\"},\n\t\t......\n\t}\n```\n\n\n### 参考资料\n[Adding API and auto-complete description](http://studio.zerobrane.com/doc-api-auto-complete)\n","source":"_posts/ZeroBrane-Studio自定义代码提示.md","raw":"title: \"ZeroBrane Studio自定义代码提示\"\ndate: 2015-08-11 21:22:15\ntags: [Lua, cocos2d-x]\ncategories: 技术工具\n---\n\n\n近来被cocos code ide来调试和开发cocos2d-x for lua项目搞的确实的比较蛋疼，真心不想在这里吐槽目前官方团队发布的版本是多么的难用,在前段时间实在忍无可忍的情况下在QQ群里问了一下最新的cocos code ide 什么时候发布得到的答案是9月份,在卡顿和各种系统下各种疑难杂症的情况下,不能让这样的工具来影响自己的开发效率,我也最终放弃使用cocos code ide改到比较老一点的ZeroBrane Studio下去开发脚本了,其实这个工具比较轻量级也不会卡顿,唯一的缺憾是不支持cocos2d-x api代码提示,也想了下直接通过官方的文档然后写个脚本支持来扩展对cocos2d-x api的支持.对学习zerobrane studio自定义代码提示做一个简短的记录.\n<!--more-->\n### 需要提示的API文件格式\n需要提示api文件如下：\n\n```\n{\n   {\n   test = {\n   \t\t\ttype=\"lib or class/function\",\n   \t\t\tdescription=\"这里是描述\",\n   \t\t\targs=\"(参数逗号分割)\",\n   \t\t\treturns=\"(返回的类型)\",\n   \t\t\tchilds={ --这里是类型包含的子函数或值\n   \t\t\t\tbar = {\n   \t\t\t\t\ttype=\"function\",\n   \t\t\t\t\tdescription=\"这里是方法的描述\",\n   \t\t\t\t\tvaluetype=\"返回值的类型\",\n   \t\t\t\t\t\n   \t\t\t\t}\n   \t\t\t},\n   \t\t\tinherits=\"父类型\"\n\t\t\n    \n     }\n   }\n}\n\n```\n\n\n###api lua文件 table键值介绍：\n对应自定义lua文件可使用table键描述\n * type: 类型值如下\n \t* keyword: 需要描述语言的关键字符,如：do 、end\n \t* class and lib: 一组包含方法和属性的类型 \n \t* value: 描述值可以是一个常量\n \t* function:接受参数的函数来描述(args)和返回值(返回)\n \t* method:描述方法调用；方法类似于函数，也接受参数和返回值和值类型。唯一的区别是，method是在打\":\"时提示,而function是在打\".\"和\":\"后提示。\n * description: 方法或类的注释简短说明\n * args(可选): 字符串参数 如：”(file:file)“\n * returns(可选): 字符串，返回值类型,如：\"(boolean|nil)\"\n * childs(可选):table类型,当前模块或类所包含的子类或方法\n * valuetype(可选):字符串，返回值的类型\n * inherits(可选): 字符串,当前模块继承的模块\n\n \t\n### 引用自定的API lua文件\n\n在安装程序interpreters/目录下创建lua文件，如interpresters/Cocos2d.lua,然后在其中api健对应table值中增加\"cocos2d\":\n\n```\n\treturn {\n\t\tname=\"Cocos2d-x\",\n\t\tdescription = \"这里是一个cocos2d-x api\",\n\t\tapi={\"cocos2d\",\"baselib\"},\n\t\t......\n\t}\n```\n\n\n### 参考资料\n[Adding API and auto-complete description](http://studio.zerobrane.com/doc-api-auto-complete)\n","slug":"ZeroBrane-Studio自定义代码提示","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j48003iq623b3sr7eb4"},{"layout":"posts","title":"WebP图片文件格式的了解总结","date":"2015-06-17T13:17:47.000Z","_content":"\n前段时间看了一篇文章说某公司自研游戏引擎使用webp文件格式来处理图片资源,查看了一下cocos2d-x框架也是对这种图片格式的解码操作也是支持的，也就多少的算是对WebP图片文件格式的一个基本了解并作如下总结。\n<!-- more -->\n## WebP格式文件是什么？\n在2010年由google开发并发布的一种同时提供有损压缩与无损压缩的图片文件格式,目标是减少图片文件大小并达到和JPGE格式相同的图片质量,减少图片文件在网络上的发送时间.\n\n## 怎么转换图片资源到WebP格式\n\n以MAC OS为例：\n\n```\n$ brew install webp\n$ cwebp source.png -o target.webp #转换图片资源为webp,支持图片格式PNG或JPG\n$ vwebp target.webp #查看webp格式文件\n$ dwebp source.webp -o target.png #转换webp文件为JPG或PNG\n\n```\n## 关于在游戏中使用的一些思考\nWebP图片的优点是减少app包体的大小,缺点是：AIO解码的时候比png或jpg慢,就会导致读取图片数据时间更长会影响游戏的体验性.个人认为不要在游戏中大规模的使用Webp图片仅仅对比较大的一些图片资源进行转换并牺牲一点时间换取包体的大小还是值得的.比如：游戏战斗界面中的背景图等.\n\n## 相关资料\nhttp://isux.tencent.com/introduction-of-webp.html\nhttps://zh.wikipedia.org/wiki/WebP\nhttps://developers.google.com/speed/webp/\n\n--------EOF--------","source":"_posts/WebP图片文件格式的了解总结.md","raw":"layout: posts\ntitle: \"WebP图片文件格式的了解总结\"\ndate: 2015-06-17 21:17:47\ncategories: 游戏开发\ntags: 图片资源\n---\n\n前段时间看了一篇文章说某公司自研游戏引擎使用webp文件格式来处理图片资源,查看了一下cocos2d-x框架也是对这种图片格式的解码操作也是支持的，也就多少的算是对WebP图片文件格式的一个基本了解并作如下总结。\n<!-- more -->\n## WebP格式文件是什么？\n在2010年由google开发并发布的一种同时提供有损压缩与无损压缩的图片文件格式,目标是减少图片文件大小并达到和JPGE格式相同的图片质量,减少图片文件在网络上的发送时间.\n\n## 怎么转换图片资源到WebP格式\n\n以MAC OS为例：\n\n```\n$ brew install webp\n$ cwebp source.png -o target.webp #转换图片资源为webp,支持图片格式PNG或JPG\n$ vwebp target.webp #查看webp格式文件\n$ dwebp source.webp -o target.png #转换webp文件为JPG或PNG\n\n```\n## 关于在游戏中使用的一些思考\nWebP图片的优点是减少app包体的大小,缺点是：AIO解码的时候比png或jpg慢,就会导致读取图片数据时间更长会影响游戏的体验性.个人认为不要在游戏中大规模的使用Webp图片仅仅对比较大的一些图片资源进行转换并牺牲一点时间换取包体的大小还是值得的.比如：游戏战斗界面中的背景图等.\n\n## 相关资料\nhttp://isux.tencent.com/introduction-of-webp.html\nhttps://zh.wikipedia.org/wiki/WebP\nhttps://developers.google.com/speed/webp/\n\n--------EOF--------","slug":"WebP图片文件格式的了解总结","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"photos":[],"link":"","_id":"cis400j4b003mq623pi52gt9x"},{"title":"OpenGL ES中的顶点数组、顶点属性、缓冲区对象","date":"2015-05-31T09:29:23.000Z","_content":"##什么是顶点数据？\n在计算机中图元的位置是通过x,y,z,w来存储或颜色数据是通过RGBA的数组格式存储的,然后通过多个点来进行图元装配和光栅化出图形.比如三角形3个点使用X,Y,Z表示如下:\n<!--more-->\n<pre>\n  GLfloat vertex[]={\n\t\t\t0.0f,1.0f,1.0f, //x,y,z\n\t\t\t1.0f,0.5f,1.0f,\n\t\t\t0.0f,0.5f,1.0f\t\t\t\n\t\t\t}\n\n</pre>\n\n## 顶点属性数组\n顶点属性数组对象就是存储在应用程序缓冲区的顶点数据,又分两种方式来分配和存储顶点属性数组：结构数组和数据结构,结构数组就是所有顶点数据使用一个数组来存储数据,把位置、颜色、法线、纹理UV坐标等数据放进一个数组结构中.数组结构就是把每个数据通过不同的数组结构存放顶点数据.结构数组的效率要高于数组结构,因为在通过结构数组的方式访问顶点数据是按照在内存中的顺序来访问的.缺点是修改了其中的数据必须重新更新已经保存在缓冲区中数据的跨距.\n\n\n```\n#define VERTEX_POS_INDX 0\n#define VERTEX_POS_SIZE 3\n\n#define VERTEX_COLOR_INDX 1\n#define VERTEX_COLOR_SIZE 4\n\n#define VERTEX_ATTRIB_SIZE (VERTEX_POS_SIZE+VERTEX_COLOR_SIZE)\n\nGLfloat vertex[]={\n                        0.0f,1.0f,1.0f, //x,y,z\n\t\t\t1.0f,0.0f,0.0f,1.0f, //RGBA\n\t\t\t1.0f,0.5f,1.0f,\n\t\t\t0.0f,1.0f,0.0f,1.0f,\n\t\t\t0.0f,0.5f,1.0f,\n\t\t\t0.0f,0.0f,1.0f,1.0f\n\t\t }\n//设置顶点位置属性数据数组\nglVertexAttribPointer(VERTEX_POS_INDX,VERTEX_POS_SIZE,GL_FLOAT,GL_FALSE,VERTEX_ATTRIB_SIZE*sizeof(GLfloat),vertex);\n//设置颜色属性数据数组\nglVertexAttribPointer(VERTEX_COLOR_INDX,VERTEX_COLOR_SIZE,GL_FLOAT,GL_FALSE,(VERTEX_ATTRIB_SIZE*sizeof(GLfloat),vertex+VERTEX_POS_SIZE));\n//启用顶点数组数据\nglEableVertexAttribArray(VERTEX_POS_INDE);\nglEnableVertexAttribArray(VERTEX_COLOR_INDE);\n//根据顶点数据绘制三角形\nglDrawArrays(GL_TRIANGLES,0,3);\n//禁用顶点数组数据\nglDisableVertexAttribArray(VERTEX_POS_INDE);\nglDisableVertexAttribArray(VERTEX_COLOR_INDE);\n```\n\n\n## 顶点缓冲区对象\n简单点说就是把图形顶点数据和索引数据缓存在图形设备内存GPU中,改善每次绘制图形都要复制应用程序中的顶点数据.缓冲区顶点数据对象分为两种:1.图元索引数据(GL_ELEMENT_ARRAY_BUFFER）和顶点数据(GL_ARRAY_BUFFER).\n\n###使用缓冲冲区顶点对象的步骤：\n\t1. 分配缓冲区对象:glGenBuffer\n\t2. 绑定缓冲区对象:glBindBuffer,第一次调用为分配空间，以后调用都是使用缓冲区对象.\n\t3. 存储数据到缓冲区对象: glBufferData\n\t4. 删除缓冲区对象:glDeleteBuffers,在不需要使用缓冲区对象的时候删除.\n\n拿上边三角形的顶点数组数据来说,代码如下:\n```\n\t......................\n\t\n\tGLunit buffer[2];\n\tglGenBuffer(2,&buffer);\n\t//绑定顶点数据到缓冲区对象\n\tglBindBuffer(GL_ARRAY_BUFFER,buffer[0]);\n\tglBufferData(GL_ARRAY_BUFFER,sizeof(vertex),vertex,GL_STATIC_DRAW);\n\t//绑定顶点索引数据到缓冲区对象\n\tGLShort indices[3]={0,1,2};\n\tglBindBuffer(GL_ELEMENTS_ARRAY_BUFFER,buffer[1]);\n\tglBufferData(GL_ELEMENTS_ARRAY_BUFFER,sizeof(GLShort)*3,indices,GL_STATIC_DRAW);\n\n\t//使用缓冲区对象\n\tglBindBuffer(GL_ARRAY_BUFFER,buffer[0]);\n\tglEnableVertexAttibArray(VERTEX_POS_INDX);\n\tglVertexAttribPointer(VERTEX_POS_INDX,VERTEX_POS_SIZE,GL_FLOAT,GL_FALSE,(VERTEX_ATTRIB_SIZE*sizeof(GLfloat)),(const void*)0);\n\t\n\tglVertexAttribPointer(VERTEX_COLOR_INDX,VERTEX_COLOR_SIZE,GL_FLOAT,GL_FALSE,(VERTEX_ATTRIB_SIZE*sizeof(GLfloat),(cons void*)(VERTEX_POS_SIZE*sizeof(GLfloat)));\n\t\n\t................\n\n```\nglDeleteBuffers删除已经存在的缓冲区对象\n\n##顶点数组对象（VAO）\n这个特性是在opengl es3.0 中引入的,提供包含在顶点数组/顶点缓冲区对象配置之间切换所需要的所有状态的单一对象.只需要在设置缓冲区数据的时候glGenVertexArrays一个顶点数组对象ID，然后调用glBindVertexArray绑定已经生成数组对象的ID,在绘制图元的时候调用glBindVertexArray切换相应缓冲区内的数据并进行绘制.glDeleteVertexArray删除一个或者多个顶点数组对象.\n\n## 映射缓冲区对象\n应用程序设置缓冲区对象数据调用glBufferData的时候,可以将缓冲区对象数据存储映射到应用程序的内存地址空间,优点：减少应用程序的内存占用，只需要存储数据的一个副本.避免数据复制步骤通过映射出的GPU存储缓冲区对象的内存地址.\n调用glMapBufferRange返回缓冲区存储数据范围的指针,出现错误则反悔NULL，glUnmapBuffer取消之前缓冲区映射.\n\n##着色器中如何关联顶点数据\n\n* 在顶点着色器源代码中使用layout(location=N) in限定符来获取顶点属性的值\n* 使用glBindAtttibLocation绑定索引到着色器代码变量.\n\n--------EOF--------","source":"_posts/OpenGL-ES中的顶点数组、顶点属性、缓冲区对象.md","raw":"title: \"OpenGL ES中的顶点数组、顶点属性、缓冲区对象\"\ndate: 2015-05-31 17:29:23\ncategories: 游戏开发\ntags:  OpenGLES\n---\n##什么是顶点数据？\n在计算机中图元的位置是通过x,y,z,w来存储或颜色数据是通过RGBA的数组格式存储的,然后通过多个点来进行图元装配和光栅化出图形.比如三角形3个点使用X,Y,Z表示如下:\n<!--more-->\n<pre>\n  GLfloat vertex[]={\n\t\t\t0.0f,1.0f,1.0f, //x,y,z\n\t\t\t1.0f,0.5f,1.0f,\n\t\t\t0.0f,0.5f,1.0f\t\t\t\n\t\t\t}\n\n</pre>\n\n## 顶点属性数组\n顶点属性数组对象就是存储在应用程序缓冲区的顶点数据,又分两种方式来分配和存储顶点属性数组：结构数组和数据结构,结构数组就是所有顶点数据使用一个数组来存储数据,把位置、颜色、法线、纹理UV坐标等数据放进一个数组结构中.数组结构就是把每个数据通过不同的数组结构存放顶点数据.结构数组的效率要高于数组结构,因为在通过结构数组的方式访问顶点数据是按照在内存中的顺序来访问的.缺点是修改了其中的数据必须重新更新已经保存在缓冲区中数据的跨距.\n\n\n```\n#define VERTEX_POS_INDX 0\n#define VERTEX_POS_SIZE 3\n\n#define VERTEX_COLOR_INDX 1\n#define VERTEX_COLOR_SIZE 4\n\n#define VERTEX_ATTRIB_SIZE (VERTEX_POS_SIZE+VERTEX_COLOR_SIZE)\n\nGLfloat vertex[]={\n                        0.0f,1.0f,1.0f, //x,y,z\n\t\t\t1.0f,0.0f,0.0f,1.0f, //RGBA\n\t\t\t1.0f,0.5f,1.0f,\n\t\t\t0.0f,1.0f,0.0f,1.0f,\n\t\t\t0.0f,0.5f,1.0f,\n\t\t\t0.0f,0.0f,1.0f,1.0f\n\t\t }\n//设置顶点位置属性数据数组\nglVertexAttribPointer(VERTEX_POS_INDX,VERTEX_POS_SIZE,GL_FLOAT,GL_FALSE,VERTEX_ATTRIB_SIZE*sizeof(GLfloat),vertex);\n//设置颜色属性数据数组\nglVertexAttribPointer(VERTEX_COLOR_INDX,VERTEX_COLOR_SIZE,GL_FLOAT,GL_FALSE,(VERTEX_ATTRIB_SIZE*sizeof(GLfloat),vertex+VERTEX_POS_SIZE));\n//启用顶点数组数据\nglEableVertexAttribArray(VERTEX_POS_INDE);\nglEnableVertexAttribArray(VERTEX_COLOR_INDE);\n//根据顶点数据绘制三角形\nglDrawArrays(GL_TRIANGLES,0,3);\n//禁用顶点数组数据\nglDisableVertexAttribArray(VERTEX_POS_INDE);\nglDisableVertexAttribArray(VERTEX_COLOR_INDE);\n```\n\n\n## 顶点缓冲区对象\n简单点说就是把图形顶点数据和索引数据缓存在图形设备内存GPU中,改善每次绘制图形都要复制应用程序中的顶点数据.缓冲区顶点数据对象分为两种:1.图元索引数据(GL_ELEMENT_ARRAY_BUFFER）和顶点数据(GL_ARRAY_BUFFER).\n\n###使用缓冲冲区顶点对象的步骤：\n\t1. 分配缓冲区对象:glGenBuffer\n\t2. 绑定缓冲区对象:glBindBuffer,第一次调用为分配空间，以后调用都是使用缓冲区对象.\n\t3. 存储数据到缓冲区对象: glBufferData\n\t4. 删除缓冲区对象:glDeleteBuffers,在不需要使用缓冲区对象的时候删除.\n\n拿上边三角形的顶点数组数据来说,代码如下:\n```\n\t......................\n\t\n\tGLunit buffer[2];\n\tglGenBuffer(2,&buffer);\n\t//绑定顶点数据到缓冲区对象\n\tglBindBuffer(GL_ARRAY_BUFFER,buffer[0]);\n\tglBufferData(GL_ARRAY_BUFFER,sizeof(vertex),vertex,GL_STATIC_DRAW);\n\t//绑定顶点索引数据到缓冲区对象\n\tGLShort indices[3]={0,1,2};\n\tglBindBuffer(GL_ELEMENTS_ARRAY_BUFFER,buffer[1]);\n\tglBufferData(GL_ELEMENTS_ARRAY_BUFFER,sizeof(GLShort)*3,indices,GL_STATIC_DRAW);\n\n\t//使用缓冲区对象\n\tglBindBuffer(GL_ARRAY_BUFFER,buffer[0]);\n\tglEnableVertexAttibArray(VERTEX_POS_INDX);\n\tglVertexAttribPointer(VERTEX_POS_INDX,VERTEX_POS_SIZE,GL_FLOAT,GL_FALSE,(VERTEX_ATTRIB_SIZE*sizeof(GLfloat)),(const void*)0);\n\t\n\tglVertexAttribPointer(VERTEX_COLOR_INDX,VERTEX_COLOR_SIZE,GL_FLOAT,GL_FALSE,(VERTEX_ATTRIB_SIZE*sizeof(GLfloat),(cons void*)(VERTEX_POS_SIZE*sizeof(GLfloat)));\n\t\n\t................\n\n```\nglDeleteBuffers删除已经存在的缓冲区对象\n\n##顶点数组对象（VAO）\n这个特性是在opengl es3.0 中引入的,提供包含在顶点数组/顶点缓冲区对象配置之间切换所需要的所有状态的单一对象.只需要在设置缓冲区数据的时候glGenVertexArrays一个顶点数组对象ID，然后调用glBindVertexArray绑定已经生成数组对象的ID,在绘制图元的时候调用glBindVertexArray切换相应缓冲区内的数据并进行绘制.glDeleteVertexArray删除一个或者多个顶点数组对象.\n\n## 映射缓冲区对象\n应用程序设置缓冲区对象数据调用glBufferData的时候,可以将缓冲区对象数据存储映射到应用程序的内存地址空间,优点：减少应用程序的内存占用，只需要存储数据的一个副本.避免数据复制步骤通过映射出的GPU存储缓冲区对象的内存地址.\n调用glMapBufferRange返回缓冲区存储数据范围的指针,出现错误则反悔NULL，glUnmapBuffer取消之前缓冲区映射.\n\n##着色器中如何关联顶点数据\n\n* 在顶点着色器源代码中使用layout(location=N) in限定符来获取顶点属性的值\n* 使用glBindAtttibLocation绑定索引到着色器代码变量.\n\n--------EOF--------","slug":"OpenGL-ES中的顶点数组、顶点属性、缓冲区对象","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j4f003qq623trr49am0"},{"layout":"posts","title":"MacOS不能完全清除垃圾篓的解决方法","date":"2015-05-23T13:09:30.000Z","_content":"\n这个问题困扰我很久咯,一直删除文件都提示垃圾桶中有的文件不能删除,使用“安全清除废纸篓”也没有用使用过方法,全部无效：rm -rf .~/.Trash & rm -rf ～/.Trash/.501/\n<!--more-->\n##解决方法:\n    1. 打开废纸篓,选中不能清除的文件或文件夹然后右键查看属于那块硬盘.\n    2. 打开磁盘工具,选中不能清除文件的硬盘点击\n    3. 依次点击:急救-->点击验证磁盘&点击修复磁盘\n\n##Note:\n <font color='#ff0000'>如果是移动硬盘处理完成后,重新卸载在挂载.</font>\n\n相关资料: http://www.oawhy.com/html/12522/\n","source":"_posts/MacOS不能完全清除垃圾篓的解决方法.md","raw":"layout: posts\ntitle: \"MacOS不能完全清除垃圾篓的解决方法\"\ndate: 2015-05-23 21:09:30\ncategories: MacOS\n---\n\n这个问题困扰我很久咯,一直删除文件都提示垃圾桶中有的文件不能删除,使用“安全清除废纸篓”也没有用使用过方法,全部无效：rm -rf .~/.Trash & rm -rf ～/.Trash/.501/\n<!--more-->\n##解决方法:\n    1. 打开废纸篓,选中不能清除的文件或文件夹然后右键查看属于那块硬盘.\n    2. 打开磁盘工具,选中不能清除文件的硬盘点击\n    3. 依次点击:急救-->点击验证磁盘&点击修复磁盘\n\n##Note:\n <font color='#ff0000'>如果是移动硬盘处理完成后,重新卸载在挂载.</font>\n\n相关资料: http://www.oawhy.com/html/12522/\n","slug":"MacOS不能完全清除垃圾篓的解决方法","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"photos":[],"link":"","_id":"cis400j4h003uq623ads45tep"},{"title":"Lua和C/C++的数据交互","date":"2015-08-23T04:52:42.000Z","_content":"\n近日重新复习了下C\\C++和Lua之间的数据交互知识,在这里也做一个简单的记录来作为以后的参考.\n\n## Lua栈操作的介绍\nLua是一种嵌入式的脚本语言,不是独立运行的程序它可以通过链接对其他语言进行扩展，或让其他的语言来使用Lua的功能.其中包括使用lua作为库存在于C中或Lua作为主导权C作为一个库来使用.\n<!--more-->\nlua和C语言的交互都是在一个虚拟栈进行的,所有的API操作都是对栈上的数据进行交互.无论是C到Lua的操作还是Lua到C的操作.这里会存在两个问题\n1. 动态类型和静态类型之间的区别，lua是动态性的语言，而C是静态语言\n2. 自动内存管理和手动内存管理的区别.\n\nlua没有采用C语言的联合来解决动态和静态的区别，其原因是不仅为C一门语言设计的保持Lua的宿主可以是任何一门语言。其次Lua是有垃圾回收机制的如果lua table保持在C变量中，Lua引擎则无法搜索出来回收.所以Lua会使用一个抽象的棧来对Lua和C之间的数据交互.\n\nLua的栈严格按照（LIFO）先出后进的规范来操作栈,栈中任何元素都保存着lua中的任何类型:\n1. 获得lua中的一个值,调用Lua API函数,Lua会将指定的值压入栈，\n2. 要将一个值传给Lua时则先要将这个值压入栈，调用Lua API函数,Lua则会把获取该值并将其从栈中弹出.\n\n压栈操作会把第一个压入的元素索引标记为1，第二个为2，依次推至栈顶，使用负数来访问栈中元素，-1表示栈顶的元素.\n\n##相关API\n\n<pre>\n压入栈:lua_push* (..)\n检查元素类型: lua_is*(..)\n栈中取出值: lua_to*()\n检查栈是否有足够的空间:lua_checkstack(lua_State *l,int size);\n返回栈中元素个数:lua_gettop(..)\n将栈顶设置为一个指定位置: lua_settop(..)\n栈中弹出指定个数的元素:lua_pop(..)\n将索引上的值副本压入栈:lua_pushvalue(..)\n删除栈中指定位置的元素:lua_remove(..)\n移动指定元素空间开辟一个槽空间，将栈顶元素移到该位置: lua_insert(..)\n移动栈顶的元素到指定位置:lua_replace(..)\n*: string\\nil\\number\\boolean\\integer \n</pre>\n\n\n##C中调用Lua\n比如lua文件中有一个全局变量的table: conf={w=20,h=10}\n<pre>\n\nlua_stack* L = luaL_new_state();\nluaL_openlibs(L);\n\nlua_dofile(\"lua文件\");\n\nlua_getglobal(lua_stack*,\"conf\");\nif(!lua_istable(lua_stack*,-1))\n{\n  printf(\"conf全局变量不是一个table\")\n}\n//获取W的值\nlua_pushstring(L,\"w\");\nlua_gettable(L,-2)\nif(!lua_isnumber(L,-1))\n{\n printf(\"%s不是一个数字\",\"w\");\n }\n int w_val = lua_tonumber(L,-1);\n lua_pop(L,1);\n\n//调用lua中方法\nlua_getglobal(L,\"方法名\");\n//这里可以压入参数值\nlua_pushstring(L,\"参数值\")\n//状态引用,参数个数,是否有返回值\nif(lua_pcall(L,1,1,0)!=0)\n{\n  printf(\"函数调用失败 Error:%s\",lua_tostring(L,-1));\n}\n//获取返回值\nif(lua_isnumber(L,-1))\n{\n  int res_value = lua_tonumber(L,-1);\n}\nlua_close(L);\n\n</pre>\n\n##Lua调用C/C++\n###注册C/C++函数到Lua中\n\n<pre>\nint mysin(lua_State* L)\n{\n//获取lua中的值\n  int str = luaL_checknumber(L,1);\n  printf(\"lua中传入参数的值:%d\",str);\n//获取第二个参数,调用lua方法\nif(lua_isfunction(L,2))\n{\n   if(lua_pcall(L,0,0,0)!=0){\n      printf(\"调用函数出错\");\n    }\n}\n\n//压入返回值到lua中\nlua_pushstring(L,\"这里是返回给lua的值\");\n\nreturn 1;\n}\n\n....\n\n//压入函数到栈中\nlua_pushcfunction(L,mysin);\nlua_setglabal(L,\"mysin\");\n....\n\nlua中直接调用: local res=mysin(10,function()\n   print(\"这里是参数函数\")\nend);\n\n\n</pre>\n\n### Lua调用C/C++中的自定义类型\n<pre>\n//自定类型绑定到lua中\nstruct MyType{\n  int size;\n}\n\nstatic int mytype_new(lua_State* L)\n{\nMyType** mytype = (MyType**)lua_newuserdata(L,sizeof(MyType*));\n*mytype=new MyType();\nluaL_getmetatable(L,\"feiio.MyType\");\nlua_setmetatable(L,-2);\n   return 1;\n}\n\n\nstatic int mytype_getType(lua_State*L)\n{\n//这里获取创建的对象\nMyType **mytype=(MyType**)luaL_checkudata(L,1,\"feiio.MyType\");\nint size = (*mytype)->size;\nlua_pushnumber(L,size);\n \n return 1;\n }\n\n//Lua执行对象回收机制销毁对象时调用\nstatic int mytype_gc(lua_State* L)\n{\nMyType** mytype = (MyType**)luaL_checkudata(L,1,\"feiio.MyType\");\nif(mytype)\n{\n  delete mytype;\n  }\n  return 0;\n}\n\nint initMyType(lua_State* L)\n{\nstatic const luaL_Reg mylib[]={\n{\"new\",mytype_new},\n{NULL,NULL}\n};\n\nstatic const luaL_Reg myfunc[]={\n{\"getType\",mytype_getType},\n{\"__gc\",mytype_gc},\n{NULL,NULL}\n}\n//实现面向对象的支持\nluaL_newmetatable(L,\"feiio.MyType\");\nlua_pushvalue(L,-1);\nlua_setfield(L,-2,\"__index\");\nlua_setfuncs(L,myfunc,0);\n  luaL_newlib(L,mylib);\n\n\nreturn 1;\n  }\n\n//main函数中\n.....\ninitMyType(L);\nluaL_requiref(L,\"MyType\",createType,1);\nlua_settop(L,0)\n.....\n\n//Lua中调用\nlocal mytype=MyType.new()\n//面向对象的方式获取\nmytype:getType()\n</pre>\n\n##相关资料\n[使用C++模板来绑定Lua](http://lua-users.org/wiki/SimplerCppBinding)\n[Lua教程:绑定一个简单的C++类(6)](http://zilongshanren.com/blog/2014-08-11-bind-a-simple-cpp-class-in-lua.html#%E7%BB%91%E5%AE%9Ac%E7%B1%BB)\n","source":"_posts/Lua和C:C++的数据交互.md","raw":"title: \"Lua和C/C++的数据交互\"\ndate: 2015-08-23 12:52:42\ntags: [Lua ,C++]\ncategories: 编程技术\n----\n\n近日重新复习了下C\\C++和Lua之间的数据交互知识,在这里也做一个简单的记录来作为以后的参考.\n\n## Lua栈操作的介绍\nLua是一种嵌入式的脚本语言,不是独立运行的程序它可以通过链接对其他语言进行扩展，或让其他的语言来使用Lua的功能.其中包括使用lua作为库存在于C中或Lua作为主导权C作为一个库来使用.\n<!--more-->\nlua和C语言的交互都是在一个虚拟栈进行的,所有的API操作都是对栈上的数据进行交互.无论是C到Lua的操作还是Lua到C的操作.这里会存在两个问题\n1. 动态类型和静态类型之间的区别，lua是动态性的语言，而C是静态语言\n2. 自动内存管理和手动内存管理的区别.\n\nlua没有采用C语言的联合来解决动态和静态的区别，其原因是不仅为C一门语言设计的保持Lua的宿主可以是任何一门语言。其次Lua是有垃圾回收机制的如果lua table保持在C变量中，Lua引擎则无法搜索出来回收.所以Lua会使用一个抽象的棧来对Lua和C之间的数据交互.\n\nLua的栈严格按照（LIFO）先出后进的规范来操作栈,栈中任何元素都保存着lua中的任何类型:\n1. 获得lua中的一个值,调用Lua API函数,Lua会将指定的值压入栈，\n2. 要将一个值传给Lua时则先要将这个值压入栈，调用Lua API函数,Lua则会把获取该值并将其从栈中弹出.\n\n压栈操作会把第一个压入的元素索引标记为1，第二个为2，依次推至栈顶，使用负数来访问栈中元素，-1表示栈顶的元素.\n\n##相关API\n\n<pre>\n压入栈:lua_push* (..)\n检查元素类型: lua_is*(..)\n栈中取出值: lua_to*()\n检查栈是否有足够的空间:lua_checkstack(lua_State *l,int size);\n返回栈中元素个数:lua_gettop(..)\n将栈顶设置为一个指定位置: lua_settop(..)\n栈中弹出指定个数的元素:lua_pop(..)\n将索引上的值副本压入栈:lua_pushvalue(..)\n删除栈中指定位置的元素:lua_remove(..)\n移动指定元素空间开辟一个槽空间，将栈顶元素移到该位置: lua_insert(..)\n移动栈顶的元素到指定位置:lua_replace(..)\n*: string\\nil\\number\\boolean\\integer \n</pre>\n\n\n##C中调用Lua\n比如lua文件中有一个全局变量的table: conf={w=20,h=10}\n<pre>\n\nlua_stack* L = luaL_new_state();\nluaL_openlibs(L);\n\nlua_dofile(\"lua文件\");\n\nlua_getglobal(lua_stack*,\"conf\");\nif(!lua_istable(lua_stack*,-1))\n{\n  printf(\"conf全局变量不是一个table\")\n}\n//获取W的值\nlua_pushstring(L,\"w\");\nlua_gettable(L,-2)\nif(!lua_isnumber(L,-1))\n{\n printf(\"%s不是一个数字\",\"w\");\n }\n int w_val = lua_tonumber(L,-1);\n lua_pop(L,1);\n\n//调用lua中方法\nlua_getglobal(L,\"方法名\");\n//这里可以压入参数值\nlua_pushstring(L,\"参数值\")\n//状态引用,参数个数,是否有返回值\nif(lua_pcall(L,1,1,0)!=0)\n{\n  printf(\"函数调用失败 Error:%s\",lua_tostring(L,-1));\n}\n//获取返回值\nif(lua_isnumber(L,-1))\n{\n  int res_value = lua_tonumber(L,-1);\n}\nlua_close(L);\n\n</pre>\n\n##Lua调用C/C++\n###注册C/C++函数到Lua中\n\n<pre>\nint mysin(lua_State* L)\n{\n//获取lua中的值\n  int str = luaL_checknumber(L,1);\n  printf(\"lua中传入参数的值:%d\",str);\n//获取第二个参数,调用lua方法\nif(lua_isfunction(L,2))\n{\n   if(lua_pcall(L,0,0,0)!=0){\n      printf(\"调用函数出错\");\n    }\n}\n\n//压入返回值到lua中\nlua_pushstring(L,\"这里是返回给lua的值\");\n\nreturn 1;\n}\n\n....\n\n//压入函数到栈中\nlua_pushcfunction(L,mysin);\nlua_setglabal(L,\"mysin\");\n....\n\nlua中直接调用: local res=mysin(10,function()\n   print(\"这里是参数函数\")\nend);\n\n\n</pre>\n\n### Lua调用C/C++中的自定义类型\n<pre>\n//自定类型绑定到lua中\nstruct MyType{\n  int size;\n}\n\nstatic int mytype_new(lua_State* L)\n{\nMyType** mytype = (MyType**)lua_newuserdata(L,sizeof(MyType*));\n*mytype=new MyType();\nluaL_getmetatable(L,\"feiio.MyType\");\nlua_setmetatable(L,-2);\n   return 1;\n}\n\n\nstatic int mytype_getType(lua_State*L)\n{\n//这里获取创建的对象\nMyType **mytype=(MyType**)luaL_checkudata(L,1,\"feiio.MyType\");\nint size = (*mytype)->size;\nlua_pushnumber(L,size);\n \n return 1;\n }\n\n//Lua执行对象回收机制销毁对象时调用\nstatic int mytype_gc(lua_State* L)\n{\nMyType** mytype = (MyType**)luaL_checkudata(L,1,\"feiio.MyType\");\nif(mytype)\n{\n  delete mytype;\n  }\n  return 0;\n}\n\nint initMyType(lua_State* L)\n{\nstatic const luaL_Reg mylib[]={\n{\"new\",mytype_new},\n{NULL,NULL}\n};\n\nstatic const luaL_Reg myfunc[]={\n{\"getType\",mytype_getType},\n{\"__gc\",mytype_gc},\n{NULL,NULL}\n}\n//实现面向对象的支持\nluaL_newmetatable(L,\"feiio.MyType\");\nlua_pushvalue(L,-1);\nlua_setfield(L,-2,\"__index\");\nlua_setfuncs(L,myfunc,0);\n  luaL_newlib(L,mylib);\n\n\nreturn 1;\n  }\n\n//main函数中\n.....\ninitMyType(L);\nluaL_requiref(L,\"MyType\",createType,1);\nlua_settop(L,0)\n.....\n\n//Lua中调用\nlocal mytype=MyType.new()\n//面向对象的方式获取\nmytype:getType()\n</pre>\n\n##相关资料\n[使用C++模板来绑定Lua](http://lua-users.org/wiki/SimplerCppBinding)\n[Lua教程:绑定一个简单的C++类(6)](http://zilongshanren.com/blog/2014-08-11-bind-a-simple-cpp-class-in-lua.html#%E7%BB%91%E5%AE%9Ac%E7%B1%BB)\n","slug":"Lua和C:C++的数据交互","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j4j003xq6231w90ae8m"},{"title":"Google工作整理术-读书笔记","date":"2016-03-06T04:09:50.000Z","_content":"<img src=\"https://img3.doubanio.com/lpic/s28348255.jpg\" width=\"100px\"/></td>\n作者: （美）道格拉斯•梅里尔 / （美）詹姆斯•马丁 \n副标题: 信息太多、时间太少，Google帮你做整理\n原作名: Getting Organized in the Google Era：How to Get Stuff out of Your Head, Find It When You Need It, and Get It Done Right\n\n### 简介 ###\n在kindle上看的,书中主要讲述了如何更加的高效在生活和工作中更有序的组织的信息,让你释放大脑的压力并在危机出现时也不会出现乱了阵脚，和一般的实用性书籍一样作者提了21条原则。\n<!-- more -->\n### 主要内容 ###\n作者分主要的三大部分15章来讲诉有序组织的21条原则：\n\n- 第一部分全面认识自己,给我们描述了如何对减轻大脑的负担,更有效的记忆和处理信息,以及传统的一些经验和习惯对我们影响,了解制约自己的因素.及在做任何事情之前要清除自己的目标以及用什么途径去实现它.\n- 第二部分讲诉如何使用google的工具进行对自己收集的信息和已经的信息更有效的处理,由于国内目前环境不能使用google可以把google工具理解广义上的能帮你更高效的应用原则的工具.\n- 第三部分克服大大小小的挑战就是让你如何去面对来自工作和生活中的压力及如何把工作和生活融为一体.\n\n21条有序组织的原则：\n\n- 为了实现大脑压力最小化,要把生活组织的有理有条的\n- 让信息尽可能快的离开大脑\n- 多重任务通常让你降低效率\n- 利用故事去记忆\n- 打破常规，仅仅因为一直那么做事情,并不意味着一直都要按照那样的方式做下去。\n- 知识不是力量,共享知识才是力量\n- 进行组织安排时，要绕开实际制约而不是假性制约\n- 对自己要坦诚,但千万不要自我批评\n- 要懂得什么时候忽略制约\n- 搞清楚自己的目标是什么，及通过什么样的途径去实现它.\n- 在实现目标的方式上要灵活变通\n- 不要给信息归档,用的时候只到去哪儿搜索就行了.\n- 大脑中只保存真正需要记忆的内容\n- 大块内容要化整为零\n- 每周拿出一些时间回顾关键信息\n- 没有一个完美无缺的组织方法\n- 在数字信息中加上相应的关键词,以便自己以后能容易找到》\n- 尽量使用自己已经熟练的工具,避免在工具上折腾陷入本末倒置\n- 及时加注解让自己以后了解背景的信息\n- 把类似的任务放在一起\n- 把工作和生活融为一体,而不是力图在两者之间平衡.\n\n对计算机依赖比较强的情况下,面对每天如潮的信息涌入,作者的有些原则还是比较对我们有用的。对自己对信息组织第12-17、19原则就比较有参考意义.在对任务管理工具上的挑选第18条原则就告诉我们不要过多的对工具进行依赖最终导致本末倒置。其中的很多观点和GTD所描述流程其实还是有些重合的，清空大脑达到“心如止水”的境界，定期的处理和组织相关的信息，定期的回顾信息.就如作者最后结语所说的一样其实书中有些原则可能适合你，反之。或许有些观点可能根本就不对,但只要能促进你去思考,对你而言那些是对的，那些是错的，阅读的意义不也就是如此吗！\n","source":"_posts/Google工作整理术-读书笔记.md","raw":"---\ntitle: Google工作整理术-读书笔记\ndate: 2016-03-06 12:09:50\ncategories: 读书笔记\ntags: [有序的组织,时间管理,信息管理]\n---\n<img src=\"https://img3.doubanio.com/lpic/s28348255.jpg\" width=\"100px\"/></td>\n作者: （美）道格拉斯•梅里尔 / （美）詹姆斯•马丁 \n副标题: 信息太多、时间太少，Google帮你做整理\n原作名: Getting Organized in the Google Era：How to Get Stuff out of Your Head, Find It When You Need It, and Get It Done Right\n\n### 简介 ###\n在kindle上看的,书中主要讲述了如何更加的高效在生活和工作中更有序的组织的信息,让你释放大脑的压力并在危机出现时也不会出现乱了阵脚，和一般的实用性书籍一样作者提了21条原则。\n<!-- more -->\n### 主要内容 ###\n作者分主要的三大部分15章来讲诉有序组织的21条原则：\n\n- 第一部分全面认识自己,给我们描述了如何对减轻大脑的负担,更有效的记忆和处理信息,以及传统的一些经验和习惯对我们影响,了解制约自己的因素.及在做任何事情之前要清除自己的目标以及用什么途径去实现它.\n- 第二部分讲诉如何使用google的工具进行对自己收集的信息和已经的信息更有效的处理,由于国内目前环境不能使用google可以把google工具理解广义上的能帮你更高效的应用原则的工具.\n- 第三部分克服大大小小的挑战就是让你如何去面对来自工作和生活中的压力及如何把工作和生活融为一体.\n\n21条有序组织的原则：\n\n- 为了实现大脑压力最小化,要把生活组织的有理有条的\n- 让信息尽可能快的离开大脑\n- 多重任务通常让你降低效率\n- 利用故事去记忆\n- 打破常规，仅仅因为一直那么做事情,并不意味着一直都要按照那样的方式做下去。\n- 知识不是力量,共享知识才是力量\n- 进行组织安排时，要绕开实际制约而不是假性制约\n- 对自己要坦诚,但千万不要自我批评\n- 要懂得什么时候忽略制约\n- 搞清楚自己的目标是什么，及通过什么样的途径去实现它.\n- 在实现目标的方式上要灵活变通\n- 不要给信息归档,用的时候只到去哪儿搜索就行了.\n- 大脑中只保存真正需要记忆的内容\n- 大块内容要化整为零\n- 每周拿出一些时间回顾关键信息\n- 没有一个完美无缺的组织方法\n- 在数字信息中加上相应的关键词,以便自己以后能容易找到》\n- 尽量使用自己已经熟练的工具,避免在工具上折腾陷入本末倒置\n- 及时加注解让自己以后了解背景的信息\n- 把类似的任务放在一起\n- 把工作和生活融为一体,而不是力图在两者之间平衡.\n\n对计算机依赖比较强的情况下,面对每天如潮的信息涌入,作者的有些原则还是比较对我们有用的。对自己对信息组织第12-17、19原则就比较有参考意义.在对任务管理工具上的挑选第18条原则就告诉我们不要过多的对工具进行依赖最终导致本末倒置。其中的很多观点和GTD所描述流程其实还是有些重合的，清空大脑达到“心如止水”的境界，定期的处理和组织相关的信息，定期的回顾信息.就如作者最后结语所说的一样其实书中有些原则可能适合你，反之。或许有些观点可能根本就不对,但只要能促进你去思考,对你而言那些是对的，那些是错的，阅读的意义不也就是如此吗！\n","slug":"Google工作整理术-读书笔记","published":1,"updated":"2016-03-06T04:37:50.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j4m0041q623a7oq6l01"},{"title":"Git学习笔记","date":"2014-05-14T15:51:49.000Z","id":"242","_content":"\n以前的项目都是使用的SVN,也了解一点点GIT的使用但没有系统的去学习过它的使用.最近有时间在近两天系统的学习了下[Git Pro](http://git-scm.com/book/zh)这本书的内容并更进一步的加强了我对git的了解和使用的技巧.\n\n## 什么是版本控制？\n\n版本控制是一种记录一个或者若干文件内容变化,在将来某天我希望查看其特定版本修订的系统.\n\n<!--more-->\n\n## 版本控制系统的分类:\n\n### 本地版本控制系统:\n\n就是对文件改成不同的名字进行备份，优点简单,缺点时混淆在一个文件夹内一旦弄错不容易恢复.有rcs\n\n### 集中式版本控制系统\n\n集中式版本控制系统((<span style=\"color: #4e443c;\">Centralized Version Control Systems，简称 CVCS</span>))，单一服务器集中管理所有文件的修订版本,协同工作的人通过客户端取出最新版本进行提交更新.其中Subversion(SVN)、CVS及Perforce等系统,优点能查看其他人对文件做了什么，管理员能对客户端进行权限的分配.缺点：都在同一个服务器上维护代码，如果服务器宕机一小时那么谁也无法提交更新.最坏的情况时如果服务器文件丢失那么谁也不能保证客户端代码时最新的.\n\n### 分布式版本控制系统\n\n        客户端并不是提取最新版本文件的快照,而时把整个仓库镜像到了本地.优点就是任何一个协同工作的服务器发生故障,事后都能从任何一个镜像出来本地仓库恢复.\n目前的系统有Git、Mercurial、Bazaae、Darcs等\n\n## 为什么要使用版本控制工具？\n\n*   在将来某天可以查看以前版本修订的内容\n*   在工作时误操作删除文件后不需要抓狂,可以快速的恢复文件。\n*   在多人协作工作时不会因为自己的改动而替换别人的更动.\n\n* * *\n\n&nbsp;\n\n## **GIT的工作原理**\n\ngit时记录的时更改的快照,每次提交更新会遍历一遍所有的文件的指纹信息作一快照,然后保存一个指向这一快照的索引,如文件未变化则不会保存而只对上一次保存的快照作一链接.\n\n所有操作都是本地完成的不要联网操作。\n\n在保存到git之前,对所有数据都要进行内容的校验和计算并将此结果作为数据的唯一标识和索引.所有保存在git中的内容都是通过一个SHA-1算法计算出的校验和.\n\n常用的git操作大多仅仅是把数据添加到数据库\n\n文件的三种状态:\n已修改:对已经从git目录中取出的文件进行过修改\n已暂存:对修改的文件放在下次提交的时要保存的清单中\n已提交：标识该文件已经安全的保存在本地的数据库中了.\n\n所有文件的元数据和对象数据库都保存在.git文件夹中，从项目取出某个版本的文件和目录用以后续的工作叫做工作空间，暂存区域只不过是个简单的文件保存快照的索引放在.git中\n\nGIT工作流程:\n\n1.  在工作目录中对某些文件修改\n2.  对修改后的文件进行快照，然后保存在暂存区域\n3.  提交更新，将保存到暂存区域的文件快照永久的转储到git目录中\n&nbsp;\n\n&nbsp;\n\n* * *\n\n&nbsp;\n\n## Git的安装\n\nLiunx:\nFedora: $yun install git-core\nUbuntu: $apt-get install git\n\nMac OS:\n通过homebrew安装:  $brew install git\nMacPorts: $sudo prot install git-core+svn+doc+bash_completion+gitweb\n[ 图形化方式安装：](http://sourceforge.net/projects/git-osx-installer)\n\nWindow:\n[  <span style=\"color: #4e443c;\">msysGit</span>](http://msysgit.github.com/)\n\n* * *\n\n## Git 配置\n\n用户信息\n$git config --global user.name \"名字\"\n$git config --global user.email 电子邮件地址\n\n文本编辑器\n$git config --global core.editor 编辑器名\n\n差异性分析工具\n$git config --global merge.tool 工具名(vimdiff)\n<span style=\"color: #4e443c;\">Git 可以理解 kdiff3，tkdiff，meld，xxdiff，emerge，vimdiff，gvimdiff，ecmerge，和 opendiff 等合并工具的输出信息</span>\n\n查看配置信息\ngit config --list\n查看特定的信息:\n$git config user.name\n\n* * *\n\n## GIT基础\n\n从工作空间初始化新仓库: git init\n从现有仓库克隆：git clone   仓库地址\n检查当前文件状态： git status\n跟踪新文件：git add\n提交更新: git commit -a(不需要对修改进行add操作) -m \"说明\"\n忽略某些文件：在目录下创建一个.gitrgnore文件,其中加排除版本更新文件.文件内容可以使用glob模式匹配\n查看已暂存和未暂存的更新：git diff --cached(查看暂存起来文件的变化)\n移除文件：git rm 可选 <span style=\"color: #f14e32;\">-f(<span style=\"color: #000000;\">强制移除文件) 文件名\n</span></span>移动文件: git mv 文件名\n\n查看提交历史 ：git log\n可选参数：\n-p(显示最近提交内容的差异)\n-2(显示最近两次更新)\n-word-diff(查看单次的变化)\n-stat 增改行数的统计\n--pretty=oneline显示在一行\n图形化查看提交历史工具: git gitk\n撤销操作：git commit --amend\n将文件全加到暂存区域: git add .\n取消已经暂存的文件: git reset HEAD &lt;file&gt;\n取消对文件的修改: git checkout -- &lt;文件名&gt;\n\n远程仓库\n\n查看当前的远程库：git remote 可选参数 -v(显示对应的克隆地址)\n添加到远程仓库: git remote add [shortname] [url]\n抓取远程仓库的数据: git fetch [remote-name]\n推送数据到远程仓库：git push [remote-name] [branch-name]\n查看远程仓库的信息: git remote show [remote-name]\n原始克隆的远端仓库中抓取数据合并到当前工作目录的分支中: git pull\n远程仓库的删除和重命名：git remote rename 名字 新名字\n删除对应的远端仓库: git remote rm 名字\n\n标签\n\n 显示已有标签: git tag  可选-l \"1.4.*\"显示1.4版本的所有标签\n含附注的标签：git tag -a [tag_name] -m '注释'\n签署标签: git tag -s [tag_name] -m '注释'\n验证标签: git tag -v [tag_name]\n后期加注标签: git tag -a [tag_name] 提交对象的校验和前几位\n分享标签：git push [remote_name] [tag_name] 可选 --tags(一次性推所有标签)\n\n别名: <span style=\"color: #f14e32;\"><span style=\"color: #000000;\">git config --global alias.别名 git命令</span></span>\n\n&nbsp;\n\n* * *\n\n&nbsp;\n\n## GIT分支\n\n分支其实时某个对象往回看的历史,git创建分支实际保存的是一个校验和的文件很廉价很快速，就是向一个文件写拉41个字节（外加一个空白符）,所有分支都是在本地仓库中操作\n\n创建分支：git branch [branch_name]\n切换分支： git checkout 可选-b(新建并切换到分支) 分支名\n删除分支: git branch -d  -D(强制删除) [branch_name]\n合并分支: git merge [branch_name]\n浏览所有分支 ：git branch 可选 -v(查看各分支最后一个提交) --merged(当前分支已经和哪些分支合并了) --no-merged(当前分支和哪些分支未合并)\n获取远程分支: git fetch [remote_name]/[branch_name]\n推送本地分支: git push [remote_name] [branch_name]\n合并远程分支： git merge [remote_name]/[branch_name]\n删除远程分支: git push [remote_name] :[branch_name]\n跟踪远程分支: git checkout --track [remote_name]/[branch_name]\n\n_衍合（rebase）把一个分支里提交的改变移到另一个分支里重放一遍,更整洁的提交历史,使用目的想要得到一个能在远程分支上干净应用的补丁_\n\n<span style=\"color: #f14e32;\">git rebase [主分支] [特性分支]\n</span>_衍合的风险:_\n**一旦分支中的提交对象发布到公共仓库，就千万不要对该分支进行衍合操作。\n**如果把衍合当成一种在推送之前清理提交历史的手段，而且仅仅衍合那些尚未公开的提交对象，就没问题。如果衍合那些已经公开的提交对象，并且已经有人基于这些提交对象开展了后续开发工作的话，就会出现叫人沮丧的麻烦。","source":"_posts/Git学习笔记.md","raw":"title: \"Git学习笔记\"\ndate: 2014-05-14 23:51:49\ntags:\nid: 242\ncategories:\n  - 技术工具\n---\n\n以前的项目都是使用的SVN,也了解一点点GIT的使用但没有系统的去学习过它的使用.最近有时间在近两天系统的学习了下[Git Pro](http://git-scm.com/book/zh)这本书的内容并更进一步的加强了我对git的了解和使用的技巧.\n\n## 什么是版本控制？\n\n版本控制是一种记录一个或者若干文件内容变化,在将来某天我希望查看其特定版本修订的系统.\n\n<!--more-->\n\n## 版本控制系统的分类:\n\n### 本地版本控制系统:\n\n就是对文件改成不同的名字进行备份，优点简单,缺点时混淆在一个文件夹内一旦弄错不容易恢复.有rcs\n\n### 集中式版本控制系统\n\n集中式版本控制系统((<span style=\"color: #4e443c;\">Centralized Version Control Systems，简称 CVCS</span>))，单一服务器集中管理所有文件的修订版本,协同工作的人通过客户端取出最新版本进行提交更新.其中Subversion(SVN)、CVS及Perforce等系统,优点能查看其他人对文件做了什么，管理员能对客户端进行权限的分配.缺点：都在同一个服务器上维护代码，如果服务器宕机一小时那么谁也无法提交更新.最坏的情况时如果服务器文件丢失那么谁也不能保证客户端代码时最新的.\n\n### 分布式版本控制系统\n\n        客户端并不是提取最新版本文件的快照,而时把整个仓库镜像到了本地.优点就是任何一个协同工作的服务器发生故障,事后都能从任何一个镜像出来本地仓库恢复.\n目前的系统有Git、Mercurial、Bazaae、Darcs等\n\n## 为什么要使用版本控制工具？\n\n*   在将来某天可以查看以前版本修订的内容\n*   在工作时误操作删除文件后不需要抓狂,可以快速的恢复文件。\n*   在多人协作工作时不会因为自己的改动而替换别人的更动.\n\n* * *\n\n&nbsp;\n\n## **GIT的工作原理**\n\ngit时记录的时更改的快照,每次提交更新会遍历一遍所有的文件的指纹信息作一快照,然后保存一个指向这一快照的索引,如文件未变化则不会保存而只对上一次保存的快照作一链接.\n\n所有操作都是本地完成的不要联网操作。\n\n在保存到git之前,对所有数据都要进行内容的校验和计算并将此结果作为数据的唯一标识和索引.所有保存在git中的内容都是通过一个SHA-1算法计算出的校验和.\n\n常用的git操作大多仅仅是把数据添加到数据库\n\n文件的三种状态:\n已修改:对已经从git目录中取出的文件进行过修改\n已暂存:对修改的文件放在下次提交的时要保存的清单中\n已提交：标识该文件已经安全的保存在本地的数据库中了.\n\n所有文件的元数据和对象数据库都保存在.git文件夹中，从项目取出某个版本的文件和目录用以后续的工作叫做工作空间，暂存区域只不过是个简单的文件保存快照的索引放在.git中\n\nGIT工作流程:\n\n1.  在工作目录中对某些文件修改\n2.  对修改后的文件进行快照，然后保存在暂存区域\n3.  提交更新，将保存到暂存区域的文件快照永久的转储到git目录中\n&nbsp;\n\n&nbsp;\n\n* * *\n\n&nbsp;\n\n## Git的安装\n\nLiunx:\nFedora: $yun install git-core\nUbuntu: $apt-get install git\n\nMac OS:\n通过homebrew安装:  $brew install git\nMacPorts: $sudo prot install git-core+svn+doc+bash_completion+gitweb\n[ 图形化方式安装：](http://sourceforge.net/projects/git-osx-installer)\n\nWindow:\n[  <span style=\"color: #4e443c;\">msysGit</span>](http://msysgit.github.com/)\n\n* * *\n\n## Git 配置\n\n用户信息\n$git config --global user.name \"名字\"\n$git config --global user.email 电子邮件地址\n\n文本编辑器\n$git config --global core.editor 编辑器名\n\n差异性分析工具\n$git config --global merge.tool 工具名(vimdiff)\n<span style=\"color: #4e443c;\">Git 可以理解 kdiff3，tkdiff，meld，xxdiff，emerge，vimdiff，gvimdiff，ecmerge，和 opendiff 等合并工具的输出信息</span>\n\n查看配置信息\ngit config --list\n查看特定的信息:\n$git config user.name\n\n* * *\n\n## GIT基础\n\n从工作空间初始化新仓库: git init\n从现有仓库克隆：git clone   仓库地址\n检查当前文件状态： git status\n跟踪新文件：git add\n提交更新: git commit -a(不需要对修改进行add操作) -m \"说明\"\n忽略某些文件：在目录下创建一个.gitrgnore文件,其中加排除版本更新文件.文件内容可以使用glob模式匹配\n查看已暂存和未暂存的更新：git diff --cached(查看暂存起来文件的变化)\n移除文件：git rm 可选 <span style=\"color: #f14e32;\">-f(<span style=\"color: #000000;\">强制移除文件) 文件名\n</span></span>移动文件: git mv 文件名\n\n查看提交历史 ：git log\n可选参数：\n-p(显示最近提交内容的差异)\n-2(显示最近两次更新)\n-word-diff(查看单次的变化)\n-stat 增改行数的统计\n--pretty=oneline显示在一行\n图形化查看提交历史工具: git gitk\n撤销操作：git commit --amend\n将文件全加到暂存区域: git add .\n取消已经暂存的文件: git reset HEAD &lt;file&gt;\n取消对文件的修改: git checkout -- &lt;文件名&gt;\n\n远程仓库\n\n查看当前的远程库：git remote 可选参数 -v(显示对应的克隆地址)\n添加到远程仓库: git remote add [shortname] [url]\n抓取远程仓库的数据: git fetch [remote-name]\n推送数据到远程仓库：git push [remote-name] [branch-name]\n查看远程仓库的信息: git remote show [remote-name]\n原始克隆的远端仓库中抓取数据合并到当前工作目录的分支中: git pull\n远程仓库的删除和重命名：git remote rename 名字 新名字\n删除对应的远端仓库: git remote rm 名字\n\n标签\n\n 显示已有标签: git tag  可选-l \"1.4.*\"显示1.4版本的所有标签\n含附注的标签：git tag -a [tag_name] -m '注释'\n签署标签: git tag -s [tag_name] -m '注释'\n验证标签: git tag -v [tag_name]\n后期加注标签: git tag -a [tag_name] 提交对象的校验和前几位\n分享标签：git push [remote_name] [tag_name] 可选 --tags(一次性推所有标签)\n\n别名: <span style=\"color: #f14e32;\"><span style=\"color: #000000;\">git config --global alias.别名 git命令</span></span>\n\n&nbsp;\n\n* * *\n\n&nbsp;\n\n## GIT分支\n\n分支其实时某个对象往回看的历史,git创建分支实际保存的是一个校验和的文件很廉价很快速，就是向一个文件写拉41个字节（外加一个空白符）,所有分支都是在本地仓库中操作\n\n创建分支：git branch [branch_name]\n切换分支： git checkout 可选-b(新建并切换到分支) 分支名\n删除分支: git branch -d  -D(强制删除) [branch_name]\n合并分支: git merge [branch_name]\n浏览所有分支 ：git branch 可选 -v(查看各分支最后一个提交) --merged(当前分支已经和哪些分支合并了) --no-merged(当前分支和哪些分支未合并)\n获取远程分支: git fetch [remote_name]/[branch_name]\n推送本地分支: git push [remote_name] [branch_name]\n合并远程分支： git merge [remote_name]/[branch_name]\n删除远程分支: git push [remote_name] :[branch_name]\n跟踪远程分支: git checkout --track [remote_name]/[branch_name]\n\n_衍合（rebase）把一个分支里提交的改变移到另一个分支里重放一遍,更整洁的提交历史,使用目的想要得到一个能在远程分支上干净应用的补丁_\n\n<span style=\"color: #f14e32;\">git rebase [主分支] [特性分支]\n</span>_衍合的风险:_\n**一旦分支中的提交对象发布到公共仓库，就千万不要对该分支进行衍合操作。\n**如果把衍合当成一种在推送之前清理提交历史的手段，而且仅仅衍合那些尚未公开的提交对象，就没问题。如果衍合那些已经公开的提交对象，并且已经有人基于这些提交对象开展了后续开发工作的话，就会出现叫人沮丧的麻烦。","slug":"Git学习笔记","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j4p0048q6232jfwfc9s"},{"title":"Flashbuilder4.7或Eclipse中修改自动注释的@author","date":"2013-12-19T10:50:40.000Z","id":"50","_content":"\n在Flashbuilder中新建类加注释时，一直是系统自带的Administator要去修改很是麻烦.在网上搜了下修改方式如下：\n\n1\\. 打开Flash builder/Eclipse的安装目录\n2.找到其中文件Flashbulder.ini/Eclipse.ini\n3\\. 在文件的最后一行加入<span style=\"color: #ff0000;\">-Duser.name = 作者名</span>\n\n重新启动应用程序(Flash builder/Eclipse).","source":"_posts/Flashbuilder4.7或Eclipse中修改自动注释的@author.md","raw":"title: \"Flashbuilder4.7或Eclipse中修改自动注释的@author\"\ndate: 2013-12-19 18:50:40\ntags:\nid: 50\ncategories:\n  - 技术工具\n---\n\n在Flashbuilder中新建类加注释时，一直是系统自带的Administator要去修改很是麻烦.在网上搜了下修改方式如下：\n\n1\\. 打开Flash builder/Eclipse的安装目录\n2.找到其中文件Flashbulder.ini/Eclipse.ini\n3\\. 在文件的最后一行加入<span style=\"color: #ff0000;\">-Duser.name = 作者名</span>\n\n重新启动应用程序(Flash builder/Eclipse).","slug":"Flashbuilder4.7或Eclipse中修改自动注释的@author","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j4r004aq6236836htbj"},{"title":"Emacs org-mode对表格的操作","date":"2015-12-10T13:44:53.000Z","_content":"\n最近在公司需要发布客户端组的每日的工作任务用了一段时间的excle来发布感觉使用也只能做个表格用用如果看历史纪录确实比较繁琐，想来一下是不是可以使用emacs的org-mode来做项目的纪录，并且还能支持远程同步到对应的服务器目录下和发布成pdf和html格式。这里也记下在org-mode中表格的常用操作作个记录：\n<!-- more -->\n\n### 常用快捷键：\n\n<pre class=\"brush: bash;\">\n$ C-c #对当前表格对齐和格式化\n$ M-S-left #删除当前列\n$ M-left/right #对当前列进行左移或右移\n$ M-S-up  #删除当前行\n$ M-S-down #当前行的上新建一行\n$ M-up/down #上下移动当前行\n$ M-S-right #在当前列的左侧新建一列\n$ Tab ＃切换光标到下一个表格中\n$ S-Tab #切换光标到上一个表格中\n$ C-c _ 或 |- #对当前行与行之间增加下划线\n$ C-| #新建表格：行x列\n$ C-c RET #当前行的下方插入一行\n</pre>\n\n### 相关资料\n* [Org Mode Table](http://orgmode.org/org.html#Tables)\n* [Org简明手册](http://www.cnblogs.com/Open_Source/archive/2011/07/17/2108747.html#sec-3)\n","source":"_posts/Emacs-org-mode对表格的操作.md","raw":"title: \"Emacs org-mode对表格的操作\"\ndate: 2015-12-10 21:44:53\ntags: Emacs\ncategories: 技术工具\n---\n\n最近在公司需要发布客户端组的每日的工作任务用了一段时间的excle来发布感觉使用也只能做个表格用用如果看历史纪录确实比较繁琐，想来一下是不是可以使用emacs的org-mode来做项目的纪录，并且还能支持远程同步到对应的服务器目录下和发布成pdf和html格式。这里也记下在org-mode中表格的常用操作作个记录：\n<!-- more -->\n\n### 常用快捷键：\n\n<pre class=\"brush: bash;\">\n$ C-c #对当前表格对齐和格式化\n$ M-S-left #删除当前列\n$ M-left/right #对当前列进行左移或右移\n$ M-S-up  #删除当前行\n$ M-S-down #当前行的上新建一行\n$ M-up/down #上下移动当前行\n$ M-S-right #在当前列的左侧新建一列\n$ Tab ＃切换光标到下一个表格中\n$ S-Tab #切换光标到上一个表格中\n$ C-c _ 或 |- #对当前行与行之间增加下划线\n$ C-| #新建表格：行x列\n$ C-c RET #当前行的下方插入一行\n</pre>\n\n### 相关资料\n* [Org Mode Table](http://orgmode.org/org.html#Tables)\n* [Org简明手册](http://www.cnblogs.com/Open_Source/archive/2011/07/17/2108747.html#sec-3)\n","slug":"Emacs-org-mode对表格的操作","published":1,"updated":"2016-08-21T03:19:27.000Z","_id":"cis400j4t004cq623g0og1ijx","comments":1,"layout":"post","photos":[],"link":""},{"title":"CentOS7.0搭建VPN(PPTP)服务器","date":"2016-05-14T09:34:55.000Z","_content":"一直用Shadowsocks的在PC端来进行翻墙,但发现最近手机有翻墙的需求就折腾了下对自己VPS进行PPTP的VPN搭建以下是搭建流程记录,VPS服务器操作系统是CentOS7.0.\n<!--more -->\n### 安装组件\n先更新下yum源,然后安装'ppp pptpd'两个组件\n<pre class=\"brush: bash;\">\nyum update\nyum install ppp pptpd</pre>\n### 配置PPTP组件\n- 编辑/etc/pptpd.conf,搜索localip和remoteip两行去掉前面的注释“#”\n- 编辑/etc/ppp/options/pptpd,搜索\"ms-dns\"去掉两行前面的注释标识\"#\",然后修改DNS地址为\"8.8.8.8和8.8.4.4\"\n- 编辑/etc/ppp/chap-secrets文件设置VPN的账号密码,在文件末尾增加一行\"用户名 pptpd 密码 *\"的格式设置.\n- 修改内核参数/etc/sysctl.conf文件,在文件末尾增加\"net.ipv4.ip_forward=1\",然后运行\"sysctl  -p\"使内核生效.\n\n### Firewalld配置\n<pre class=\"brush: bash;\">\nfirewall-cmd --permanent --direct --add-rule ipv4 filter INPUT 0 -i eth0 -p tcp --dport 1723 -j ACCEPT \nfirewall-cmd --permanent --direct --add-rule ipv4 filter INPUT 0 -p gre -j ACCEPT \nfirewall-cmd --permanent --direct --add-rule ipv4 filter POSTROUTING 0 -t nat -o eth0 -j MASQUERADE \nfirewall-cmd --permanent --direct --add-rule ipv4 filter FORWARD 0 -i ppp+ -o eth0 -j ACCEPT \nfirewall-cmd --permanent --direct --add-rule ipv4 filter FORWARD 0 -i eth0 -o ppp+ -j ACCEPT\nfirewall-cmd --reload\n</pre>\n\n### PPTP服务操作\n- 启动: `systemctl start pptpd`\n- 重启: `systemctl restart pptpd`\n- 增加服务: `systemctl enable service.pptpd`\n\n\n### 参看资料\n- [Centos 7搭建VPN（PPTP）服务器方法](http://www.wanghailin.cn/centos-7-vpn/)\n- [Setup PPTP Server on CentOS](http://www.lightning-ashe.com/develop/setup-pptp-server-on-centos/)\n\n\n","source":"_posts/CentOS7-0搭建VPN-PPTP-服务器.md","raw":"---\ntitle: CentOS7.0搭建VPN(PPTP)服务器\ndate: 2016-05-14 17:34:55\ntags: CentOS7\ncategories: 技术工具\n---\n一直用Shadowsocks的在PC端来进行翻墙,但发现最近手机有翻墙的需求就折腾了下对自己VPS进行PPTP的VPN搭建以下是搭建流程记录,VPS服务器操作系统是CentOS7.0.\n<!--more -->\n### 安装组件\n先更新下yum源,然后安装'ppp pptpd'两个组件\n<pre class=\"brush: bash;\">\nyum update\nyum install ppp pptpd</pre>\n### 配置PPTP组件\n- 编辑/etc/pptpd.conf,搜索localip和remoteip两行去掉前面的注释“#”\n- 编辑/etc/ppp/options/pptpd,搜索\"ms-dns\"去掉两行前面的注释标识\"#\",然后修改DNS地址为\"8.8.8.8和8.8.4.4\"\n- 编辑/etc/ppp/chap-secrets文件设置VPN的账号密码,在文件末尾增加一行\"用户名 pptpd 密码 *\"的格式设置.\n- 修改内核参数/etc/sysctl.conf文件,在文件末尾增加\"net.ipv4.ip_forward=1\",然后运行\"sysctl  -p\"使内核生效.\n\n### Firewalld配置\n<pre class=\"brush: bash;\">\nfirewall-cmd --permanent --direct --add-rule ipv4 filter INPUT 0 -i eth0 -p tcp --dport 1723 -j ACCEPT \nfirewall-cmd --permanent --direct --add-rule ipv4 filter INPUT 0 -p gre -j ACCEPT \nfirewall-cmd --permanent --direct --add-rule ipv4 filter POSTROUTING 0 -t nat -o eth0 -j MASQUERADE \nfirewall-cmd --permanent --direct --add-rule ipv4 filter FORWARD 0 -i ppp+ -o eth0 -j ACCEPT \nfirewall-cmd --permanent --direct --add-rule ipv4 filter FORWARD 0 -i eth0 -o ppp+ -j ACCEPT\nfirewall-cmd --reload\n</pre>\n\n### PPTP服务操作\n- 启动: `systemctl start pptpd`\n- 重启: `systemctl restart pptpd`\n- 增加服务: `systemctl enable service.pptpd`\n\n\n### 参看资料\n- [Centos 7搭建VPN（PPTP）服务器方法](http://www.wanghailin.cn/centos-7-vpn/)\n- [Setup PPTP Server on CentOS](http://www.lightning-ashe.com/develop/setup-pptp-server-on-centos/)\n\n\n","slug":"CentOS7-0搭建VPN-PPTP-服务器","published":1,"updated":"2016-08-21T03:18:18.000Z","_id":"cis400j4v004gq623hm7aylrl","comments":1,"layout":"post","photos":[],"link":""},{"title":"Canon卡农","date":"2013-12-09T03:48:32.000Z","id":"38","_content":"\nCanno(卡农)一种单一声部反反复复追逐另一声部的曲调直到最后，有人说它是爱情的象征因为单一的调子缠绵极致就像两个人生死追随.\n维基百科了一下它的故事,曲调大约是1680年完成由[约翰.帕赫贝尔](http://zh.wikipedia.org/wiki/%E7%BA%A6%E7%BF%B0%C2%B7%E5%B8%95%E8%B5%AB%E8%B4%9D%E5%B0%94)完成,帕赫贝尔在1681年，28岁时娶了芭芭拉盖布勒为妻,这大约也可以推出来这曲调是在他们恋爱时期完成.至少可以说明这曲调里面有描述爱情的缠绵.\n\n[xiami]http://www.xiami.com/song/2776475[/xiami]\n\n上面的这首曲子是我喜欢的一首Canon,曲子是在圣诞节的背景烘托下诞生的.摇滚+高昂的女声让你不知不觉的跟着哼唱.","source":"_posts/Canon卡农.md","raw":"title: \"Canon卡农\"\ndate: 2013-12-09 11:48:32\ntags:\nid: 38\ncategories:\n  - 听的世界\n---\n\nCanno(卡农)一种单一声部反反复复追逐另一声部的曲调直到最后，有人说它是爱情的象征因为单一的调子缠绵极致就像两个人生死追随.\n维基百科了一下它的故事,曲调大约是1680年完成由[约翰.帕赫贝尔](http://zh.wikipedia.org/wiki/%E7%BA%A6%E7%BF%B0%C2%B7%E5%B8%95%E8%B5%AB%E8%B4%9D%E5%B0%94)完成,帕赫贝尔在1681年，28岁时娶了芭芭拉盖布勒为妻,这大约也可以推出来这曲调是在他们恋爱时期完成.至少可以说明这曲调里面有描述爱情的缠绵.\n\n[xiami]http://www.xiami.com/song/2776475[/xiami]\n\n上面的这首曲子是我喜欢的一首Canon,曲子是在圣诞节的背景烘托下诞生的.摇滚+高昂的女声让你不知不觉的跟着哼唱.","slug":"Canon卡农","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j4x004kq623k5w8vdo9"},{"title":"C++程序与内存","date":"2014-05-22T10:31:55.000Z","id":"260","_content":"\n这里所指的程序是又叫源代码指的电脑中要做某件事情的步骤.当然还有个应用程序的东西，它是程序代码通过编译器根据不同设置编译出来的一个文件.内存值的是电脑的运行内存就是RAM,比如你的电脑有2G内存那么这个电脑的运行内存就是2G.那么程序与内存到底是个什么关系呢？比如有人说这个应用程序占了我电脑50M内存，其实这就是说电脑的内存容量被消耗了5OM.这里从程序员也就是应用功能实现者的角度来说程序与内存的关系.\n\n<!--more-->其实程序在内存中存储的格式是通过二进制0或1的位(bit)来存储的,一般的机器是通过8位bit为一个字节(byte),在C++中基础类型(bool、char、short、int、long、float、double)都是通过最小的占用空间来分配类型存储空间的，具体的分配数值根据各个编译器的情况来决定的。比如：char 占用1字节的空间在内存中就是8位，一般int 占用4个字节就是在内存中就是32位。一般基础的容器类型像数组和自定义类型的占用空间大小都是根绝元素具体类型大小的一个总和，可以通过sizeof()方法来获取类型具体占用空间的大小。对象类型分配的字节空间在内存中都有一个16进制的地址符来对应的.具体有多少个地址符这个根据机器的内存大小来分配的.\n\n在程序运行时内存会给程序分配三个空间:堆，栈，静态内存,下边就说明它们是什么？\n堆：就是自由存储的空间程序通过某种方式需要放共享对象的地方，比如：new实例化一个类时内存分配的空间，在不要使用该对象时,堆使用的空间编译器不会自动回收需要显示在程序中释放和销毁对象占用的空间,不过现在大部分语言如Java、ActionScrtip的编译器都有自动回收机制，所以就不需要担心自己在有时候不会释放未使用对象而造成的内存泄漏（程序运行时机器的内存一直增加并且未把不使用的对象释放掉），结果就会使应用崩溃并不能正常使用.但是在C++中 必须显示调用delete来释放存储在堆中的变量所占用的空间.\n栈：只在程序运行块时才存在,但栈内存会在不使用块的时候被由编译器自动回收。\n静态内存：的里面存储的时全局和局部的静态变量或方法（static）和常量（const）等，这部分占用空间会一直运行到程序结束时才会被释放回收。\n\n还有就是不得不说下指针和引用了，指针就是存放变量在内存中地址的变量，而引用则时变量的另外一个名字,定义引用时程序把引用和初始值就绑定了,定义引用必须被初始化给一个变量并且类型必须和变量类型一致,引用不是一个对象不能定义引用的引用,引用初始化值后不可以更改.而指针则可以指向不同的对象但必须类型必须和初始化值对象的类型一致。\n\n那么堆栈还有静态空间在具体程序中是什么样子呢?用代码来说明\n<pre class=\"lang:c++ decode:true\">#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nusing namespace std;\n\nstatic int count=1; //存储在静态内存里,在程序运行结束后释放\n\nclass Person{\n    string name;\n    int age;\npublic:\n    Person(string nVal,int aVal):name(nVal),age(aVal){};\n    std::string getName();\n    int getAge();\n};\n\nstring Person::getName()\n{\n    return name;\n}\n\nint Person::getAge()\n{\n    return age;\n}\n\nvoid sayHello(Person p)\n{\n    Person p1(\"T1\",28);//运行到这里的时候存放在栈内存中,当程序运行sayHello函数结束时被释放\n    cout&lt;&lt;\"Name:\"&lt;&lt;p1.getName()&lt;&lt;\"Age:\"&lt;&lt;p1.getAge()&lt;&lt;endl;\n}\n\nPerson getPerson(string nameVal,int ageVal)\n{\n  Person result(nameVal,ageVal);//在函数体运行结束时释放\n  return result;\n}\nint main()\n{\n    Person p2(\"T2\",12);//这里的p2变量生命周期是main函数结束\n    sayHello(p2);\n    /**这里其实时给P3拷贝了一个和函数体执行时相同的数据的Person类实例,\n    如果这里返回的是函数的临时变量的引用或指针,那么会出现未定义**/\n    Person p3 = getPerson();\n\n    auto p = new Person('P',1);//存放在堆内存中\n    delete p;//释放了堆内存中p所指向Peson对象所占用的空间\n    p= nullptr;//置空了Person类型指针值\n    return 0;\n}</pre>","source":"_posts/C++程序与内存.md","raw":"title: \"C++程序与内存\"\ndate: 2014-05-22 18:31:55\ntags:\nid: 260\ncategories: 编程技术\ntags: C++\n---\n\n这里所指的程序是又叫源代码指的电脑中要做某件事情的步骤.当然还有个应用程序的东西，它是程序代码通过编译器根据不同设置编译出来的一个文件.内存值的是电脑的运行内存就是RAM,比如你的电脑有2G内存那么这个电脑的运行内存就是2G.那么程序与内存到底是个什么关系呢？比如有人说这个应用程序占了我电脑50M内存，其实这就是说电脑的内存容量被消耗了5OM.这里从程序员也就是应用功能实现者的角度来说程序与内存的关系.\n\n<!--more-->其实程序在内存中存储的格式是通过二进制0或1的位(bit)来存储的,一般的机器是通过8位bit为一个字节(byte),在C++中基础类型(bool、char、short、int、long、float、double)都是通过最小的占用空间来分配类型存储空间的，具体的分配数值根据各个编译器的情况来决定的。比如：char 占用1字节的空间在内存中就是8位，一般int 占用4个字节就是在内存中就是32位。一般基础的容器类型像数组和自定义类型的占用空间大小都是根绝元素具体类型大小的一个总和，可以通过sizeof()方法来获取类型具体占用空间的大小。对象类型分配的字节空间在内存中都有一个16进制的地址符来对应的.具体有多少个地址符这个根据机器的内存大小来分配的.\n\n在程序运行时内存会给程序分配三个空间:堆，栈，静态内存,下边就说明它们是什么？\n堆：就是自由存储的空间程序通过某种方式需要放共享对象的地方，比如：new实例化一个类时内存分配的空间，在不要使用该对象时,堆使用的空间编译器不会自动回收需要显示在程序中释放和销毁对象占用的空间,不过现在大部分语言如Java、ActionScrtip的编译器都有自动回收机制，所以就不需要担心自己在有时候不会释放未使用对象而造成的内存泄漏（程序运行时机器的内存一直增加并且未把不使用的对象释放掉），结果就会使应用崩溃并不能正常使用.但是在C++中 必须显示调用delete来释放存储在堆中的变量所占用的空间.\n栈：只在程序运行块时才存在,但栈内存会在不使用块的时候被由编译器自动回收。\n静态内存：的里面存储的时全局和局部的静态变量或方法（static）和常量（const）等，这部分占用空间会一直运行到程序结束时才会被释放回收。\n\n还有就是不得不说下指针和引用了，指针就是存放变量在内存中地址的变量，而引用则时变量的另外一个名字,定义引用时程序把引用和初始值就绑定了,定义引用必须被初始化给一个变量并且类型必须和变量类型一致,引用不是一个对象不能定义引用的引用,引用初始化值后不可以更改.而指针则可以指向不同的对象但必须类型必须和初始化值对象的类型一致。\n\n那么堆栈还有静态空间在具体程序中是什么样子呢?用代码来说明\n<pre class=\"lang:c++ decode:true\">#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nusing namespace std;\n\nstatic int count=1; //存储在静态内存里,在程序运行结束后释放\n\nclass Person{\n    string name;\n    int age;\npublic:\n    Person(string nVal,int aVal):name(nVal),age(aVal){};\n    std::string getName();\n    int getAge();\n};\n\nstring Person::getName()\n{\n    return name;\n}\n\nint Person::getAge()\n{\n    return age;\n}\n\nvoid sayHello(Person p)\n{\n    Person p1(\"T1\",28);//运行到这里的时候存放在栈内存中,当程序运行sayHello函数结束时被释放\n    cout&lt;&lt;\"Name:\"&lt;&lt;p1.getName()&lt;&lt;\"Age:\"&lt;&lt;p1.getAge()&lt;&lt;endl;\n}\n\nPerson getPerson(string nameVal,int ageVal)\n{\n  Person result(nameVal,ageVal);//在函数体运行结束时释放\n  return result;\n}\nint main()\n{\n    Person p2(\"T2\",12);//这里的p2变量生命周期是main函数结束\n    sayHello(p2);\n    /**这里其实时给P3拷贝了一个和函数体执行时相同的数据的Person类实例,\n    如果这里返回的是函数的临时变量的引用或指针,那么会出现未定义**/\n    Person p3 = getPerson();\n\n    auto p = new Person('P',1);//存放在堆内存中\n    delete p;//释放了堆内存中p所指向Peson对象所占用的空间\n    p= nullptr;//置空了Person类型指针值\n    return 0;\n}</pre>","slug":"C++程序与内存","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j50004mq623491v2t0a"},{"title":"Blog折腾记-Octopress篇","date":"2015-05-17T11:34:09.000Z","_content":"\n从wordpress到jekyll然后到hexo到octopress,也不知道在寻找什么？总是不停的折腾blog.也许这是最后一次折腾咯，也有可能这不会是最后一次。\n\n总是在寻找最简洁和简单的工具和方式来表达自己，也许这一次找到咯octopress+markdown+github。\n<!-- more-->\n###安装步骤：\n\n``` \n\t//下载源码库\n\tgit clone git://github.com/imathis/octopress.git octopress\n\tcd octopress\n\n\tgem install bundler\n\tbundle install\n\n\trake install\n```\n\n##配置文件\n\n修改目录下的文件：_config.yml \n\n## 替换google字体文件CDN服务路径\n国内你懂的禁用咯google fonts导致网站连接不上字体\n\n修改source/_includes/custom/head.html和source/_includes/head.html里的\n\nhttp://fonts.googleapis.com/ 到 http://fonts.useso.com/\n\n## 基本命令\n- 新建post 文章\n\n```\n\trake new_post[\"文章标题\"]\n\n```\n\n- 新建页面 page\n\n```\n\trake new_page[\"页面名\"]\n\n```\n- 生成静态文件和预览\n```\n\trake generate #生成静态文件\n\trake watch #对有改动的观察\n\trake preview #本地预览\n\n```\n\n- 发布\n```\n\trake deploy\n```\n\n\n## github设置\n```\n\trake setup_github_pages\n```\n\n###设置域名\n\t\n\t在目录下soucres文件下创建一个CNAME的文件，并写进你的域名\n\t```\n\t\techo 'your-domain.com' >> source/CNAME\n\t\techo 'www.your-domain.com' >> source/CNAME\n\t```\n\n基本安装的命令就如上所述,每次写完文章rake deploy一下多爽呀,让我们一起来享受像hacker一样写作吧!","source":"_posts/Blog折腾记-Octopress篇.md","raw":"title: \"Blog折腾记-Octopress篇\"\ndate: 2015-05-17 19:34:09\ncategories: 技术工具\n---\n\n从wordpress到jekyll然后到hexo到octopress,也不知道在寻找什么？总是不停的折腾blog.也许这是最后一次折腾咯，也有可能这不会是最后一次。\n\n总是在寻找最简洁和简单的工具和方式来表达自己，也许这一次找到咯octopress+markdown+github。\n<!-- more-->\n###安装步骤：\n\n``` \n\t//下载源码库\n\tgit clone git://github.com/imathis/octopress.git octopress\n\tcd octopress\n\n\tgem install bundler\n\tbundle install\n\n\trake install\n```\n\n##配置文件\n\n修改目录下的文件：_config.yml \n\n## 替换google字体文件CDN服务路径\n国内你懂的禁用咯google fonts导致网站连接不上字体\n\n修改source/_includes/custom/head.html和source/_includes/head.html里的\n\nhttp://fonts.googleapis.com/ 到 http://fonts.useso.com/\n\n## 基本命令\n- 新建post 文章\n\n```\n\trake new_post[\"文章标题\"]\n\n```\n\n- 新建页面 page\n\n```\n\trake new_page[\"页面名\"]\n\n```\n- 生成静态文件和预览\n```\n\trake generate #生成静态文件\n\trake watch #对有改动的观察\n\trake preview #本地预览\n\n```\n\n- 发布\n```\n\trake deploy\n```\n\n\n## github设置\n```\n\trake setup_github_pages\n```\n\n###设置域名\n\t\n\t在目录下soucres文件下创建一个CNAME的文件，并写进你的域名\n\t```\n\t\techo 'your-domain.com' >> source/CNAME\n\t\techo 'www.your-domain.com' >> source/CNAME\n\t```\n\n基本安装的命令就如上所述,每次写完文章rake deploy一下多爽呀,让我们一起来享受像hacker一样写作吧!","slug":"Blog折腾记-Octopress篇","published":1,"updated":"2016-01-03T03:56:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j53004pq623wz5aaqm4"},{"title":"Blog Theme折腾记","date":"2016-08-13T16:00:00.000Z","_content":"\n发现很久没有更新Blog了,看着自己Blog的主题也渐渐的有点不是那么喜欢了,其实以前的那套主题用过一段时间后发现自己越来月偏向简洁的主题,于是就突发奇想自己用bootstrap css和jquery来做一个适合自己的blog主题吧.说做就做吧然后花了几个小时调整就出现了现在这样的一个Hexo Blog 主题.其实这个主题还有些没有达到预期的样子在慢慢调整了只能说这个样式算是第一版了.\n\n发现现在比起以前来做CSS、Html做一个网站的样式其实简单了不少还是多设备适配的爽了不少,这又算是一次对blog的折腾吧.\n\n\n\n\n","source":"_posts/Blog Theme折腾记.md","raw":"title: Blog Theme折腾记\ndate: 2016-08-14\ntags: 折腾\ncategories: 生活记录\n---\n\n发现很久没有更新Blog了,看着自己Blog的主题也渐渐的有点不是那么喜欢了,其实以前的那套主题用过一段时间后发现自己越来月偏向简洁的主题,于是就突发奇想自己用bootstrap css和jquery来做一个适合自己的blog主题吧.说做就做吧然后花了几个小时调整就出现了现在这样的一个Hexo Blog 主题.其实这个主题还有些没有达到预期的样子在慢慢调整了只能说这个样式算是第一版了.\n\n发现现在比起以前来做CSS、Html做一个网站的样式其实简单了不少还是多设备适配的爽了不少,这又算是一次对blog的折腾吧.\n\n\n\n\n","slug":"Blog Theme折腾记","published":1,"updated":"2016-08-14T07:10:16.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis400j55004rq623gbqz1yxp"},{"layout":"post","title":"淡薄的年味","date":"2016-02-14T12:13:15.000Z","_content":"渐渐回味小时的年,怀念那个大年三十晚有通宵的鞭炮声、赶庙会和舞狮舞龙及拿压岁钱的日子.今年的春节少了很多的热闹确多了一丝的忧愁,节前发生的各种事情让这个本是热闹的春节变得那么的淡薄冷清.\n<!--more-->\n春节本是一个家人团圆并且喜庆的日子,每年的节前大迁移不都是为了和远在故乡的家人吃上一顿温暖的晚餐和一起唠唠家常.却因为地区偏远的关系和每次回家短暂日子而产生对这个日子或多或少有些恐惧感，但唯一值得庆幸的地方是每次回家都能感受到故乡的变化从环境和亲朋好友家境都能看出来.故乡里留守更多的老人和儿童缺少一些熟悉的面孔.\n\n在走亲朋好友的日子里看着被那岁月风沙吹起的一道道皱纹渐进衰老的一张张熟悉的面孔感觉到是有那么的一丝陌生和淡泊,以前的日子里那相互联系的一丝关系还存在着双方的脑海中但随着多年不见的日子也渐渐的把那些记忆渐渐的吹散,现在的见面也只是一声问候和一支烟并停歇着聊几分钟天的时间里,这些隔阂的形成也是这么多年对方思维、习惯和文化环境变化所引起的.\n","source":"_posts/2016-02-14-new-year.md","raw":"---\nlayout: post\ntitle: \"淡薄的年味\"\ndate: 2016-02-14 20:13:15\ncategories: 生活记录\ntags: 春节\n---\n渐渐回味小时的年,怀念那个大年三十晚有通宵的鞭炮声、赶庙会和舞狮舞龙及拿压岁钱的日子.今年的春节少了很多的热闹确多了一丝的忧愁,节前发生的各种事情让这个本是热闹的春节变得那么的淡薄冷清.\n<!--more-->\n春节本是一个家人团圆并且喜庆的日子,每年的节前大迁移不都是为了和远在故乡的家人吃上一顿温暖的晚餐和一起唠唠家常.却因为地区偏远的关系和每次回家短暂日子而产生对这个日子或多或少有些恐惧感，但唯一值得庆幸的地方是每次回家都能感受到故乡的变化从环境和亲朋好友家境都能看出来.故乡里留守更多的老人和儿童缺少一些熟悉的面孔.\n\n在走亲朋好友的日子里看着被那岁月风沙吹起的一道道皱纹渐进衰老的一张张熟悉的面孔感觉到是有那么的一丝陌生和淡泊,以前的日子里那相互联系的一丝关系还存在着双方的脑海中但随着多年不见的日子也渐渐的把那些记忆渐渐的吹散,现在的见面也只是一声问候和一支烟并停歇着聊几分钟天的时间里,这些隔阂的形成也是这么多年对方思维、习惯和文化环境变化所引起的.\n","slug":"2016-02-14-new-year","published":1,"updated":"2016-02-15T05:33:47.000Z","comments":1,"photos":[],"link":"","_id":"cis400j57004uq623txn9dss8"},{"title":"包工头与小工","date":"2016-09-04T16:00:00.000Z","_content":"\n在一个城市需要修世界级高楼的项目里有一个包工头招了一群小工来拉砖,开始对小工们都是比较好的而且也很客气,而且别包工头都给小工们用背篓来背砖,这个包工头给小工们买的是二手的小拖车,刚进来的小工们都有这种感觉：“嗯，老板不错！！咱们要多多的努力给老板更多的回报”,而且包工头都是每天下午才来工地转上那么一圈.\n\n就这样过了一段时间在某天下午小工们还沉浸在这种要报答包工头的喜悦中的时候,包工头召集了所有的小工开会说咱们现在工程项目工期比较紧张咱们要延长工作时间而且每天的拉砖数量要增加到1000块,而且你们的晚饭我也包了,但你们需要拉砖到晚上21点.就这样小工们都没有回应的默认这次的会议主题,渐渐的小工们发现由于拉砖的数量增加,一下高大上的小车也渐渐的成为了一种负担,隔壁的小工用背篓能背10回1000块砖的时候并下班吃饭的时候,这边用小车一次才拉400块砖，但每天1000块砖的工作量还没有达到,所以小工们就长期的处于加班状态,而且每天包工头在快要下班的时候来到工地上,看见工地上只有自己的团队还在拉砖干活并会心的一笑.感觉很满意的离开了.在包工头会心的笑着离开的同时部分的小工们发现包工头离开了，赶紧的坐下来三五成群的抽起了烟并坐着休息,然而这时候天已经渐渐的黑了下来.\n\n渐渐的小工们发现工作效率的低效由于高大上的小车造成，小工们就这样边抱怨边拉着砖。其实每天包工头到工地上都听见了小工们的抱怨,但他心里也想着延长工作时间好了,反正我又没有什么损失都是你们的时间是我说了算而且还是免费的,渐渐的部分小工发现继续这样下去就是浪费自己的生命然后就辞职不干了,然后被隔壁的包工头给挖过去了。\n\n渐渐的包工头发现他开始招来的30人，最后只剩下了10个人不到就这样他又开始继续的去街边看是否有人要做小工,但现在的小工们变的很聪明了，他们利用网络知道了某个工地项目的包工头的口碑和是否有拖欠工资等情况,他们在被人招的时候也像以前谈好工资和时间就去上班了,他们问了下包工头所属的工地和项目然后网络上查了下这个包工头的口碑在决定是否去上班.在这样的前提下包工头发现小工也越来越难招了.最后包工头只剩下了一开跟着他4个老乡来维持拉砖并不停的找需要工作的小工.\n","source":"_posts/包工头与小工.md","raw":"title: 包工头与小工\ndate: 2016-09-05\ntags: \ncategories: 故事\n---\n\n在一个城市需要修世界级高楼的项目里有一个包工头招了一群小工来拉砖,开始对小工们都是比较好的而且也很客气,而且别包工头都给小工们用背篓来背砖,这个包工头给小工们买的是二手的小拖车,刚进来的小工们都有这种感觉：“嗯，老板不错！！咱们要多多的努力给老板更多的回报”,而且包工头都是每天下午才来工地转上那么一圈.\n\n就这样过了一段时间在某天下午小工们还沉浸在这种要报答包工头的喜悦中的时候,包工头召集了所有的小工开会说咱们现在工程项目工期比较紧张咱们要延长工作时间而且每天的拉砖数量要增加到1000块,而且你们的晚饭我也包了,但你们需要拉砖到晚上21点.就这样小工们都没有回应的默认这次的会议主题,渐渐的小工们发现由于拉砖的数量增加,一下高大上的小车也渐渐的成为了一种负担,隔壁的小工用背篓能背10回1000块砖的时候并下班吃饭的时候,这边用小车一次才拉400块砖，但每天1000块砖的工作量还没有达到,所以小工们就长期的处于加班状态,而且每天包工头在快要下班的时候来到工地上,看见工地上只有自己的团队还在拉砖干活并会心的一笑.感觉很满意的离开了.在包工头会心的笑着离开的同时部分的小工们发现包工头离开了，赶紧的坐下来三五成群的抽起了烟并坐着休息,然而这时候天已经渐渐的黑了下来.\n\n渐渐的小工们发现工作效率的低效由于高大上的小车造成，小工们就这样边抱怨边拉着砖。其实每天包工头到工地上都听见了小工们的抱怨,但他心里也想着延长工作时间好了,反正我又没有什么损失都是你们的时间是我说了算而且还是免费的,渐渐的部分小工发现继续这样下去就是浪费自己的生命然后就辞职不干了,然后被隔壁的包工头给挖过去了。\n\n渐渐的包工头发现他开始招来的30人，最后只剩下了10个人不到就这样他又开始继续的去街边看是否有人要做小工,但现在的小工们变的很聪明了，他们利用网络知道了某个工地项目的包工头的口碑和是否有拖欠工资等情况,他们在被人招的时候也像以前谈好工资和时间就去上班了,他们问了下包工头所属的工地和项目然后网络上查了下这个包工头的口碑在决定是否去上班.在这样的前提下包工头发现小工也越来越难招了.最后包工头只剩下了一开跟着他4个老乡来维持拉砖并不停的找需要工作的小工.\n","slug":"包工头与小工","published":1,"updated":"2016-09-07T13:58:36.000Z","_id":"cisq4ojtd00015j23a1espwvx","comments":1,"layout":"post","photos":[],"link":""},{"title":"二流子的机遇","date":"2016-09-06T16:00:00.000Z","_content":"\n在一个小村庄有个二流子(俗称游手好闲,没有工作的人),他每天除了赶集闲逛就是东看看西瞧瞧的,天黑了就回家睡觉能在别人家噌顿饭就吃一顿没有就饿着,他就这样的过着他所谓的宁愿饿死也不工作的思想渡过他的一生,但二流子还算是一个文化人只是后来因为村庄的政策变化导致了读到初中的他失学在家到现在算起来也有个7-8年吧.\n\n某天他在闲逛的时候碰见了他的老同学暂且叫他老古,老古和二流子同读了三年的小学,但老古后面因为家人迁移就也就转学了,老古家境也算富裕他老爸是一个公务员,后来老古高中毕业后就直接下海经商了,凭着他爸的关系生意上也是做的算是发家致富了.老古这次回乡下主要是想找找他童年的回忆,在他逛街的途中碰见二流子,开始二流子还暂时没有认出老古后来抱着看热闹的心理，因为平时乡下很少来穿着和讲话都这么洋气的人。渐渐的二流子才从别人的嘴里确认这个人是他的同学,二流子和老古相认后互相的就闹起了读书时候的情节和聊聊了家乡的变化,还顺带的请上二流子到了当地一家平时都很少去的餐厅吃了一顿饭又接着聊起来了.\n\n在餐厅酒足饭包后二流子渐渐的也变得和老古一样了起来,他发现自己也快要成为了城里人自己也很洋气，二流子的这个想法其实和接下来老古和他谈的事情也满接近的,老古看着二流子的状况也念在老同学一场就跟二流子说：“我刚好有个新开的工厂需要一个总经理来管理，不知道你想不想干？”，面对这样的对话二流子愣住了他的理想面对了考验,这时候他面前有了一条可以改变他命运的道路。他回答老古说让我考虑考虑就这样老古把他的联系方式给了二流子，他们也在这场聚餐中告别了.\n\n晚上回家后,二流子心里总是忐忑不安考虑着他的事业,带着这样的想法和心理上床睡觉了结果也就得到了一晚的失眠,渐渐的这样的想法一天两天的过去了,二流子还是没有拿定主意,白天在路上游荡的时候发现自己如同一具行尸走肉,因为他都在思考着他的前途,就这样过了三天二流子终于下定决心的要抛弃他的理想准备开始他的赚钱养家的道路.他通过老古给他的联系方式联系了老古后,接电话的是老古的秘书,秘书说老古出差去国外了要过一段时间才会回国,她会转告老古二流子的决定。\n\n时间就这样一天天过去了,二流子也没有接到老古的信息,二流子还是继续着他的理想..........\n","source":"_posts/二流子的机遇.md","raw":"title: 二流子的机遇\ndate: 2016-09-07\ntags:\ncategories: 故事\n---\n\n在一个小村庄有个二流子(俗称游手好闲,没有工作的人),他每天除了赶集闲逛就是东看看西瞧瞧的,天黑了就回家睡觉能在别人家噌顿饭就吃一顿没有就饿着,他就这样的过着他所谓的宁愿饿死也不工作的思想渡过他的一生,但二流子还算是一个文化人只是后来因为村庄的政策变化导致了读到初中的他失学在家到现在算起来也有个7-8年吧.\n\n某天他在闲逛的时候碰见了他的老同学暂且叫他老古,老古和二流子同读了三年的小学,但老古后面因为家人迁移就也就转学了,老古家境也算富裕他老爸是一个公务员,后来老古高中毕业后就直接下海经商了,凭着他爸的关系生意上也是做的算是发家致富了.老古这次回乡下主要是想找找他童年的回忆,在他逛街的途中碰见二流子,开始二流子还暂时没有认出老古后来抱着看热闹的心理，因为平时乡下很少来穿着和讲话都这么洋气的人。渐渐的二流子才从别人的嘴里确认这个人是他的同学,二流子和老古相认后互相的就闹起了读书时候的情节和聊聊了家乡的变化,还顺带的请上二流子到了当地一家平时都很少去的餐厅吃了一顿饭又接着聊起来了.\n\n在餐厅酒足饭包后二流子渐渐的也变得和老古一样了起来,他发现自己也快要成为了城里人自己也很洋气，二流子的这个想法其实和接下来老古和他谈的事情也满接近的,老古看着二流子的状况也念在老同学一场就跟二流子说：“我刚好有个新开的工厂需要一个总经理来管理，不知道你想不想干？”，面对这样的对话二流子愣住了他的理想面对了考验,这时候他面前有了一条可以改变他命运的道路。他回答老古说让我考虑考虑就这样老古把他的联系方式给了二流子，他们也在这场聚餐中告别了.\n\n晚上回家后,二流子心里总是忐忑不安考虑着他的事业,带着这样的想法和心理上床睡觉了结果也就得到了一晚的失眠,渐渐的这样的想法一天两天的过去了,二流子还是没有拿定主意,白天在路上游荡的时候发现自己如同一具行尸走肉,因为他都在思考着他的前途,就这样过了三天二流子终于下定决心的要抛弃他的理想准备开始他的赚钱养家的道路.他通过老古给他的联系方式联系了老古后,接电话的是老古的秘书,秘书说老古出差去国外了要过一段时间才会回国,她会转告老古二流子的决定。\n\n时间就这样一天天过去了,二流子也没有接到老古的信息,二流子还是继续着他的理想..........\n","slug":"二流子的机遇","published":1,"updated":"2016-09-07T13:57:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cissyzie200004q23ro5qclk1"},{"title":"写故事的原因","date":"2016-09-05T16:00:00.000Z","_content":"既然每天都那么的忙碌而枯燥无味的在平庸中渡过，不如来写点有趣的故事也未尝不可.这样既能让生活多点颜色，顺便也锻炼锻炼自己的思路和文笔.\n\n如果一时写故事顺带对看故事的人点启发也是蛮好的，毕竟作者想表达的东西可能和你所理解的不一样这就因人而异了.\n\n有些文字可能会在初试的时候表达的有些幼稚但有什么关系呢！你的目的并不是因为这些幼稚的文字就浅尝而止.你需要用这些幼稚的东西来为你铺叠厚实的前进道路.\n","source":"_posts/写故事的原因.md","raw":"title: 写故事的原因\ndate: 2016-09-06\ntags:\ncategories: 思考\n---\n既然每天都那么的忙碌而枯燥无味的在平庸中渡过，不如来写点有趣的故事也未尝不可.这样既能让生活多点颜色，顺便也锻炼锻炼自己的思路和文笔.\n\n如果一时写故事顺带对看故事的人点启发也是蛮好的，毕竟作者想表达的东西可能和你所理解的不一样这就因人而异了.\n\n有些文字可能会在初试的时候表达的有些幼稚但有什么关系呢！你的目的并不是因为这些幼稚的文字就浅尝而止.你需要用这些幼稚的东西来为你铺叠厚实的前进道路.\n","slug":"写故事的原因","published":1,"updated":"2016-09-07T14:05:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cissz9cjq00007l237xtlzu7n"}],"PostAsset":[],"PostCategory":[{"post_id":"cis400j010000q623eywz89i5","category_id":"cis400j070001q623qply5hui","_id":"cis400j0a0004q6232okhi2e8"},{"post_id":"cis400j1h000aq623mp9c3no4","category_id":"cis400j070001q623qply5hui","_id":"cis400j1j000bq623l27sew3f"},{"post_id":"cis400j1k000dq623dv2kew36","category_id":"cis400j070001q623qply5hui","_id":"cis400j1l000eq623gptla6iy"},{"post_id":"cis400j1n000gq6230i3qdiph","category_id":"cis400j070001q623qply5hui","_id":"cis400j1o000hq6234yhxrodn"},{"post_id":"cis400j1r000iq623as0cqkwf","category_id":"cis400j1s000jq623t8eynj4s","_id":"cis400j1t000kq6237c41vhqw"},{"post_id":"cis400j1u000lq623b20nup7e","category_id":"cis400j070001q623qply5hui","_id":"cis400j1v000mq623pporzd2k"},{"post_id":"cis400j1w000oq623vt21st9d","category_id":"cis400j070001q623qply5hui","_id":"cis400j1x000pq623454ijzan"},{"post_id":"cis400j1z000sq623btxab9tr","category_id":"cis400j070001q623qply5hui","_id":"cis400j20000tq623u3cam5sw"},{"post_id":"cis400j21000wq623qmu168st","category_id":"cis400j1s000jq623t8eynj4s","_id":"cis400j22000xq623lhqsb6b2"},{"post_id":"cis400j23000yq623a3096dn5","category_id":"cis400j25000zq623s3rh8h0h","_id":"cis400j250010q623in9xgnd1"},{"post_id":"cis400j280013q6238un3umo4","category_id":"cis400j290014q6230a1glmta","_id":"cis400j2a0015q623n5hhr8d8"},{"post_id":"cis400j2b0016q623vdupj6ne","category_id":"cis400j25000zq623s3rh8h0h","_id":"cis400j2c0017q623vxxwr79r"},{"post_id":"cis400j2f001bq6236eljc1ig","category_id":"cis400j2g001cq6235avqau7v","_id":"cis400j2h001dq623sk5oexnm"},{"post_id":"cis400j2h001eq623vtsj63x6","category_id":"cis400j2i001fq623rn0f2i0a","_id":"cis400j2i001gq62353a85puv"},{"post_id":"cis400j2l001jq623uwe0bguv","category_id":"cis400j070001q623qply5hui","_id":"cis400j2m001kq6238tdtxky8"},{"post_id":"cis400j2n001mq623n1wd9ag5","category_id":"cis400j25000zq623s3rh8h0h","_id":"cis400j2o001nq623nb7nipms"},{"post_id":"cis400j2p001oq6231b03mp0c","category_id":"cis400j25000zq623s3rh8h0h","_id":"cis400j2r001pq623c70v2cmh"},{"post_id":"cis400j2s001qq6236ji6j4se","category_id":"cis400j1s000jq623t8eynj4s","_id":"cis400j2t001rq623hh5fnep0"},{"post_id":"cis400j2u001sq623nmezfyou","category_id":"cis400j070001q623qply5hui","_id":"cis400j2w001tq623sy4qkzl0"},{"post_id":"cis400j2y001uq623ixnlxwqo","category_id":"cis400j25000zq623s3rh8h0h","_id":"cis400j2z001vq623xy7powu1"},{"post_id":"cis400j2z001wq6237bpsb4i1","category_id":"cis400j070001q623qply5hui","_id":"cis400j31001xq623spfbv2i8"},{"post_id":"cis400j330020q623gkaxlgm2","category_id":"cis400j1s000jq623t8eynj4s","_id":"cis400j340021q623hwm3pi8f"},{"post_id":"cis400j340023q6239pjmdi8r","category_id":"cis400j070001q623qply5hui","_id":"cis400j350024q623snq4whts"},{"post_id":"cis400j3b0027q623rti1qhwo","category_id":"cis400j070001q623qply5hui","_id":"cis400j3c0028q623uarnaj0q"},{"post_id":"cis400j3i002eq623r7em5d5g","category_id":"cis400j1s000jq623t8eynj4s","_id":"cis400j3i002fq623hec9y7zz"},{"post_id":"cis400j3l002lq623hkx3uoc7","category_id":"cis400j070001q623qply5hui","_id":"cis400j3m002mq623rwwdo6h0"},{"post_id":"cis400j3n002nq6237elr0f2l","category_id":"cis400j2g001cq6235avqau7v","_id":"cis400j3o002oq623ire7o9uy"},{"post_id":"cis400j3p002pq6233bwup3c9","category_id":"cis400j070001q623qply5hui","_id":"cis400j3p002qq623p6eht1ly"},{"post_id":"cis400j3q002rq623q6ohh90q","category_id":"cis400j070001q623qply5hui","_id":"cis400j3s002sq6233wao3yl0"},{"post_id":"cis400j3u002uq62358imvsa4","category_id":"cis400j290014q6230a1glmta","_id":"cis400j3v002vq623mi633nvw"},{"post_id":"cis400j3w002wq623nf5rymy2","category_id":"cis400j290014q6230a1glmta","_id":"cis400j3x002xq623f3jq0qsq"},{"post_id":"cis400j3y0030q623i931itoi","category_id":"cis400j25000zq623s3rh8h0h","_id":"cis400j3z0031q623vkry20qp"},{"post_id":"cis400j400034q623cj95h5uq","category_id":"cis400j2g001cq6235avqau7v","_id":"cis400j410035q623e2cvf1at"},{"post_id":"cis400j43003aq6233m82blhc","category_id":"cis400j44003bq623a0ruo8o8","_id":"cis400j45003eq623io0e8zos"},{"post_id":"cis400j45003gq623e14dpwwd","category_id":"cis400j25000zq623s3rh8h0h","_id":"cis400j46003hq623cf87svk8"},{"post_id":"cis400j48003iq623b3sr7eb4","category_id":"cis400j25000zq623s3rh8h0h","_id":"cis400j49003jq623q7it0sns"},{"post_id":"cis400j4b003mq623pi52gt9x","category_id":"cis400j44003bq623a0ruo8o8","_id":"cis400j4d003nq6235qb7tjk8"},{"post_id":"cis400j4f003qq623trr49am0","category_id":"cis400j44003bq623a0ruo8o8","_id":"cis400j4g003rq623xhhmw86z"},{"post_id":"cis400j4h003uq623ads45tep","category_id":"cis400j4i003vq623jnv1jm4u","_id":"cis400j4i003wq62345tc8qew"},{"post_id":"cis400j4j003xq6231w90ae8m","category_id":"cis400j2g001cq6235avqau7v","_id":"cis400j4l003yq623h6jo4sbu"},{"post_id":"cis400j4m0041q623a7oq6l01","category_id":"cis400j290014q6230a1glmta","_id":"cis400j4o0042q623i5dxe2u5"},{"post_id":"cis400j4p0048q6232jfwfc9s","category_id":"cis400j25000zq623s3rh8h0h","_id":"cis400j4q0049q623qehgiayh"},{"post_id":"cis400j4r004aq6236836htbj","category_id":"cis400j25000zq623s3rh8h0h","_id":"cis400j4s004bq623b08uxj8f"},{"post_id":"cis400j4x004kq623k5w8vdo9","category_id":"cis400j2i001fq623rn0f2i0a","_id":"cis400j4y004lq623yvhzxl44"},{"post_id":"cis400j50004mq623491v2t0a","category_id":"cis400j2g001cq6235avqau7v","_id":"cis400j51004nq623zibgh2sj"},{"post_id":"cis400j53004pq623wz5aaqm4","category_id":"cis400j25000zq623s3rh8h0h","_id":"cis400j54004qq6239f76gwzr"},{"post_id":"cis400j55004rq623gbqz1yxp","category_id":"cis400j070001q623qply5hui","_id":"cis400j56004sq6239mtq10aa"},{"post_id":"cis400j57004uq623txn9dss8","category_id":"cis400j070001q623qply5hui","_id":"cis400j58004vq623kdcfqceq"},{"post_id":"cis400j3f002bq623bzqd631f","category_id":"cis400j25000zq623s3rh8h0h","_id":"cis427s4800002523hkxixi4c"},{"post_id":"cis400j4t004cq623g0og1ijx","category_id":"cis400j25000zq623s3rh8h0h","_id":"cis427s4y00012523lpeffckr"},{"post_id":"cis400j4v004gq623hm7aylrl","category_id":"cis400j25000zq623s3rh8h0h","_id":"cis427s51000225232b784pk9"},{"post_id":"cissyzie200004q23ro5qclk1","category_id":"cissyzie900014q231f0vgo7q","_id":"cissyziex00024q23ldh55y59"},{"post_id":"cisq4ojtd00015j23a1espwvx","category_id":"cissyzie900014q231f0vgo7q","_id":"cissz12x700005g232ux255x2"},{"post_id":"cissz9cjq00007l237xtlzu7n","category_id":"cissz9cjx00017l23d6gyti03","_id":"cissz9ckn00027l23s24ujtwy"}],"PostTag":[{"post_id":"cis400j010000q623eywz89i5","tag_id":"cis400j080002q623k6oapc6k","_id":"cis400j0a0003q623gpkt0n4n"},{"post_id":"cis400j1h000aq623mp9c3no4","tag_id":"cis400j080002q623k6oapc6k","_id":"cis400j1j000cq623srfc1x8u"},{"post_id":"cis400j1k000dq623dv2kew36","tag_id":"cis400j080002q623k6oapc6k","_id":"cis400j1l000fq623umktwhyi"},{"post_id":"cis400j1u000lq623b20nup7e","tag_id":"cis400j080002q623k6oapc6k","_id":"cis400j1v000nq623rhgn841u"},{"post_id":"cis400j1w000oq623vt21st9d","tag_id":"cis400j1x000qq623owxa7kwk","_id":"cis400j1y000rq623ymxc0n7g"},{"post_id":"cis400j1z000sq623btxab9tr","tag_id":"cis400j20000uq623tnlah6lw","_id":"cis400j20000vq62349qcfifr"},{"post_id":"cis400j260011q623qk3spd3x","tag_id":"cis400j080002q623k6oapc6k","_id":"cis400j270012q623m99ykxdh"},{"post_id":"cis400j2b0016q623vdupj6ne","tag_id":"cis400j20000uq623tnlah6lw","_id":"cis400j2d0019q6237meetyhf"},{"post_id":"cis400j2b0016q623vdupj6ne","tag_id":"cis400j2d0018q623bq6ejit5","_id":"cis400j2d001aq623zvo2w2fp"},{"post_id":"cis400j2j001hq623beq0xq79","tag_id":"cis400j080002q623k6oapc6k","_id":"cis400j2k001iq623ldxhpkik"},{"post_id":"cis400j2l001jq623uwe0bguv","tag_id":"cis400j080002q623k6oapc6k","_id":"cis400j2m001lq623oon2hle2"},{"post_id":"cis400j2z001wq6237bpsb4i1","tag_id":"cis400j31001yq623hz9c58cg","_id":"cis400j31001zq623noa5sh0p"},{"post_id":"cis400j330020q623gkaxlgm2","tag_id":"cis400j080002q623k6oapc6k","_id":"cis400j340022q623rljgl4e7"},{"post_id":"cis400j360025q6231ov86xpy","tag_id":"cis400j080002q623k6oapc6k","_id":"cis400j390026q623pzk7xj1o"},{"post_id":"cis400j3b0027q623rti1qhwo","tag_id":"cis400j3d0029q62367q0eyvj","_id":"cis400j3d002aq623pw6zld6r"},{"post_id":"cis400j3f002bq623bzqd631f","tag_id":"cis400j20000uq623tnlah6lw","_id":"cis400j3h002dq62397tifcrs"},{"post_id":"cis400j3i002eq623r7em5d5g","tag_id":"cis400j080002q623k6oapc6k","_id":"cis400j3k002iq623ve8dums2"},{"post_id":"cis400j3i002eq623r7em5d5g","tag_id":"cis400j3j002gq623ky6brqbz","_id":"cis400j3k002jq623usg8vdwi"},{"post_id":"cis400j3i002eq623r7em5d5g","tag_id":"cis400j3j002hq6230yqrtv01","_id":"cis400j3k002kq623492fc89m"},{"post_id":"cis400j3q002rq623q6ohh90q","tag_id":"cis400j080002q623k6oapc6k","_id":"cis400j3s002tq623clt0hanw"},{"post_id":"cis400j3w002wq623nf5rymy2","tag_id":"cis400j3x002yq623x8kestkw","_id":"cis400j3x002zq623l5635ioy"},{"post_id":"cis400j3y0030q623i931itoi","tag_id":"cis400j3z0032q623rb9up11c","_id":"cis400j3z0033q6239ghwzdw4"},{"post_id":"cis400j400034q623cj95h5uq","tag_id":"cis400j410036q6232pr6cc88","_id":"cis400j420038q623cck0ysbq"},{"post_id":"cis400j400034q623cj95h5uq","tag_id":"cis400j420037q6238onb0sbs","_id":"cis400j420039q623696ayhc2"},{"post_id":"cis400j43003aq6233m82blhc","tag_id":"cis400j420037q6238onb0sbs","_id":"cis400j44003dq6231oubx9e2"},{"post_id":"cis400j43003aq6233m82blhc","tag_id":"cis400j44003cq623amu2xska","_id":"cis400j45003fq623xlol04jv"},{"post_id":"cis400j48003iq623b3sr7eb4","tag_id":"cis400j44003cq623amu2xska","_id":"cis400j4a003kq6237vi383i2"},{"post_id":"cis400j48003iq623b3sr7eb4","tag_id":"cis400j420037q6238onb0sbs","_id":"cis400j4a003lq623xa9lu3yv"},{"post_id":"cis400j4b003mq623pi52gt9x","tag_id":"cis400j4d003oq623qygv8asf","_id":"cis400j4e003pq623yi1wfkws"},{"post_id":"cis400j4f003qq623trr49am0","tag_id":"cis400j4g003sq623ap31i9xy","_id":"cis400j4g003tq623jvxhegbf"},{"post_id":"cis400j4j003xq6231w90ae8m","tag_id":"cis400j44003cq623amu2xska","_id":"cis400j4l003zq623sy5frwr4"},{"post_id":"cis400j4j003xq6231w90ae8m","tag_id":"cis400j410036q6232pr6cc88","_id":"cis400j4l0040q623pfmx1f09"},{"post_id":"cis400j4m0041q623a7oq6l01","tag_id":"cis400j4o0043q62347qoivpm","_id":"cis400j4o0045q623rajoe5bc"},{"post_id":"cis400j4m0041q623a7oq6l01","tag_id":"cis400j3x002yq623x8kestkw","_id":"cis400j4p0046q6231gzx2tz1"},{"post_id":"cis400j4m0041q623a7oq6l01","tag_id":"cis400j4o0044q623hjix3uul","_id":"cis400j4p0047q623mktyioai"},{"post_id":"cis400j4t004cq623g0og1ijx","tag_id":"cis400j4u004eq623nz5lxxh9","_id":"cis400j4u004fq623aqz9ad6e"},{"post_id":"cis400j4v004gq623hm7aylrl","tag_id":"cis400j4w004iq6236i9e58bh","_id":"cis400j4w004jq6230eezawtu"},{"post_id":"cis400j50004mq623491v2t0a","tag_id":"cis400j410036q6232pr6cc88","_id":"cis400j51004oq623cmtssvgt"},{"post_id":"cis400j55004rq623gbqz1yxp","tag_id":"cis400j20000uq623tnlah6lw","_id":"cis400j56004tq623fr3ek6jk"},{"post_id":"cis400j57004uq623txn9dss8","tag_id":"cis400j58004wq6239r3cfxro","_id":"cis400j59004xq623vck71jsk"}],"Tag":[{"name":"胡思乱想","_id":"cis400j080002q623k6oapc6k"},{"name":"美剧","_id":"cis400j1x000qq623owxa7kwk"},{"name":"折腾","_id":"cis400j20000uq623tnlah6lw"},{"name":"Raspberry PI","_id":"cis400j2d0018q623bq6ejit5"},{"name":"计划和总结","_id":"cis400j31001yq623hz9c58cg"},{"name":"办证","_id":"cis400j3d0029q62367q0eyvj"},{"name":"Work","_id":"cis400j3j002gq623ky6brqbz"},{"name":"人工智能","_id":"cis400j3j002hq6230yqrtv01"},{"name":"时间管理","_id":"cis400j3x002yq623x8kestkw"},{"name":"git","_id":"cis400j3z0032q623rb9up11c"},{"name":"C++","_id":"cis400j410036q6232pr6cc88"},{"name":"cocos2d-x","_id":"cis400j420037q6238onb0sbs"},{"name":"Lua","_id":"cis400j44003cq623amu2xska"},{"name":"图片资源","_id":"cis400j4d003oq623qygv8asf"},{"name":"OpenGLES","_id":"cis400j4g003sq623ap31i9xy"},{"name":"有序的组织","_id":"cis400j4o0043q62347qoivpm"},{"name":"信息管理","_id":"cis400j4o0044q623hjix3uul"},{"name":"Emacs","_id":"cis400j4u004eq623nz5lxxh9"},{"name":"CentOS7","_id":"cis400j4w004iq6236i9e58bh"},{"name":"春节","_id":"cis400j58004wq6239r3cfxro"}]}}